!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon9
ALT	kern/console.c	242;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnfaultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	26;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	29;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	47;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	31;"	d	file:
C	kern/console.c	309;"	d	file:
CAPSLOCK	kern/console.c	244;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	412;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon8
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon8
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon8
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	241;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	27;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	25;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnfaultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	248;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	20;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	18;"	d	file:
ERROR	kern/lapic.c	40;"	d	file:
ESR	kern/lapic.c	21;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon2
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon2
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon2
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon2
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon2
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	45;"	d	file:
FIXED	kern/lapic.c	32;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon4
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon4
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon4
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon4
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon4
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon4
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon4
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon4
FS_MAGIC	inc/fs.h	56;"	d
FTYPE_DIR	inc/fs.h	51;"	d
FTYPE_REG	inc/fs.h	50;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open { \/\/Open req->req_path in mode req->req_omode$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read { \/\/Return the bytes read from the file to the caller$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	33;"	d	file:
ICRLO	kern/lapic.c	22;"	d	file:
ID	kern/lapic.c	15;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	23;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	151;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	28;"	d	file:
LINT0	kern/lapic.c	38;"	d	file:
LINT1	kern/lapic.c	39;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	41;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	94;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	44;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	238;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	245;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	30;"	d	file:
O_ACCMODE	inc/lib.h	124;"	d
O_CREAT	inc/lib.h	126;"	d
O_EXCL	inc/lib.h	128;"	d
O_MKDIR	inc/lib.h	129;"	d
O_RDONLY	inc/lib.h	121;"	d
O_RDWR	inc/lib.h	123;"	d
O_TRUNC	inc/lib.h	127;"	d
O_WRONLY	inc/lib.h	122;"	d
OpenFile	fs/serv.c	/^struct OpenFile { \/\/This memory is kept private to the file server.$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 24 20:44:37 EDT 2018$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	37;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	36;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	78;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	246;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	240;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	24;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	19;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	195;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	45;"	d	file:
TDCR	kern/lapic.c	46;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	44;"	d	file:
TIMER	kern/lapic.c	34;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	17;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	16;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	93;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	194;"	d	file:
X1	kern/lapic.c	35;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultio.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnfaultio.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/fs/fs.asm	/^	addr = (void *)ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/primespipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/sendpage.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/sh.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testshell.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnfaultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnfaultio.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 16;$/;"	d
base	obj/user/faultio.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 16;$/;"	d
base	obj/user/spawnfaultio.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnfaultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon7	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnfaultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnfaultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnfaultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultio.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnfaultio.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0 所有字节之和必须为0 ？？？$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0 校验和$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnfaultio.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnfaultio.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnfaultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR); \/\/memmove的参数得是虚拟地址$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon7	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnfaultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnfaultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultio.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnfaultio.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon10
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultio.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnfaultio.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st) \/\/stat状态？什么叫stat？$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^ dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnfaultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnfaultio.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^			env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultio.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnfaultio.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + ELF_Header->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultio.asm	/^				err = -err;$/;"	d
err	obj/user/faultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultio.asm	/^    err:$/;"	l
err	obj/user/faultio.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnfaultio.asm	/^				err = -err;$/;"	d
err	obj/user/spawnfaultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^    err:$/;"	l
err	obj/user/spawnfaultio.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultio.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnfaultio.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultio.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnfaultio.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultio.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnfaultio.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnfaultio.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 e0 11 00       	mov    $0x11e000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 e0 11 f0       	mov    $0xf011e000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 b0 00 00 00       	call   f01000ee <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	53                   	push   %ebx$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	68 60 62 10 f0       	push   $0xf0106260$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	e8 f9 36 00 00       	call   f010374e <cprintf>$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	85 db                	test   %ebx,%ebx$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	7e 11                	jle    f010006d <test_backtrace+0x2d>$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	50                   	push   %eax$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 d8 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	83 c4 10             	add    $0x10,%esp$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	eb 11                	jmp    f010007e <test_backtrace+0x3e>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	6a 00                	push   $0x0$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	6a 00                	push   $0x0$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	6a 00                	push   $0x0$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	e8 99 08 00 00       	call   f0100914 <mon_backtrace>$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	53                   	push   %ebx$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	68 7c 62 10 f0       	push   $0xf010627c$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 c2 36 00 00       	call   f010374e <cprintf>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c9                   	leave  $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	c3                   	ret    $/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094 <_panic>:$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	55                   	push   %ebp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 e5                	mov    %esp,%ebp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	56                   	push   %esi$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	53                   	push   %ebx$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	83 3d 80 2e 21 f0 00 	cmpl   $0x0,0xf0212e80$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	75 3a                	jne    f01000df <_panic+0x4b>$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	89 35 80 2e 21 f0    	mov    %esi,0xf0212e80$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	fa                   	cli    $/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	fc                   	cld    $/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	e8 09 5b 00 00       	call   f0105bbe <cpunum>$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	50                   	push   %eax$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	68 04 63 10 f0       	push   $0xf0106304$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	e8 88 36 00 00       	call   f010374e <cprintf>$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	53                   	push   %ebx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	56                   	push   %esi$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	e8 58 36 00 00       	call   f0103728 <vcprintf>$/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	c7 04 24 f5 74 10 f0 	movl   $0xf01074f5,(%esp)$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	e8 72 36 00 00       	call   f010374e <cprintf>$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	6a 00                	push   $0x0$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	e8 ce 08 00 00       	call   f01009b7 <monitor>$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	eb f1                	jmp    f01000df <_panic+0x4b>$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee <i386_init>:$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	55                   	push   %ebp$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	53                   	push   %ebx$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	e8 aa 05 00 00       	call   f01006a4 <cons_init>$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	68 97 62 10 f0       	push   $0xf0106297$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	e8 42 36 00 00       	call   f010374e <cprintf>$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	e8 61 12 00 00       	call   f0101372 <mem_init>$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	e8 66 2e 00 00       	call   f0102f7c <env_init>$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	e8 15 37 00 00       	call   f0103830 <trap_init>$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	e8 94 57 00 00       	call   f01058b4 <mp_init>$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	e8 b4 5a 00 00       	call   f0105bd9 <lapic_init>$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	e8 4b 35 00 00       	call   f0103675 <pic_init>$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	c7 04 24 c0 03 12 f0 	movl   $0xf01203c0,(%esp)$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	e8 f6 5c 00 00       	call   f0105e2c <spin_lock>$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	83 3d 88 2e 21 f0 07 	cmpl   $0x7,0xf0212e88$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	77 19                	ja     f010015b <i386_init+0x6d>$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	68 81 00 00 00       	push   $0x81$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	68 b2 62 10 f0       	push   $0xf01062b2$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	e8 39 ff ff ff       	call   f0100094 <_panic>$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	b8 1a 58 10 f0       	mov    $0xf010581a,%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	2d a0 57 10 f0       	sub    $0xf01057a0,%eax$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	50                   	push   %eax$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	68 a0 57 10 f0       	push   $0xf01057a0$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	e8 73 54 00 00       	call   f01055eb <memmove>$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	83 c4 10             	add    $0x10,%esp$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	bb 20 30 21 f0       	mov    $0xf0213020,%ebx$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	eb 5b                	jmp    f01001dd <i386_init+0xef>$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	e8 37 5a 00 00       	call   f0105bbe <cpunum>$/;"	l
f0100187	obj/kern/kernel.asm	/^f0100187:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	74 47                	je     f01001da <i386_init+0xec>$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	89 d8                	mov    %ebx,%eax$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	2d 20 30 21 f0       	sub    $0xf0213020,%eax$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	05 00 c0 21 f0       	add    $0xf021c000,%eax$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	a3 84 2e 21 f0       	mov    %eax,0xf0212e84$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	50                   	push   %eax$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	68 be 62 10 f0       	push   $0xf01062be$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	e8 90 35 00 00       	call   f010374e <cprintf>$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	68 00 70 00 00       	push   $0x7000$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	50                   	push   %eax$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	e8 58 5b 00 00       	call   f0105d27 <lapic_startap>$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	75 f8                	jne    f01001d2 <i386_init+0xe4>$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	6b 05 c4 33 21 f0 74 	imul   $0x74,0xf02133c4,%eax$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	72 95                	jb     f0100182 <i386_init+0x94>$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	6a 01                	push   $0x1$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	68 a8 08 1d f0       	push   $0xf01d08a8$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	e8 54 2f 00 00       	call   f0103150 <env_create>$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	6a 00                	push   $0x0$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	68 50 18 20 f0       	push   $0xf0201850$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	e8 45 2f 00 00       	call   f0103150 <env_create>$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	e8 38 04 00 00       	call   f0100648 <kbd_intr>$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	e8 33 41 00 00       	call   f0104348 <sched_yield>$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215 <mp_main>:$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	55                   	push   %ebp$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	89 e5                	mov    %esp,%ebp$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	77 15                	ja     f010023c <mp_main+0x27>$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	50                   	push   %eax$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	68 9a 00 00 00       	push   $0x9a$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	68 b2 62 10 f0       	push   $0xf01062b2$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	e8 58 fe ff ff       	call   f0100094 <_panic>$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	e8 75 59 00 00       	call   f0105bbe <cpunum>$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	50                   	push   %eax$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	68 d3 62 10 f0       	push   $0xf01062d3$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	e8 f7 34 00 00       	call   f010374e <cprintf>$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	e8 7d 59 00 00       	call   f0105bd9 <lapic_init>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	e8 eb 2c 00 00       	call   f0102f4c <env_init_percpu>$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	e8 fc 34 00 00       	call   f0103762 <trap_init_percpu>$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	e8 53 59 00 00       	call   f0105bbe <cpunum>$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	81 c2 20 30 21 f0    	add    $0xf0213020,%edx$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	c7 04 24 c0 03 12 f0 	movl   $0xf01203c0,(%esp)$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	e8 a3 5b 00 00       	call   f0105e2c <spin_lock>$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	e8 ba 40 00 00       	call   f0104348 <sched_yield>$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e <_warn>:$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	55                   	push   %ebp$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	53                   	push   %ebx$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	68 e9 62 10 f0       	push   $0xf01062e9$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	e8 a6 34 00 00       	call   f010374e <cprintf>$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	53                   	push   %ebx$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	e8 74 34 00 00       	call   f0103728 <vcprintf>$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	c7 04 24 f5 74 10 f0 	movl   $0xf01074f5,(%esp)$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	e8 8e 34 00 00       	call   f010374e <cprintf>$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	c9                   	leave  $/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	c3                   	ret    $/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8 <serial_proc_data>:$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	55                   	push   %ebp$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	ec                   	in     (%dx),%al$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	a8 01                	test   $0x1,%al$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	74 0b                	je     f01002e0 <serial_proc_data+0x18>$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	ec                   	in     (%dx),%al$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	eb 05                	jmp    f01002e5 <serial_proc_data+0x1d>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	5d                   	pop    %ebp$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	c3                   	ret    $/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7 <cons_intr>:$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	55                   	push   %ebp$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	53                   	push   %ebx$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	89 c3                	mov    %eax,%ebx$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	eb 2b                	jmp    f010031d <cons_intr+0x36>$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	85 c0                	test   %eax,%eax$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	74 27                	je     f010031d <cons_intr+0x36>$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	8b 0d 24 22 21 f0    	mov    0xf0212224,%ecx$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	89 15 24 22 21 f0    	mov    %edx,0xf0212224$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	88 81 20 20 21 f0    	mov    %al,-0xfdedfe0(%ecx)$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	75 0a                	jne    f010031d <cons_intr+0x36>$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	c7 05 24 22 21 f0 00 	movl   $0x0,0xf0212224$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	00 00 00 $/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	ff d3                	call   *%ebx$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	75 ce                	jne    f01002f2 <cons_intr+0xb>$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	5b                   	pop    %ebx$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	5d                   	pop    %ebp$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	c3                   	ret    $/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a <kbd_proc_data>:$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	ec                   	in     (%dx),%al$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	a8 01                	test   $0x1,%al$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	0f 84 f8 00 00 00    	je     f0100430 <kbd_proc_data+0x106>$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	a8 20                	test   $0x20,%al$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	0f 85 f6 00 00 00    	jne    f0100436 <kbd_proc_data+0x10c>$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	ec                   	in     (%dx),%al$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	89 c2                	mov    %eax,%edx$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	3c e0                	cmp    $0xe0,%al$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	75 0d                	jne    f0100359 <kbd_proc_data+0x2f>$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	83 0d 00 20 21 f0 40 	orl    $0x40,0xf0212000$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	c3                   	ret    $/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	55                   	push   %ebp$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	89 e5                	mov    %esp,%ebp$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	53                   	push   %ebx$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	84 c0                	test   %al,%al$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	79 36                	jns    f010039a <kbd_proc_data+0x70>$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	8b 0d 00 20 21 f0    	mov    0xf0212000,%ecx$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	89 cb                	mov    %ecx,%ebx$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	85 db                	test   %ebx,%ebx$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	0f b6 82 c0 64 10 f0 	movzbl -0xfef9b40(%edx),%eax$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	f7 d0                	not    %eax$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	21 c8                	and    %ecx,%eax$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	a3 00 20 21 f0       	mov    %eax,0xf0212000$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	e9 a4 00 00 00       	jmp    f010043e <kbd_proc_data+0x114>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	8b 0d 00 20 21 f0    	mov    0xf0212000,%ecx$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	74 0e                	je     f01003b3 <kbd_proc_data+0x89>$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	89 c2                	mov    %eax,%edx$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	89 0d 00 20 21 f0    	mov    %ecx,0xf0212000$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	0f b6 82 c0 64 10 f0 	movzbl -0xfef9b40(%edx),%eax$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	0b 05 00 20 21 f0    	or     0xf0212000,%eax$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	0f b6 8a c0 63 10 f0 	movzbl -0xfef9c40(%edx),%ecx$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	31 c8                	xor    %ecx,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	a3 00 20 21 f0       	mov    %eax,0xf0212000$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	89 c1                	mov    %eax,%ecx$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	8b 0c 8d a0 63 10 f0 	mov    -0xfef9c60(,%ecx,4),%ecx$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	a8 08                	test   $0x8,%al$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	74 1b                	je     f0100403 <kbd_proc_data+0xd9>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	89 da                	mov    %ebx,%edx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	77 05                	ja     f01003f7 <kbd_proc_data+0xcd>$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	eb 0c                	jmp    f0100403 <kbd_proc_data+0xd9>$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	f7 d0                	not    %eax$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	a8 06                	test   $0x6,%al$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	75 33                	jne    f010043c <kbd_proc_data+0x112>$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	75 2b                	jne    f010043c <kbd_proc_data+0x112>$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	68 70 63 10 f0       	push   $0xf0106370$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	e8 30 33 00 00       	call   f010374e <cprintf>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	ee                   	out    %al,(%dx)$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	83 c4 10             	add    $0x10,%esp$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	89 d8                	mov    %ebx,%eax$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	eb 0e                	jmp    f010043e <kbd_proc_data+0x114>$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	c3                   	ret    $/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	c3                   	ret    $/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	89 d8                	mov    %ebx,%eax$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	c9                   	leave  $/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c3                   	ret    $/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443 <cons_putc>:$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	55                   	push   %ebp$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	89 e5                	mov    %esp,%ebp$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	57                   	push   %edi$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	56                   	push   %esi$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	53                   	push   %ebx$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	89 c7                	mov    %eax,%edi$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	eb 09                	jmp    f0100468 <cons_putc+0x25>$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	ec                   	in     (%dx),%al$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ec                   	in     (%dx),%al$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	ec                   	in     (%dx),%al$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	ec                   	in     (%dx),%al$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	89 f2                	mov    %esi,%edx$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	ec                   	in     (%dx),%al$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	a8 20                	test   $0x20,%al$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	75 08                	jne    f0100477 <cons_putc+0x34>$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	7e e8                	jle    f010045f <cons_putc+0x1c>$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	89 f8                	mov    %edi,%eax$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	ee                   	out    %al,(%dx)$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	eb 09                	jmp    f010049c <cons_putc+0x59>$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	89 ca                	mov    %ecx,%edx$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	ec                   	in     (%dx),%al$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	ec                   	in     (%dx),%al$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	ec                   	in     (%dx),%al$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	ec                   	in     (%dx),%al$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	89 f2                	mov    %esi,%edx$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	ec                   	in     (%dx),%al$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	7f 04                	jg     f01004ab <cons_putc+0x68>$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	84 c0                	test   %al,%al$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	79 e8                	jns    f0100493 <cons_putc+0x50>$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	ee                   	out    %al,(%dx)$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	ee                   	out    %al,(%dx)$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	ee                   	out    %al,(%dx)$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	89 fa                	mov    %edi,%edx$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	89 f8                	mov    %edi,%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	85 d2                	test   %edx,%edx$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	89 f8                	mov    %edi,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	74 74                	je     f0100556 <cons_putc+0x113>$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	7f 0a                	jg     f01004f1 <cons_putc+0xae>$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	74 14                	je     f0100500 <cons_putc+0xbd>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	e9 99 00 00 00       	jmp    f010058a <cons_putc+0x147>$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	74 3a                	je     f0100530 <cons_putc+0xed>$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	74 3d                	je     f0100538 <cons_putc+0xf5>$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	e9 8a 00 00 00       	jmp    f010058a <cons_putc+0x147>$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	0f b7 05 28 22 21 f0 	movzwl 0xf0212228,%eax$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	66 85 c0             	test   %ax,%ax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	0f 84 e6 00 00 00    	je     f01005f6 <cons_putc+0x1b3>$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	66 a3 28 22 21 f0    	mov    %ax,0xf0212228$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	8b 15 2c 22 21 f0    	mov    0xf021222c,%edx$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	eb 78                	jmp    f01005a8 <cons_putc+0x165>$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	66 83 05 28 22 21 f0 	addw   $0x50,0xf0212228$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	50 $/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	0f b7 05 28 22 21 f0 	movzwl 0xf0212228,%eax$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	66 a3 28 22 21 f0    	mov    %ax,0xf0212228$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	eb 52                	jmp    f01005a8 <cons_putc+0x165>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	e8 e3 fe ff ff       	call   f0100443 <cons_putc>$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	e8 d9 fe ff ff       	call   f0100443 <cons_putc>$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	e8 cf fe ff ff       	call   f0100443 <cons_putc>$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	e8 c5 fe ff ff       	call   f0100443 <cons_putc>$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	e8 bb fe ff ff       	call   f0100443 <cons_putc>$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	eb 1e                	jmp    f01005a8 <cons_putc+0x165>$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	0f b7 05 28 22 21 f0 	movzwl 0xf0212228,%eax$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	66 89 15 28 22 21 f0 	mov    %dx,0xf0212228$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	8b 15 2c 22 21 f0    	mov    0xf021222c,%edx$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	66 81 3d 28 22 21 f0 	cmpw   $0x7cf,0xf0212228$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	cf 07 $/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	76 43                	jbe    f01005f6 <cons_putc+0x1b3>$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	a1 2c 22 21 f0       	mov    0xf021222c,%eax$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	52                   	push   %edx$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	50                   	push   %eax$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	e8 1e 50 00 00       	call   f01055eb <memmove>$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	8b 15 2c 22 21 f0    	mov    0xf021222c,%edx$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	83 c0 02             	add    $0x2,%eax$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	39 d0                	cmp    %edx,%eax$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	75 f4                	jne    f01005e2 <cons_putc+0x19f>$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	66 83 2d 28 22 21 f0 	subw   $0x50,0xf0212228$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	50 $/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	8b 0d 30 22 21 f0    	mov    0xf0212230,%ecx$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	89 ca                	mov    %ecx,%edx$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	ee                   	out    %al,(%dx)$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	0f b7 1d 28 22 21 f0 	movzwl 0xf0212228,%ebx$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	89 d8                	mov    %ebx,%eax$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	89 f2                	mov    %esi,%edx$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	ee                   	out    %al,(%dx)$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	89 ca                	mov    %ecx,%edx$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	ee                   	out    %al,(%dx)$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 f2                	mov    %esi,%edx$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	ee                   	out    %al,(%dx)$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	5b                   	pop    %ebx$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	5e                   	pop    %esi$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	5f                   	pop    %edi$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	5d                   	pop    %ebp$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c3                   	ret    $/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c <serial_intr>:$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	80 3d 34 22 21 f0 00 	cmpb   $0x0,0xf0212234$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	74 11                	je     f0100646 <serial_intr+0x1a>$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	55                   	push   %ebp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	89 e5                	mov    %esp,%ebp$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	b8 c8 02 10 f0       	mov    $0xf01002c8,%eax$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	e8 a2 fc ff ff       	call   f01002e7 <cons_intr>$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	c9                   	leave  $/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	f3 c3                	repz ret $/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648 <kbd_intr>:$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	55                   	push   %ebp$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	89 e5                	mov    %esp,%ebp$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	b8 2a 03 10 f0       	mov    $0xf010032a,%eax$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	e8 8f fc ff ff       	call   f01002e7 <cons_intr>$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	c9                   	leave  $/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	c3                   	ret    $/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a <cons_getc>:$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	55                   	push   %ebp$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	89 e5                	mov    %esp,%ebp$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	e8 c7 ff ff ff       	call   f010062c <serial_intr>$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	e8 de ff ff ff       	call   f0100648 <kbd_intr>$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	a1 20 22 21 f0       	mov    0xf0212220,%eax$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	3b 05 24 22 21 f0    	cmp    0xf0212224,%eax$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	74 26                	je     f010069d <cons_getc+0x43>$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	89 15 20 22 21 f0    	mov    %edx,0xf0212220$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	0f b6 88 20 20 21 f0 	movzbl -0xfdedfe0(%eax),%ecx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	89 c8                	mov    %ecx,%eax$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	75 11                	jne    f01006a2 <cons_getc+0x48>$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	c7 05 20 22 21 f0 00 	movl   $0x0,0xf0212220$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	00 00 00 $/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	eb 05                	jmp    f01006a2 <cons_getc+0x48>$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	c9                   	leave  $/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	c3                   	ret    $/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4 <cons_init>:$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	55                   	push   %ebp$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	57                   	push   %edi$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	56                   	push   %esi$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	53                   	push   %ebx$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	5a a5 $/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	74 11                	je     f01006db <cons_init+0x37>$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	c7 05 30 22 21 f0 b4 	movl   $0x3b4,0xf0212230$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	03 00 00 $/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	eb 16                	jmp    f01006f1 <cons_init+0x4d>$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	c7 05 30 22 21 f0 d4 	movl   $0x3d4,0xf0212230$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	03 00 00 $/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	8b 3d 30 22 21 f0    	mov    0xf0212230,%edi$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	89 fa                	mov    %edi,%edx$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	ee                   	out    %al,(%dx)$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	89 da                	mov    %ebx,%edx$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	ec                   	in     (%dx),%al$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	89 fa                	mov    %edi,%edx$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	ee                   	out    %al,(%dx)$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	89 da                	mov    %ebx,%edx$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	ec                   	in     (%dx),%al$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	89 35 2c 22 21 f0    	mov    %esi,0xf021222c$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	09 c8                	or     %ecx,%eax$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	66 a3 28 22 21 f0    	mov    %ax,0xf0212228$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	e8 1c ff ff ff       	call   f0100648 <kbd_intr>$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	0f b7 05 a8 03 12 f0 	movzwl 0xf01203a8,%eax$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	50                   	push   %eax$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	e8 bc 2e 00 00       	call   f01035fd <irq_setmask_8259A>$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	89 f2                	mov    %esi,%edx$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	ee                   	out    %al,(%dx)$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	ee                   	out    %al,(%dx)$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	89 da                	mov    %ebx,%edx$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	ee                   	out    %al,(%dx)$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	ee                   	out    %al,(%dx)$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	ee                   	out    %al,(%dx)$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	ee                   	out    %al,(%dx)$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	ee                   	out    %al,(%dx)$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	ec                   	in     (%dx),%al$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	89 c1                	mov    %eax,%ecx$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	3c ff                	cmp    $0xff,%al$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	0f 95 05 34 22 21 f0 	setne  0xf0212234$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	89 f2                	mov    %esi,%edx$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	ec                   	in     (%dx),%al$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	89 da                	mov    %ebx,%edx$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	ec                   	in     (%dx),%al$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	74 21                	je     f01007d2 <cons_init+0x12e>$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	0f b7 05 a8 03 12 f0 	movzwl 0xf01203a8,%eax$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	50                   	push   %eax$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	e8 37 2e 00 00       	call   f01035fd <irq_setmask_8259A>$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	80 3d 34 22 21 f0 00 	cmpb   $0x0,0xf0212234$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	75 10                	jne    f01007e2 <cons_init+0x13e>$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	68 7c 63 10 f0       	push   $0xf010637c$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	e8 6f 2f 00 00       	call   f010374e <cprintf>$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	5b                   	pop    %ebx$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	5e                   	pop    %esi$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	5f                   	pop    %edi$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	5d                   	pop    %ebp$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	c3                   	ret    $/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea <cputchar>:$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	55                   	push   %ebp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	e8 4b fc ff ff       	call   f0100443 <cons_putc>$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	c9                   	leave  $/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	c3                   	ret    $/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa <getchar>:$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	55                   	push   %ebp$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	e8 55 fe ff ff       	call   f010065a <cons_getc>$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	85 c0                	test   %eax,%eax$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	74 f7                	je     f0100800 <getchar+0x6>$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	c9                   	leave  $/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	c3                   	ret    $/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b <iscons>:$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	55                   	push   %ebp$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	89 e5                	mov    %esp,%ebp$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	5d                   	pop    %ebp$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	c3                   	ret    $/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815 <mon_help>:$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	55                   	push   %ebp$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	89 e5                	mov    %esp,%ebp$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	68 c0 65 10 f0       	push   $0xf01065c0$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	68 de 65 10 f0       	push   $0xf01065de$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	68 e3 65 10 f0       	push   $0xf01065e3$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	e8 1f 2f 00 00       	call   f010374e <cprintf>$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	68 ac 66 10 f0       	push   $0xf01066ac$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	68 ec 65 10 f0       	push   $0xf01065ec$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	68 e3 65 10 f0       	push   $0xf01065e3$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	e8 08 2f 00 00       	call   f010374e <cprintf>$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	68 f5 65 10 f0       	push   $0xf01065f5$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	68 09 66 10 f0       	push   $0xf0106609$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	68 e3 65 10 f0       	push   $0xf01065e3$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	e8 f1 2e 00 00       	call   f010374e <cprintf>$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	c9                   	leave  $/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	c3                   	ret    $/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864 <mon_kerninfo>:$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	55                   	push   %ebp$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	89 e5                	mov    %esp,%ebp$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	68 13 66 10 f0       	push   $0xf0106613$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	e8 da 2e 00 00       	call   f010374e <cprintf>$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	68 d4 66 10 f0       	push   $0xf01066d4$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	e8 c8 2e 00 00       	call   f010374e <cprintf>$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	68 fc 66 10 f0       	push   $0xf01066fc$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	e8 b1 2e 00 00       	call   f010374e <cprintf>$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	68 41 62 10 00       	push   $0x106241$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	68 41 62 10 f0       	push   $0xf0106241$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	68 20 67 10 f0       	push   $0xf0106720$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	e8 9a 2e 00 00       	call   f010374e <cprintf>$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	68 00 20 21 00       	push   $0x212000$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	68 00 20 21 f0       	push   $0xf0212000$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	68 44 67 10 f0       	push   $0xf0106744$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	e8 83 2e 00 00       	call   f010374e <cprintf>$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	68 08 40 25 00       	push   $0x254008$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	68 08 40 25 f0       	push   $0xf0254008$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	e8 6c 2e 00 00       	call   f010374e <cprintf>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	b8 07 44 25 f0       	mov    $0xf0254407,%eax$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	85 c0                	test   %eax,%eax$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	50                   	push   %eax$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	68 8c 67 10 f0       	push   $0xf010678c$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	e8 41 2e 00 00       	call   f010374e <cprintf>$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	c9                   	leave  $/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	c3                   	ret    $/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914 <mon_backtrace>:$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	55                   	push   %ebp$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	89 e5                	mov    %esp,%ebp$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	57                   	push   %edi$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	56                   	push   %esi$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	53                   	push   %ebx$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	83 ec 48             	sub    $0x48,%esp$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	68 2c 66 10 f0       	push   $0xf010662c$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	e8 27 2e 00 00       	call   f010374e <cprintf>$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	89 ee                	mov    %ebp,%esi$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	83 c4 10             	add    $0x10,%esp$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	eb 78                	jmp    f01009a6 <mon_backtrace+0x92>$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	8d 5e 04             	lea    0x4(%esi),%ebx$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 c7                	mov    %eax,%edi$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	52                   	push   %edx$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	50                   	push   %eax$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	e8 52 41 00 00       	call   f0104a98 <debuginfo_eip>$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	57                   	push   %edi$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	56                   	push   %esi$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	68 3e 66 10 f0       	push   $0xf010663e$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	e8 f9 2d 00 00       	call   f010374e <cprintf>$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	8d 7e 18             	lea    0x18(%esi),%edi$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	83 c4 10             	add    $0x10,%esp$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	ff 33                	pushl  (%ebx)$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	68 58 66 10 f0       	push   $0xf0106658$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	e8 e1 2d 00 00       	call   f010374e <cprintf>$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	39 df                	cmp    %ebx,%edi$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	75 e7                	jne    f010095b <mon_backtrace+0x47>$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	50                   	push   %eax$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	68 5e 66 10 f0       	push   $0xf010665e$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	e8 ba 2d 00 00       	call   f010374e <cprintf>$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	68 f5 74 10 f0       	push   $0xf01074f5$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	e8 ad 2d 00 00       	call   f010374e <cprintf>$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	8b 36                	mov    (%esi),%esi$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	85 f6                	test   %esi,%esi$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	75 84                	jne    f010092e <mon_backtrace+0x1a>$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	5b                   	pop    %ebx$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	5e                   	pop    %esi$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	5f                   	pop    %edi$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	5d                   	pop    %ebp$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	c3                   	ret    $/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7 <monitor>:$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	55                   	push   %ebp$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	57                   	push   %edi$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	56                   	push   %esi$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	53                   	push   %ebx$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	68 b8 67 10 f0       	push   $0xf01067b8$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	e8 84 2d 00 00       	call   f010374e <cprintf>$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	c7 04 24 dc 67 10 f0 	movl   $0xf01067dc,(%esp)$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	e8 78 2d 00 00       	call   f010374e <cprintf>$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	74 0e                	je     f01009ed <monitor+0x36>$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	e8 14 33 00 00       	call   f0103cfe <print_trapframe>$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	68 6e 66 10 f0       	push   $0xf010666e$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	e8 35 49 00 00       	call   f010532f <readline>$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	89 c3                	mov    %eax,%ebx$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	85 c0                	test   %eax,%eax$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	74 ea                	je     f01009ed <monitor+0x36>$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	eb 0a                	jmp    f0100a1b <monitor+0x64>$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	89 f7                	mov    %esi,%edi$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	89 fe                	mov    %edi,%esi$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	84 c0                	test   %al,%al$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	74 63                	je     f0100a85 <monitor+0xce>$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	50                   	push   %eax$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	68 72 66 10 f0       	push   $0xf0106672$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	e8 2e 4b 00 00       	call   f0105561 <strchr>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	85 c0                	test   %eax,%eax$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	75 d7                	jne    f0100a11 <monitor+0x5a>$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	74 46                	je     f0100a85 <monitor+0xce>$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	75 14                	jne    f0100a58 <monitor+0xa1>$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	6a 10                	push   $0x10$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	68 77 66 10 f0       	push   $0xf0106677$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	e8 fb 2c 00 00       	call   f010374e <cprintf>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	eb 95                	jmp    f01009ed <monitor+0x36>$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	eb 03                	jmp    f0100a64 <monitor+0xad>$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	84 c0                	test   %al,%al$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	74 ae                	je     f0100a19 <monitor+0x62>$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	50                   	push   %eax$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	68 72 66 10 f0       	push   $0xf0106672$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	e8 e5 4a 00 00       	call   f0105561 <strchr>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	85 c0                	test   %eax,%eax$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	74 de                	je     f0100a61 <monitor+0xaa>$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	eb 94                	jmp    f0100a19 <monitor+0x62>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	00 $/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	85 f6                	test   %esi,%esi$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	0f 84 58 ff ff ff    	je     f01009ed <monitor+0x36>$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	ff 34 85 20 68 10 f0 	pushl  -0xfef97e0(,%eax,4)$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	e8 54 4a 00 00       	call   f0105503 <strcmp>$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	85 c0                	test   %eax,%eax$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	75 21                	jne    f0100ad7 <monitor+0x120>$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	52                   	push   %edx$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	56                   	push   %esi$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	ff 14 85 28 68 10 f0 	call   *-0xfef97d8(,%eax,4)$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	85 c0                	test   %eax,%eax$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	78 25                	js     f0100af7 <monitor+0x140>$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	e9 16 ff ff ff       	jmp    f01009ed <monitor+0x36>$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	75 bb                	jne    f0100a9a <monitor+0xe3>$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	68 94 66 10 f0       	push   $0xf0106694$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	e8 5f 2c 00 00       	call   f010374e <cprintf>$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	e9 f6 fe ff ff       	jmp    f01009ed <monitor+0x36>$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	5b                   	pop    %ebx$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	5e                   	pop    %esi$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	5f                   	pop    %edi$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	5d                   	pop    %ebp$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	c3                   	ret    $/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff <boot_alloc>:$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	55                   	push   %ebp$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	83 3d 38 22 21 f0 00 	cmpl   $0x0,0xf0212238$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	75 11                	jne    f0100b1c <boot_alloc+0x1d>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	ba 07 50 25 f0       	mov    $0xf0255007,%edx$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	89 15 38 22 21 f0    	mov    %edx,0xf0212238$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	8b 0d 38 22 21 f0    	mov    0xf0212238,%ecx$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	8d 94 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%edx$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	89 15 38 22 21 f0    	mov    %edx,0xf0212238$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	89 c8                	mov    %ecx,%eax$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	5d                   	pop    %ebp$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	c3                   	ret    $/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39 <nvram_read>:$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	55                   	push   %ebp$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	56                   	push   %esi$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	53                   	push   %ebx$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	50                   	push   %eax$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	e8 86 2a 00 00       	call   f01035cf <mc146818_read>$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	89 c6                	mov    %eax,%esi$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	e8 79 2a 00 00       	call   f01035cf <mc146818_read>$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	09 f0                	or     %esi,%eax$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	5b                   	pop    %ebx$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	5e                   	pop    %esi$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	5d                   	pop    %ebp$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	c3                   	ret    $/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62 <check_va2pa>:$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	89 d1                	mov    %edx,%ecx$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	a8 01                	test   $0x1,%al$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	74 52                	je     f0100bc0 <check_va2pa+0x5e>$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	3b 0d 88 2e 21 f0    	cmp    0xf0212e88,%ecx$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	72 1b                	jb     f0100b9b <check_va2pa+0x39>$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	55                   	push   %ebp$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	50                   	push   %eax$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	68 a6 03 00 00       	push   $0x3a6$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	e8 f9 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	89 c2                	mov    %eax,%edx$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	85 d2                	test   %edx,%edx$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	c3                   	ret    $/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c3                   	ret    $/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6 <check_page_free_list>:$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	55                   	push   %ebp$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	57                   	push   %edi$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	56                   	push   %esi$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	53                   	push   %ebx$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	84 c0                	test   %al,%al$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	0f 85 a0 02 00 00    	jne    f0100e77 <check_page_free_list+0x2b1>$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	e9 ad 02 00 00       	jmp    f0100e89 <check_page_free_list+0x2c3>$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	68 44 68 10 f0       	push   $0xf0106844$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	68 d6 02 00 00       	push   $0x2d6$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	e8 a1 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	89 c2                	mov    %eax,%edx$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	0f 95 c2             	setne  %dl$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	85 c0                	test   %eax,%eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	75 dc                	jne    f0100bff <check_page_free_list+0x39>$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	89 10                	mov    %edx,(%eax)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	a3 40 22 21 f0       	mov    %eax,0xf0212240$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	8b 1d 40 22 21 f0    	mov    0xf0212240,%ebx$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	eb 53                	jmp    f0100c9c <check_page_free_list+0xd6>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	89 c2                	mov    %eax,%edx$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	39 f2                	cmp    %esi,%edx$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	73 3a                	jae    f0100c9a <check_page_free_list+0xd4>$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	89 c2                	mov    %eax,%edx$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	72 12                	jb     f0100c7f <check_page_free_list+0xb9>$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	50                   	push   %eax$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	6a 58                	push   $0x58$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	e8 15 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	68 80 00 00 00       	push   $0x80$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	68 97 00 00 00       	push   $0x97$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	50                   	push   %eax$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	e8 07 49 00 00       	call   f010559e <memset>$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	85 db                	test   %ebx,%ebx$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	75 a9                	jne    f0100c49 <check_page_free_list+0x83>$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	e8 55 fe ff ff       	call   f0100aff <boot_alloc>$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	8b 15 40 22 21 f0    	mov    0xf0212240,%edx$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	8b 0d 90 2e 21 f0    	mov    0xf0212e90,%ecx$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	a1 88 2e 21 f0       	mov    0xf0212e88,%eax$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	e9 52 01 00 00       	jmp    f0100e26 <check_page_free_list+0x260>$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	73 19                	jae    f0100cf1 <check_page_free_list+0x12b>$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	68 ab 71 10 f0       	push   $0xf01071ab$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	68 f0 02 00 00       	push   $0x2f0$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	e8 a3 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	72 19                	jb     f0100d0f <check_page_free_list+0x149>$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	68 cc 71 10 f0       	push   $0xf01071cc$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	68 f1 02 00 00       	push   $0x2f1$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	e8 85 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	89 d0                	mov    %edx,%eax$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	a8 07                	test   $0x7,%al$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	74 19                	je     f0100d31 <check_page_free_list+0x16b>$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	68 68 68 10 f0       	push   $0xf0106868$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	68 f2 02 00 00       	push   $0x2f2$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	e8 63 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	85 c0                	test   %eax,%eax$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	75 19                	jne    f0100d54 <check_page_free_list+0x18e>$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	68 e0 71 10 f0       	push   $0xf01071e0$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	68 f5 02 00 00       	push   $0x2f5$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	e8 40 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	75 19                	jne    f0100d74 <check_page_free_list+0x1ae>$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	68 f1 71 10 f0       	push   $0xf01071f1$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	68 f6 02 00 00       	push   $0x2f6$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	e8 20 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	75 19                	jne    f0100d94 <check_page_free_list+0x1ce>$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	68 9c 68 10 f0       	push   $0xf010689c$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	68 f7 02 00 00       	push   $0x2f7$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	e8 00 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	75 19                	jne    f0100db4 <check_page_free_list+0x1ee>$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	68 0a 72 10 f0       	push   $0xf010720a$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	68 f8 02 00 00       	push   $0x2f8$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	e8 e0 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	0f 86 f1 00 00 00    	jbe    f0100eb0 <check_page_free_list+0x2ea>$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	89 c7                	mov    %eax,%edi$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	77 12                	ja     f0100ddb <check_page_free_list+0x215>$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	50                   	push   %eax$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	6a 58                	push   $0x58$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	e8 b9 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	0f 86 b6 00 00 00    	jbe    f0100ea0 <check_page_free_list+0x2da>$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	68 c0 68 10 f0       	push   $0xf01068c0$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	68 f9 02 00 00       	push   $0x2f9$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	e8 91 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	68 24 72 10 f0       	push   $0xf0107224$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	68 fb 02 00 00       	push   $0x2fb$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	e8 78 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	eb 03                	jmp    f0100e24 <check_page_free_list+0x25e>$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	8b 12                	mov    (%edx),%edx$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	85 d2                	test   %edx,%edx$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	0f 85 a6 fe ff ff    	jne    f0100cd4 <check_page_free_list+0x10e>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	85 f6                	test   %esi,%esi$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	7f 19                	jg     f0100e4b <check_page_free_list+0x285>$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	68 41 72 10 f0       	push   $0xf0107241$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	68 03 03 00 00       	push   $0x303$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	e8 49 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	85 db                	test   %ebx,%ebx$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	7f 19                	jg     f0100e68 <check_page_free_list+0x2a2>$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	68 53 72 10 f0       	push   $0xf0107253$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	68 04 03 00 00       	push   $0x304$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	e8 2c f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	68 08 69 10 f0       	push   $0xf0106908$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	e8 d9 28 00 00       	call   f010374e <cprintf>$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	eb 49                	jmp    f0100ec0 <check_page_free_list+0x2fa>$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	a1 40 22 21 f0       	mov    0xf0212240,%eax$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	85 c0                	test   %eax,%eax$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	0f 85 6f fd ff ff    	jne    f0100bf3 <check_page_free_list+0x2d>$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	e9 53 fd ff ff       	jmp    f0100bdc <check_page_free_list+0x16>$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	83 3d 40 22 21 f0 00 	cmpl   $0x0,0xf0212240$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	0f 84 46 fd ff ff    	je     f0100bdc <check_page_free_list+0x16>$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	e9 a1 fd ff ff       	jmp    f0100c41 <check_page_free_list+0x7b>$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	0f 85 76 ff ff ff    	jne    f0100e21 <check_page_free_list+0x25b>$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	e9 53 ff ff ff       	jmp    f0100e03 <check_page_free_list+0x23d>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	0f 85 61 ff ff ff    	jne    f0100e1c <check_page_free_list+0x256>$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	e9 43 ff ff ff       	jmp    f0100e03 <check_page_free_list+0x23d>$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	5b                   	pop    %ebx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	5e                   	pop    %esi$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	5f                   	pop    %edi$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	5d                   	pop    %ebp$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	c3                   	ret    $/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8 <page_init>:$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	55                   	push   %ebp$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	57                   	push   %edi$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	56                   	push   %esi$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	53                   	push   %ebx$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	e8 24 fc ff ff       	call   f0100aff <boot_alloc>$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	77 15                	ja     f0100ef7 <page_init+0x2f>$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	50                   	push   %eax$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	68 48 01 00 00       	push   $0x148$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	e8 9d f1 ff ff       	call   f0100094 <_panic>$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	8b 3d 40 22 21 f0    	mov    0xf0212240,%edi$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	bb 00 00 f6 ff       	mov    $0xfff60000,%ebx$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	e9 88 00 00 00       	jmp    f0100fa5 <page_init+0xdd>$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	85 d2                	test   %edx,%edx$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	75 0e                	jne    f0100f2f <page_init+0x67>$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	8b 35 90 2e 21 f0    	mov    0xf0212e90,%esi$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	66 c7 46 04 01 00    	movw   $0x1,0x4(%esi)$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	eb 6a                	jmp    f0100f99 <page_init+0xd1>$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	89 d6                	mov    %edx,%esi$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	81 fe 00 70 00 00    	cmp    $0x7000,%esi$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	75 0f                	jne    f0100f4b <page_init+0x83>$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	8b 35 90 2e 21 f0    	mov    0xf0212e90,%esi$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	66 c7 44 0e 04 01 00 	movw   $0x1,0x4(%esi,%ecx,1)$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	eb 4e                	jmp    f0100f99 <page_init+0xd1>$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	81 fb ff ff 05 00    	cmp    $0x5ffff,%ebx$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	77 0f                	ja     f0100f62 <page_init+0x9a>$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	8b 35 90 2e 21 f0    	mov    0xf0212e90,%esi$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	66 c7 44 0e 04 01 00 	movw   $0x1,0x4(%esi,%ecx,1)$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	eb 37                	jmp    f0100f99 <page_init+0xd1>$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	81 fa ff 00 00 00    	cmp    $0xff,%edx$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	76 13                	jbe    f0100f7d <page_init+0xb5>$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	39 c2                	cmp    %eax,%edx$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	77 0f                	ja     f0100f7d <page_init+0xb5>$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	8b 35 90 2e 21 f0    	mov    0xf0212e90,%esi$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	66 c7 44 0e 04 01 00 	movw   $0x1,0x4(%esi,%ecx,1)$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	eb 1c                	jmp    f0100f99 <page_init+0xd1>$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	89 ce                	mov    %ecx,%esi$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	03 35 90 2e 21 f0    	add    0xf0212e90,%esi$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	89 3e                	mov    %edi,(%esi)$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	89 cf                	mov    %ecx,%edi$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	03 3d 90 2e 21 f0    	add    0xf0212e90,%edi$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	83 c1 08             	add    $0x8,%ecx$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	0f 82 6c ff ff ff    	jb     f0100f1d <page_init+0x55>$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	74 06                	je     f0100fbd <page_init+0xf5>$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	89 3d 40 22 21 f0    	mov    %edi,0xf0212240$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	5b                   	pop    %ebx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	5e                   	pop    %esi$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	5f                   	pop    %edi$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	5d                   	pop    %ebp$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	c3                   	ret    $/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5 <page_alloc>:$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	55                   	push   %ebp$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	53                   	push   %ebx$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	8b 1d 40 22 21 f0    	mov    0xf0212240,%ebx$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	85 db                	test   %ebx,%ebx$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	74 58                	je     f010102e <page_alloc+0x69>$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	a3 40 22 21 f0       	mov    %eax,0xf0212240$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	74 45                	je     f010102e <page_alloc+0x69>$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	89 d8                	mov    %ebx,%eax$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	89 c2                	mov    %eax,%edx$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	72 12                	jb     f0101016 <page_alloc+0x51>$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	50                   	push   %eax$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	6a 58                	push   $0x58$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	e8 7e f0 ff ff       	call   f0100094 <_panic>$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	68 00 10 00 00       	push   $0x1000$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	6a 00                	push   $0x0$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	50                   	push   %eax$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	e8 73 45 00 00       	call   f010559e <memset>$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	c9                   	leave  $/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	c3                   	ret    $/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035 <page_free>:$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	55                   	push   %ebp$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	89 e5                	mov    %esp,%ebp$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	75 14                	jne    f0101059 <page_free+0x24>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	75 0f                	jne    f0101059 <page_free+0x24>$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	8b 15 40 22 21 f0    	mov    0xf0212240,%edx$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	89 10                	mov    %edx,(%eax)$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	a3 40 22 21 f0       	mov    %eax,0xf0212240$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	eb 17                	jmp    f0101070 <page_free+0x3b>$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	68 64 72 10 f0       	push   $0xf0107264$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	68 90 01 00 00       	push   $0x190$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	e8 24 f0 ff ff       	call   f0100094 <_panic>$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	c9                   	leave  $/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	c3                   	ret    $/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072 <page_decref>:$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	55                   	push   %ebp$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	89 e5                	mov    %esp,%ebp$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	66 85 c0             	test   %ax,%ax$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	75 0c                	jne    f0101097 <page_decref+0x25>$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	52                   	push   %edx$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	e8 a1 ff ff ff       	call   f0101035 <page_free>$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	c9                   	leave  $/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	c3                   	ret    $/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099 <pgdir_walk>:$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	55                   	push   %ebp$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	89 e5                	mov    %esp,%ebp$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	56                   	push   %esi$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	53                   	push   %ebx$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	89 de                	mov    %ebx,%esi$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	75 2f                	jne    f01010e9 <pgdir_walk+0x50>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	74 5b                	je     f010111b <pgdir_walk+0x82>$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	6a 01                	push   $0x1$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	e8 fb fe ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	85 c0                	test   %eax,%eax$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	74 51                	je     f0101122 <pgdir_walk+0x89>$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	0d 07 0e 00 00       	or     $0xe07,%eax$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	89 03                	mov    %eax,(%ebx)$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	89 c2                	mov    %eax,%edx$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	72 15                	jb     f0101112 <pgdir_walk+0x79>$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	50                   	push   %eax$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	68 cd 01 00 00       	push   $0x1cd$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	e8 82 ef ff ff       	call   f0100094 <_panic>$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	8d 84 b0 00 00 00 f0 	lea    -0x10000000(%eax,%esi,4),%eax$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	eb 0c                	jmp    f0101127 <pgdir_walk+0x8e>$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	eb 05                	jmp    f0101127 <pgdir_walk+0x8e>$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	5b                   	pop    %ebx$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	5e                   	pop    %esi$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	5d                   	pop    %ebp$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	c3                   	ret    $/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e <boot_map_region>:$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	55                   	push   %ebp$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	57                   	push   %edi$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	56                   	push   %esi$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	53                   	push   %ebx$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	89 c7                	mov    %eax,%edi$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	89 d6                	mov    %edx,%esi$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	29 de                	sub    %ebx,%esi$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	eb 3c                	jmp    f010118a <boot_map_region+0x5c>$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	6a 01                	push   $0x1$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	50                   	push   %eax$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	57                   	push   %edi$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	e8 3c ff ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	85 c0                	test   %eax,%eax$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	75 19                	jne    f010117d <boot_map_region+0x4f>$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	68 7d 72 10 f0       	push   $0xf010727d$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	68 e4 01 00 00       	push   $0x1e4$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	e8 17 ef ff ff       	call   f0100094 <_panic>$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	09 da                	or     %ebx,%edx$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	89 10                	mov    %edx,(%eax)$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	89 d8                	mov    %ebx,%eax$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	77 ba                	ja     f010114e <boot_map_region+0x20>$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	5b                   	pop    %ebx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	5e                   	pop    %esi$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	5f                   	pop    %edi$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	5d                   	pop    %ebp$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	c3                   	ret    $/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c <page_lookup>:$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	55                   	push   %ebp$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	89 e5                	mov    %esp,%ebp$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	53                   	push   %ebx$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	89 d1                	mov    %edx,%ecx$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	f6 04 88 01          	testb  $0x1,(%eax,%ecx,4)$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	74 45                	je     f01011fc <page_lookup+0x60>$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	6a 00                	push   $0x0$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	52                   	push   %edx$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	50                   	push   %eax$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	e8 d6 fe ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	85 c0                	test   %eax,%eax$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	74 39                	je     f0101203 <page_lookup+0x67>$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	85 db                	test   %ebx,%ebx$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	74 02                	je     f01011d0 <page_lookup+0x34>$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	8b 00                	mov    (%eax),%eax$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	3b 05 88 2e 21 f0    	cmp    0xf0212e88,%eax$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	72 14                	jb     f01011f1 <page_lookup+0x55>$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	68 2c 69 10 f0       	push   $0xf010692c$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	6a 51                	push   $0x51$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	e8 a3 ee ff ff       	call   f0100094 <_panic>$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	8b 15 90 2e 21 f0    	mov    0xf0212e90,%edx$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	eb 0c                	jmp    f0101208 <page_lookup+0x6c>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	eb 05                	jmp    f0101208 <page_lookup+0x6c>$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	c9                   	leave  $/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	c3                   	ret    $/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d <tlb_invalidate>:$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	55                   	push   %ebp$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	e8 a6 49 00 00       	call   f0105bbe <cpunum>$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	83 b8 28 30 21 f0 00 	cmpl   $0x0,-0xfdecfd8(%eax)$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	74 16                	je     f010123a <tlb_invalidate+0x2d>$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	e8 95 49 00 00       	call   f0105bbe <cpunum>$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	75 06                	jne    f0101240 <tlb_invalidate+0x33>$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	0f 01 38             	invlpg (%eax)$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	c9                   	leave  $/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	c3                   	ret    $/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242 <page_remove>:$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	55                   	push   %ebp$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	89 e5                	mov    %esp,%ebp$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	57                   	push   %edi$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	56                   	push   %esi$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	53                   	push   %ebx$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	50                   	push   %eax$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	57                   	push   %edi$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	56                   	push   %esi$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	e8 40 ff ff ff       	call   f010119c <page_lookup>$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	85 c0                	test   %eax,%eax$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	74 28                	je     f010128b <page_remove+0x49>$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	89 c3                	mov    %eax,%ebx$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	74 1e                	je     f010128b <page_remove+0x49>$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	57                   	push   %edi$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	56                   	push   %esi$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	e8 96 ff ff ff       	call   f010120d <tlb_invalidate>$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	e8 ea fd ff ff       	call   f0101072 <page_decref>$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	83 c4 10             	add    $0x10,%esp$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	5b                   	pop    %ebx$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	5e                   	pop    %esi$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	5f                   	pop    %edi$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	5d                   	pop    %ebp$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	c3                   	ret    $/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293 <page_insert>:$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	55                   	push   %ebp$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	89 e5                	mov    %esp,%ebp$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	57                   	push   %edi$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	56                   	push   %esi$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	53                   	push   %ebx$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	6a 01                	push   $0x1$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	57                   	push   %edi$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	e8 ec fd ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	85 c0                	test   %eax,%eax$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	74 38                	je     f01012ec <page_insert+0x59>$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	89 c6                	mov    %eax,%esi$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	74 0f                	je     f01012cf <page_insert+0x3c>$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	57                   	push   %edi$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	e8 76 ff ff ff       	call   f0101242 <page_remove>$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	2b 1d 90 2e 21 f0    	sub    0xf0212e90,%ebx$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	83 c8 01             	or     $0x1,%eax$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	09 c3                	or     %eax,%ebx$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	eb 05                	jmp    f01012f1 <page_insert+0x5e>$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	5b                   	pop    %ebx$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	5e                   	pop    %esi$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	5f                   	pop    %edi$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	5d                   	pop    %ebp$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	c3                   	ret    $/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9 <mmio_map_region>:$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	55                   	push   %ebp$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	56                   	push   %esi$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	53                   	push   %ebx$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	8b 1d 00 03 12 f0    	mov    0xf0120300,%ebx$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	89 c8                	mov    %ecx,%eax$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	f7 c1 ff 0f 00 00    	test   $0xfff,%ecx$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	74 08                	je     f010131c <mmio_map_region+0x23>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	89 c8                	mov    %ecx,%eax$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	83 c0 01             	add    $0x1,%eax$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	01 d8                	add    %ebx,%eax$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	72 07                	jb     f010132a <mmio_map_region+0x31>$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	76 17                	jbe    f0101341 <mmio_map_region+0x48>$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	68 4c 69 10 f0       	push   $0xf010694c$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	68 84 02 00 00       	push   $0x284$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	e8 53 ed ff ff       	call   f0100094 <_panic>$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	8d b1 ff 0f 00 00    	lea    0xfff(%ecx),%esi$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	6a 1a                	push   $0x1a$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	89 f1                	mov    %esi,%ecx$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	89 da                	mov    %ebx,%edx$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	e8 cb fd ff ff       	call   f010112e <boot_map_region>$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	01 35 00 03 12 f0    	add    %esi,0xf0120300$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	89 d8                	mov    %ebx,%eax$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	5b                   	pop    %ebx$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	5e                   	pop    %esi$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	5d                   	pop    %ebp$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	c3                   	ret    $/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372 <mem_init>:$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	55                   	push   %ebp$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	89 e5                	mov    %esp,%ebp$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	57                   	push   %edi$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	56                   	push   %esi$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	53                   	push   %ebx$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	e8 b4 f7 ff ff       	call   f0100b39 <nvram_read>$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	89 c3                	mov    %eax,%ebx$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	e8 a8 f7 ff ff       	call   f0100b39 <nvram_read>$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	89 c6                	mov    %eax,%esi$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	e8 9c f7 ff ff       	call   f0100b39 <nvram_read>$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	85 c0                	test   %eax,%eax$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	74 07                	je     f01013ab <mem_init+0x39>$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	eb 0b                	jmp    f01013b6 <mem_init+0x44>$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	85 f6                	test   %esi,%esi$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	89 c2                	mov    %eax,%edx$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	89 15 88 2e 21 f0    	mov    %edx,0xf0212e88$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	89 c2                	mov    %eax,%edx$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	29 da                	sub    %ebx,%edx$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	52                   	push   %edx$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	53                   	push   %ebx$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	50                   	push   %eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	68 78 69 10 f0       	push   $0xf0106978$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	e8 7c 23 00 00       	call   f010374e <cprintf>$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	e8 23 f7 ff ff       	call   f0100aff <boot_alloc>$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	a3 8c 2e 21 f0       	mov    %eax,0xf0212e8c$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	68 00 10 00 00       	push   $0x1000$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	6a 00                	push   $0x0$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	50                   	push   %eax$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	e8 ad 41 00 00       	call   f010559e <memset>$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	77 15                	ja     f0101415 <mem_init+0xa3>$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	50                   	push   %eax$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	68 97 00 00 00       	push   $0x97$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	e8 7f ec ff ff       	call   f0100094 <_panic>$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	a1 88 2e 21 f0       	mov    0xf0212e88,%eax$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	e8 ce f6 ff ff       	call   f0100aff <boot_alloc>$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	a3 90 2e 21 f0       	mov    %eax,0xf0212e90$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	8b 0d 88 2e 21 f0    	mov    0xf0212e88,%ecx$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	52                   	push   %edx$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	6a 00                	push   $0x0$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	50                   	push   %eax$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	e8 4f 41 00 00       	call   f010559e <memset>$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	e8 a6 f6 ff ff       	call   f0100aff <boot_alloc>$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	a3 44 22 21 f0       	mov    %eax,0xf0212244$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	6a 00                	push   $0x0$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	50                   	push   %eax$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	e8 30 41 00 00       	call   f010559e <memset>$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	e8 55 fa ff ff       	call   f0100ec8 <page_init>$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	e8 49 f7 ff ff       	call   f0100bc6 <check_page_free_list>$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	83 3d 90 2e 21 f0 00 	cmpl   $0x0,0xf0212e90$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	75 17                	jne    f01014a0 <mem_init+0x12e>$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	68 81 72 10 f0       	push   $0xf0107281$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	68 17 03 00 00       	push   $0x317$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	e8 f4 eb ff ff       	call   f0100094 <_panic>$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	a1 40 22 21 f0       	mov    0xf0212240,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	eb 05                	jmp    f01014b1 <mem_init+0x13f>$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	8b 00                	mov    (%eax),%eax$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	85 c0                	test   %eax,%eax$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	75 f7                	jne    f01014ac <mem_init+0x13a>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	6a 00                	push   $0x0$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	e8 06 fb ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	89 c7                	mov    %eax,%edi$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	85 c0                	test   %eax,%eax$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	75 19                	jne    f01014e1 <mem_init+0x16f>$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	68 9c 72 10 f0       	push   $0xf010729c$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	68 1f 03 00 00       	push   $0x31f$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	e8 b3 eb ff ff       	call   f0100094 <_panic>$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	6a 00                	push   $0x0$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	e8 da fa ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	89 c6                	mov    %eax,%esi$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	85 c0                	test   %eax,%eax$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	75 19                	jne    f010150d <mem_init+0x19b>$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	68 b2 72 10 f0       	push   $0xf01072b2$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	68 20 03 00 00       	push   $0x320$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	e8 87 eb ff ff       	call   f0100094 <_panic>$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	6a 00                	push   $0x0$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	e8 ae fa ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	85 c0                	test   %eax,%eax$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	75 19                	jne    f010153a <mem_init+0x1c8>$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	68 c8 72 10 f0       	push   $0xf01072c8$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	68 21 03 00 00       	push   $0x321$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	e8 5a eb ff ff       	call   f0100094 <_panic>$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	39 f7                	cmp    %esi,%edi$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	75 19                	jne    f0101557 <mem_init+0x1e5>$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	68 de 72 10 f0       	push   $0xf01072de$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	68 24 03 00 00       	push   $0x324$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	e8 3d eb ff ff       	call   f0100094 <_panic>$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	39 c6                	cmp    %eax,%esi$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	74 04                	je     f0101562 <mem_init+0x1f0>$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	39 c7                	cmp    %eax,%edi$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	75 19                	jne    f010157b <mem_init+0x209>$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	68 b4 69 10 f0       	push   $0xf01069b4$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	68 25 03 00 00       	push   $0x325$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	e8 19 eb ff ff       	call   f0100094 <_panic>$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	8b 0d 90 2e 21 f0    	mov    0xf0212e90,%ecx$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	8b 15 88 2e 21 f0    	mov    0xf0212e88,%edx$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	89 f8                	mov    %edi,%eax$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	29 c8                	sub    %ecx,%eax$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	39 d0                	cmp    %edx,%eax$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	72 19                	jb     f01015b1 <mem_init+0x23f>$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	68 f0 72 10 f0       	push   $0xf01072f0$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	68 26 03 00 00       	push   $0x326$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	e8 e3 ea ff ff       	call   f0100094 <_panic>$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	89 f0                	mov    %esi,%eax$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	29 c8                	sub    %ecx,%eax$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	39 c2                	cmp    %eax,%edx$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	77 19                	ja     f01015d8 <mem_init+0x266>$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	68 0d 73 10 f0       	push   $0xf010730d$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	68 27 03 00 00       	push   $0x327$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	e8 bc ea ff ff       	call   f0100094 <_panic>$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	29 c8                	sub    %ecx,%eax$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	39 c2                	cmp    %eax,%edx$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	77 19                	ja     f0101600 <mem_init+0x28e>$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	68 2a 73 10 f0       	push   $0xf010732a$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	68 28 03 00 00       	push   $0x328$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	e8 94 ea ff ff       	call   f0100094 <_panic>$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	a1 40 22 21 f0       	mov    0xf0212240,%eax$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	c7 05 40 22 21 f0 00 	movl   $0x0,0xf0212240$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	00 00 00 $/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	6a 00                	push   $0x0$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	e8 a9 f9 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	85 c0                	test   %eax,%eax$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	74 19                	je     f010163c <mem_init+0x2ca>$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	68 47 73 10 f0       	push   $0xf0107347$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	68 2f 03 00 00       	push   $0x32f$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	e8 58 ea ff ff       	call   f0100094 <_panic>$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	57                   	push   %edi$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	e8 f0 f9 ff ff       	call   f0101035 <page_free>$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	e8 e8 f9 ff ff       	call   f0101035 <page_free>$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	e8 dd f9 ff ff       	call   f0101035 <page_free>$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	e8 61 f9 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	89 c6                	mov    %eax,%esi$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	85 c0                	test   %eax,%eax$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	75 19                	jne    f0101686 <mem_init+0x314>$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	68 9c 72 10 f0       	push   $0xf010729c$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	68 39 03 00 00       	push   $0x339$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	e8 0e ea ff ff       	call   f0100094 <_panic>$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	6a 00                	push   $0x0$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	e8 35 f9 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	89 c7                	mov    %eax,%edi$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	85 c0                	test   %eax,%eax$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	75 19                	jne    f01016b2 <mem_init+0x340>$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	68 b2 72 10 f0       	push   $0xf01072b2$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	68 3a 03 00 00       	push   $0x33a$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	e8 e2 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	6a 00                	push   $0x0$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	e8 09 f9 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	85 c0                	test   %eax,%eax$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	75 19                	jne    f01016df <mem_init+0x36d>$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	68 c8 72 10 f0       	push   $0xf01072c8$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	68 3b 03 00 00       	push   $0x33b$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	e8 b5 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	39 fe                	cmp    %edi,%esi$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	75 19                	jne    f01016fc <mem_init+0x38a>$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	68 de 72 10 f0       	push   $0xf01072de$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	68 3d 03 00 00       	push   $0x33d$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	e8 98 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	39 c7                	cmp    %eax,%edi$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	74 04                	je     f0101707 <mem_init+0x395>$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	39 c6                	cmp    %eax,%esi$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	75 19                	jne    f0101720 <mem_init+0x3ae>$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	68 b4 69 10 f0       	push   $0xf01069b4$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	68 3e 03 00 00       	push   $0x33e$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	e8 74 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	6a 00                	push   $0x0$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	e8 9b f8 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	85 c0                	test   %eax,%eax$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	74 19                	je     f010174a <mem_init+0x3d8>$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	68 47 73 10 f0       	push   $0xf0107347$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	68 3f 03 00 00       	push   $0x33f$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	e8 4a e9 ff ff       	call   f0100094 <_panic>$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	89 f0                	mov    %esi,%eax$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	89 c2                	mov    %eax,%edx$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	72 12                	jb     f0101777 <mem_init+0x405>$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	50                   	push   %eax$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	6a 58                	push   $0x58$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	e8 1d e9 ff ff       	call   f0100094 <_panic>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	6a 01                	push   $0x1$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	50                   	push   %eax$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	e8 12 3e 00 00       	call   f010559e <memset>$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	e8 a1 f8 ff ff       	call   f0101035 <page_free>$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	e8 25 f8 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	85 c0                	test   %eax,%eax$/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	75 19                	jne    f01017c0 <mem_init+0x44e>$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	68 56 73 10 f0       	push   $0xf0107356$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	68 44 03 00 00       	push   $0x344$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	e8 d4 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	39 c6                	cmp    %eax,%esi$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	74 19                	je     f01017dd <mem_init+0x46b>$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	68 74 73 10 f0       	push   $0xf0107374$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	68 45 03 00 00       	push   $0x345$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	e8 b7 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	89 f0                	mov    %esi,%eax$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	89 c2                	mov    %eax,%edx$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	72 12                	jb     f010180a <mem_init+0x498>$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	50                   	push   %eax$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	6a 58                	push   $0x58$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	e8 8a e8 ff ff       	call   f0100094 <_panic>$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	74 19                	je     f0101834 <mem_init+0x4c2>$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	68 84 73 10 f0       	push   $0xf0107384$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	68 48 03 00 00       	push   $0x348$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	e8 60 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	39 d0                	cmp    %edx,%eax$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	75 db                	jne    f0101816 <mem_init+0x4a4>$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	a3 40 22 21 f0       	mov    %eax,0xf0212240$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	56                   	push   %esi$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	e8 e9 f7 ff ff       	call   f0101035 <page_free>$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	e8 e1 f7 ff ff       	call   f0101035 <page_free>$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	e8 d6 f7 ff ff       	call   f0101035 <page_free>$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	a1 40 22 21 f0       	mov    0xf0212240,%eax$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	eb 05                	jmp    f010186e <mem_init+0x4fc>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	8b 00                	mov    (%eax),%eax$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	85 c0                	test   %eax,%eax$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	75 f7                	jne    f0101869 <mem_init+0x4f7>$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	85 db                	test   %ebx,%ebx$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	74 19                	je     f010188f <mem_init+0x51d>$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	68 8e 73 10 f0       	push   $0xf010738e$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	68 55 03 00 00       	push   $0x355$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	e8 05 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	68 d4 69 10 f0       	push   $0xf01069d4$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	e8 b2 1e 00 00       	call   f010374e <cprintf>$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	e8 1d f7 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	85 c0                	test   %eax,%eax$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	75 19                	jne    f01018cb <mem_init+0x559>$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	68 9c 72 10 f0       	push   $0xf010729c$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	68 bb 03 00 00       	push   $0x3bb$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	e8 c9 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	6a 00                	push   $0x0$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	e8 f0 f6 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	89 c3                	mov    %eax,%ebx$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	85 c0                	test   %eax,%eax$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	75 19                	jne    f01018f7 <mem_init+0x585>$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	68 b2 72 10 f0       	push   $0xf01072b2$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	68 bc 03 00 00       	push   $0x3bc$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	e8 9d e7 ff ff       	call   f0100094 <_panic>$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	6a 00                	push   $0x0$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	e8 c4 f6 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	89 c6                	mov    %eax,%esi$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	85 c0                	test   %eax,%eax$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	75 19                	jne    f0101923 <mem_init+0x5b1>$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	68 c8 72 10 f0       	push   $0xf01072c8$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	68 bd 03 00 00       	push   $0x3bd$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	e8 71 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	75 19                	jne    f0101941 <mem_init+0x5cf>$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	68 de 72 10 f0       	push   $0xf01072de$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	68 c0 03 00 00       	push   $0x3c0$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	e8 53 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	74 04                	je     f010194a <mem_init+0x5d8>$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	75 19                	jne    f0101963 <mem_init+0x5f1>$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	68 b4 69 10 f0       	push   $0xf01069b4$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	e8 31 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	a1 40 22 21 f0       	mov    0xf0212240,%eax$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	c7 05 40 22 21 f0 00 	movl   $0x0,0xf0212240$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	00 00 00 $/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	6a 00                	push   $0x0$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	e8 46 f6 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	85 c0                	test   %eax,%eax$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	74 19                	je     f010199f <mem_init+0x62d>$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	68 47 73 10 f0       	push   $0xf0107347$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	68 c8 03 00 00       	push   $0x3c8$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	e8 f5 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	50                   	push   %eax$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	6a 00                	push   $0x0$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	e8 e9 f7 ff ff       	call   f010119c <page_lookup>$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	85 c0                	test   %eax,%eax$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	74 19                	je     f01019d3 <mem_init+0x661>$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	68 f4 69 10 f0       	push   $0xf01069f4$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	68 cb 03 00 00       	push   $0x3cb$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	e8 c1 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	6a 02                	push   $0x2$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	6a 00                	push   $0x0$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	53                   	push   %ebx$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	e8 b0 f8 ff ff       	call   f0101293 <page_insert>$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	85 c0                	test   %eax,%eax$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	78 19                	js     f0101a03 <mem_init+0x691>$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	68 2c 6a 10 f0       	push   $0xf0106a2c$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	e8 91 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	e8 27 f6 ff ff       	call   f0101035 <page_free>$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	6a 02                	push   $0x2$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	6a 00                	push   $0x0$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	53                   	push   %ebx$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	e8 75 f8 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	85 c0                	test   %eax,%eax$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	74 19                	je     f0101a3e <mem_init+0x6cc>$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	68 5c 6a 10 f0       	push   $0xf0106a5c$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	68 d2 03 00 00       	push   $0x3d2$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	e8 56 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	a1 90 2e 21 f0       	mov    0xf0212e90,%eax$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	89 c1                	mov    %eax,%ecx$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	8b 17                	mov    (%edi),%edx$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	29 c8                	sub    %ecx,%eax$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	74 19                	je     f0101a7e <mem_init+0x70c>$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	68 8c 6a 10 f0       	push   $0xf0106a8c$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	e8 16 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	89 f8                	mov    %edi,%eax$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	e8 d8 f0 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	89 da                	mov    %ebx,%edx$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	74 19                	je     f0101ab2 <mem_init+0x740>$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	68 b4 6a 10 f0       	push   $0xf0106ab4$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	68 d4 03 00 00       	push   $0x3d4$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	e8 e2 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	74 19                	je     f0101ad2 <mem_init+0x760>$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	68 99 73 10 f0       	push   $0xf0107399$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	68 d5 03 00 00       	push   $0x3d5$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	e8 c2 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	74 19                	je     f0101af5 <mem_init+0x783>$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	68 aa 73 10 f0       	push   $0xf01073aa$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	68 d6 03 00 00       	push   $0x3d6$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	e8 9f e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	6a 02                	push   $0x2$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	56                   	push   %esi$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	57                   	push   %edi$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	e8 90 f7 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	85 c0                	test   %eax,%eax$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	74 19                	je     f0101b23 <mem_init+0x7b1>$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	68 e4 6a 10 f0       	push   $0xf0106ae4$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	e8 71 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	e8 30 f0 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	89 f2                	mov    %esi,%edx$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	74 19                	je     f0101b5d <mem_init+0x7eb>$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	68 20 6b 10 f0       	push   $0xf0106b20$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	68 da 03 00 00       	push   $0x3da$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	e8 37 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	74 19                	je     f0101b7d <mem_init+0x80b>$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	68 bb 73 10 f0       	push   $0xf01073bb$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	68 db 03 00 00       	push   $0x3db$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	e8 17 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	6a 00                	push   $0x0$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	e8 3e f4 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	85 c0                	test   %eax,%eax$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	74 19                	je     f0101ba7 <mem_init+0x835>$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	68 47 73 10 f0       	push   $0xf0107347$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	68 de 03 00 00       	push   $0x3de$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	e8 ed e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	6a 02                	push   $0x2$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	56                   	push   %esi$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	e8 d9 f6 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	85 c0                	test   %eax,%eax$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	74 19                	je     f0101bda <mem_init+0x868>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	68 e4 6a 10 f0       	push   $0xf0106ae4$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	68 e1 03 00 00       	push   $0x3e1$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	e8 ba e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	e8 79 ef ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	89 f2                	mov    %esi,%edx$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	74 19                	je     f0101c14 <mem_init+0x8a2>$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	68 20 6b 10 f0       	push   $0xf0106b20$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	68 e2 03 00 00       	push   $0x3e2$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	e8 80 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	74 19                	je     f0101c34 <mem_init+0x8c2>$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	68 bb 73 10 f0       	push   $0xf01073bb$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	e8 60 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	6a 00                	push   $0x0$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	e8 87 f3 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	85 c0                	test   %eax,%eax$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	74 19                	je     f0101c5e <mem_init+0x8ec>$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	68 47 73 10 f0       	push   $0xf0107347$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	e8 36 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	8b 15 8c 2e 21 f0    	mov    0xf0212e8c,%edx$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	8b 02                	mov    (%edx),%eax$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	3b 0d 88 2e 21 f0    	cmp    0xf0212e88,%ecx$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	72 15                	jb     f0101c8d <mem_init+0x91b>$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	50                   	push   %eax$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	68 ea 03 00 00       	push   $0x3ea$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	e8 07 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	6a 00                	push   $0x0$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	52                   	push   %edx$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	e8 f4 f3 ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	39 d0                	cmp    %edx,%eax$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	74 19                	je     f0101ccb <mem_init+0x959>$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	68 50 6b 10 f0       	push   $0xf0106b50$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	68 eb 03 00 00       	push   $0x3eb$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	e8 c9 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	6a 06                	push   $0x6$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	56                   	push   %esi$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	e8 b5 f5 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	85 c0                	test   %eax,%eax$/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	74 19                	je     f0101cfe <mem_init+0x98c>$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	68 90 6b 10 f0       	push   $0xf0106b90$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	e8 96 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	89 f8                	mov    %edi,%eax$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	e8 52 ee ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	89 f2                	mov    %esi,%edx$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	74 19                	je     f0101d3b <mem_init+0x9c9>$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	68 20 6b 10 f0       	push   $0xf0106b20$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	e8 59 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	74 19                	je     f0101d5b <mem_init+0x9e9>$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	68 bb 73 10 f0       	push   $0xf01073bb$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	e8 39 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	6a 00                	push   $0x0$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	57                   	push   %edi$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	e8 2e f3 ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	75 19                	jne    f0101d8c <mem_init+0xa1a>$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	68 d0 6b 10 f0       	push   $0xf0106bd0$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	e8 08 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	75 19                	jne    f0101daf <mem_init+0xa3d>$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	68 cc 73 10 f0       	push   $0xf01073cc$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	e8 e5 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	6a 02                	push   $0x2$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	56                   	push   %esi$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	50                   	push   %eax$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	e8 d6 f4 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	85 c0                	test   %eax,%eax$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	74 19                	je     f0101ddd <mem_init+0xa6b>$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	68 e4 6a 10 f0       	push   $0xf0106ae4$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	e8 b7 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	6a 00                	push   $0x0$/;"	l
f0101de2	obj/kern/kernel.asm	/^f0101de2:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	e8 a7 f2 ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	75 19                	jne    f0101e13 <mem_init+0xaa1>$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	68 04 6c 10 f0       	push   $0xf0106c04$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	e8 81 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	6a 00                	push   $0x0$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	e8 71 f2 ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	74 19                	je     f0101e49 <mem_init+0xad7>$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	68 38 6c 10 f0       	push   $0xf0106c38$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	68 f7 03 00 00       	push   $0x3f7$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	e8 4b e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	6a 02                	push   $0x2$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	e8 35 f4 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	85 c0                	test   %eax,%eax$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	78 19                	js     f0101e7e <mem_init+0xb0c>$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	68 70 6c 10 f0       	push   $0xf0106c70$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	e8 16 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	6a 02                	push   $0x2$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	53                   	push   %ebx$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	e8 02 f4 ff ff       	call   f0101293 <page_insert>$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	85 c0                	test   %eax,%eax$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	74 19                	je     f0101eb1 <mem_init+0xb3f>$/;"	l
f0101e98	obj/kern/kernel.asm	/^f0101e98:	68 a8 6c 10 f0       	push   $0xf0106ca8$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	e8 e3 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	6a 00                	push   $0x0$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	e8 d3 f1 ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	74 19                	je     f0101ee7 <mem_init+0xb75>$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	68 38 6c 10 f0       	push   $0xf0106c38$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	e8 ad e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	89 f8                	mov    %edi,%eax$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	e8 69 ec ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	89 c1                	mov    %eax,%ecx$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	89 d8                	mov    %ebx,%eax$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	74 19                	je     f0101f29 <mem_init+0xbb7>$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	68 e4 6c 10 f0       	push   $0xf0106ce4$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	68 01 04 00 00       	push   $0x401$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	e8 6b e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	89 f8                	mov    %edi,%eax$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	e8 2d ec ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	74 19                	je     f0101f53 <mem_init+0xbe1>$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	68 10 6d 10 f0       	push   $0xf0106d10$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	68 02 04 00 00       	push   $0x402$/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	e8 41 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	74 19                	je     f0101f73 <mem_init+0xc01>$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	68 e2 73 10 f0       	push   $0xf01073e2$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	68 04 04 00 00       	push   $0x404$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	e8 21 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	74 19                	je     f0101f93 <mem_init+0xc21>$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	68 f3 73 10 f0       	push   $0xf01073f3$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	68 05 04 00 00       	push   $0x405$/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	e8 01 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	6a 00                	push   $0x0$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	e8 28 f0 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	39 c6                	cmp    %eax,%esi$/;"	l
f0101fa2	obj/kern/kernel.asm	/^f0101fa2:	75 04                	jne    f0101fa8 <mem_init+0xc36>$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	85 c0                	test   %eax,%eax$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	75 19                	jne    f0101fc1 <mem_init+0xc4f>$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	68 40 6d 10 f0       	push   $0xf0106d40$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	68 08 04 00 00       	push   $0x408$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	e8 d3 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	6a 00                	push   $0x0$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	e8 71 f2 ff ff       	call   f0101242 <page_remove>$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	89 f8                	mov    %edi,%eax$/;"	l
f0101fde	obj/kern/kernel.asm	/^f0101fde:	e8 7f eb ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	74 19                	je     f0102004 <mem_init+0xc92>$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	e8 90 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	89 f8                	mov    %edi,%eax$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	e8 52 eb ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0102010	obj/kern/kernel.asm	/^f0102010:	89 da                	mov    %ebx,%edx$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	74 19                	je     f010203b <mem_init+0xcc9>$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	68 10 6d 10 f0       	push   $0xf0106d10$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	e8 59 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	74 19                	je     f010205b <mem_init+0xce9>$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	68 99 73 10 f0       	push   $0xf0107399$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	68 0e 04 00 00       	push   $0x40e$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102056	obj/kern/kernel.asm	/^f0102056:	e8 39 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	74 19                	je     f010207b <mem_init+0xd09>$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	68 f3 73 10 f0       	push   $0xf01073f3$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	68 0f 04 00 00       	push   $0x40f$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	e8 19 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	6a 00                	push   $0x0$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	53                   	push   %ebx$/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	57                   	push   %edi$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	e8 0a f2 ff ff       	call   f0101293 <page_insert>$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	83 c4 10             	add    $0x10,%esp$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	85 c0                	test   %eax,%eax$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	74 19                	je     f01020a9 <mem_init+0xd37>$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	68 12 04 00 00       	push   $0x412$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	e8 eb df ff ff       	call   f0100094 <_panic>$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	75 19                	jne    f01020c9 <mem_init+0xd57>$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	68 04 74 10 f0       	push   $0xf0107404$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	68 13 04 00 00       	push   $0x413$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	e8 cb df ff ff       	call   f0100094 <_panic>$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	74 19                	je     f01020e7 <mem_init+0xd75>$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	68 10 74 10 f0       	push   $0xf0107410$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	68 14 04 00 00       	push   $0x414$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	e8 ad df ff ff       	call   f0100094 <_panic>$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	68 00 10 00 00       	push   $0x1000$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	e8 48 f1 ff ff       	call   f0101242 <page_remove>$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	89 f8                	mov    %edi,%eax$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	e8 56 ea ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	74 19                	je     f010212d <mem_init+0xdbb>$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	68 18 04 00 00       	push   $0x418$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	e8 67 df ff ff       	call   f0100094 <_panic>$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	89 f8                	mov    %edi,%eax$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	e8 29 ea ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	74 19                	je     f0102157 <mem_init+0xde5>$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	68 c0 6d 10 f0       	push   $0xf0106dc0$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	68 19 04 00 00       	push   $0x419$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	e8 3d df ff ff       	call   f0100094 <_panic>$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	74 19                	je     f0102177 <mem_init+0xe05>$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	68 25 74 10 f0       	push   $0xf0107425$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	68 1a 04 00 00       	push   $0x41a$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	e8 1d df ff ff       	call   f0100094 <_panic>$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	74 19                	je     f0102197 <mem_init+0xe25>$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	68 f3 73 10 f0       	push   $0xf01073f3$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	68 1b 04 00 00       	push   $0x41b$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	e8 fd de ff ff       	call   f0100094 <_panic>$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	6a 00                	push   $0x0$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	e8 24 ee ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	85 c0                	test   %eax,%eax$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	74 04                	je     f01021ac <mem_init+0xe3a>$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	39 c3                	cmp    %eax,%ebx$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	74 19                	je     f01021c5 <mem_init+0xe53>$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	68 e8 6d 10 f0       	push   $0xf0106de8$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	68 1e 04 00 00       	push   $0x41e$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	e8 cf de ff ff       	call   f0100094 <_panic>$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	6a 00                	push   $0x0$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	e8 f6 ed ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	85 c0                	test   %eax,%eax$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	74 19                	je     f01021ef <mem_init+0xe7d>$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	68 47 73 10 f0       	push   $0xf0107347$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	68 21 04 00 00       	push   $0x421$/;"	l
f01021e5	obj/kern/kernel.asm	/^f01021e5:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	e8 a5 de ff ff       	call   f0100094 <_panic>$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	8b 0d 8c 2e 21 f0    	mov    0xf0212e8c,%ecx$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	8b 11                	mov    (%ecx),%edx$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	39 c2                	cmp    %eax,%edx$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	74 19                	je     f0102229 <mem_init+0xeb7>$/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	68 8c 6a 10 f0       	push   $0xf0106a8c$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	68 24 04 00 00       	push   $0x424$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	e8 6b de ff ff       	call   f0100094 <_panic>$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	74 19                	je     f0102252 <mem_init+0xee0>$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	68 aa 73 10 f0       	push   $0xf01073aa$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	68 26 04 00 00       	push   $0x426$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	e8 42 de ff ff       	call   f0100094 <_panic>$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	50                   	push   %eax$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	e8 d1 ed ff ff       	call   f0101035 <page_free>$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	6a 01                	push   $0x1$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	68 00 10 40 00       	push   $0x401000$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	e8 20 ee ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	89 c7                	mov    %eax,%edi$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	8b 0d 88 2e 21 f0    	mov    0xf0212e88,%ecx$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	89 c2                	mov    %eax,%edx$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	83 c4 10             	add    $0x10,%esp$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	39 ca                	cmp    %ecx,%edx$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	72 15                	jb     f01022b5 <mem_init+0xf43>$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	50                   	push   %eax$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	68 2d 04 00 00       	push   $0x42d$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	e8 df dd ff ff       	call   f0100094 <_panic>$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	39 c7                	cmp    %eax,%edi$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	74 19                	je     f01022d7 <mem_init+0xf65>$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	68 36 74 10 f0       	push   $0xf0107436$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	68 2e 04 00 00       	push   $0x42e$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	e8 bd dd ff ff       	call   f0100094 <_panic>$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	89 c2                	mov    %eax,%edx$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	39 d1                	cmp    %edx,%ecx$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	77 12                	ja     f0102311 <mem_init+0xf9f>$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	50                   	push   %eax$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	6a 58                	push   $0x58$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	e8 83 dd ff ff       	call   f0100094 <_panic>$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	68 ff 00 00 00       	push   $0xff$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	50                   	push   %eax$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	e8 75 32 00 00       	call   f010559e <memset>$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	e8 01 ed ff ff       	call   f0101035 <page_free>$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	6a 01                	push   $0x1$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	6a 00                	push   $0x0$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	e8 53 ed ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	89 fa                	mov    %edi,%edx$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	89 d0                	mov    %edx,%eax$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	83 c4 10             	add    $0x10,%esp$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	3b 05 88 2e 21 f0    	cmp    0xf0212e88,%eax$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	72 12                	jb     f0102376 <mem_init+0x1004>$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	52                   	push   %edx$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	6a 58                	push   $0x58$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	e8 1e dd ff ff       	call   f0100094 <_panic>$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	74 19                	je     f01023a3 <mem_init+0x1031>$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	68 4e 74 10 f0       	push   $0xf010744e$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	68 38 04 00 00       	push   $0x438$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	e8 f1 dc ff ff       	call   f0100094 <_panic>$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	83 c0 04             	add    $0x4,%eax$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	39 d0                	cmp    %edx,%eax$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	75 db                	jne    f0102385 <mem_init+0x1013>$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	89 0d 40 22 21 f0    	mov    %ecx,0xf0212240$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	50                   	push   %eax$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	e8 65 ec ff ff       	call   f0101035 <page_free>$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	e8 5d ec ff ff       	call   f0101035 <page_free>$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	e8 55 ec ff ff       	call   f0101035 <page_free>$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	83 c4 08             	add    $0x8,%esp$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	68 01 10 00 00       	push   $0x1001$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	6a 00                	push   $0x0$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	e8 0a ef ff ff       	call   f01012f9 <mmio_map_region>$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	89 c3                	mov    %eax,%ebx$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	68 00 10 00 00       	push   $0x1000$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	6a 00                	push   $0x0$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	e8 f9 ee ff ff       	call   f01012f9 <mmio_map_region>$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	89 c6                	mov    %eax,%esi$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	83 c4 10             	add    $0x10,%esp$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	76 07                	jbe    f010241a <mem_init+0x10a8>$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	76 19                	jbe    f0102433 <mem_init+0x10c1>$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	68 0c 6e 10 f0       	push   $0xf0106e0c$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	68 48 04 00 00       	push   $0x448$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	e8 61 dc ff ff       	call   f0100094 <_panic>$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	77 08                	ja     f0102449 <mem_init+0x10d7>$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	77 19                	ja     f0102462 <mem_init+0x10f0>$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	68 34 6e 10 f0       	push   $0xf0106e34$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	68 49 04 00 00       	push   $0x449$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	e8 32 dc ff ff       	call   f0100094 <_panic>$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	89 da                	mov    %ebx,%edx$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	09 f2                	or     %esi,%edx$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	74 19                	je     f0102487 <mem_init+0x1115>$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	68 5c 6e 10 f0       	push   $0xf0106e5c$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	68 4b 04 00 00       	push   $0x44b$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	e8 0d dc ff ff       	call   f0100094 <_panic>$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	39 c6                	cmp    %eax,%esi$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	73 19                	jae    f01024a4 <mem_init+0x1132>$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	68 65 74 10 f0       	push   $0xf0107465$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	68 4d 04 00 00       	push   $0x44d$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	e8 f0 db ff ff       	call   f0100094 <_panic>$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	89 da                	mov    %ebx,%edx$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	89 f8                	mov    %edi,%eax$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	e8 af e6 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	85 c0                	test   %eax,%eax$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	74 19                	je     f01024d0 <mem_init+0x115e>$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	68 84 6e 10 f0       	push   $0xf0106e84$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	68 4f 04 00 00       	push   $0x44f$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	e8 c4 db ff ff       	call   f0100094 <_panic>$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	89 c2                	mov    %eax,%edx$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	89 f8                	mov    %edi,%eax$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	e8 80 e6 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	74 19                	je     f0102502 <mem_init+0x1190>$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	68 a8 6e 10 f0       	push   $0xf0106ea8$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	68 50 04 00 00       	push   $0x450$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	e8 92 db ff ff       	call   f0100094 <_panic>$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	89 f2                	mov    %esi,%edx$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	89 f8                	mov    %edi,%eax$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	e8 57 e6 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	85 c0                	test   %eax,%eax$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	74 19                	je     f0102528 <mem_init+0x11b6>$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	68 d8 6e 10 f0       	push   $0xf0106ed8$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	68 51 04 00 00       	push   $0x451$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	e8 6c db ff ff       	call   f0100094 <_panic>$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	89 f8                	mov    %edi,%eax$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	e8 2d e6 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	74 19                	je     f0102553 <mem_init+0x11e1>$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	68 fc 6e 10 f0       	push   $0xf0106efc$/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	68 52 04 00 00       	push   $0x452$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	e8 41 db ff ff       	call   f0100094 <_panic>$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	6a 00                	push   $0x0$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	53                   	push   %ebx$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	57                   	push   %edi$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	e8 3a eb ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	75 19                	jne    f0102580 <mem_init+0x120e>$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	68 28 6f 10 f0       	push   $0xf0106f28$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	68 54 04 00 00       	push   $0x454$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	e8 14 db ff ff       	call   f0100094 <_panic>$/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	6a 00                	push   $0x0$/;"	l
f0102585	obj/kern/kernel.asm	/^f0102585:	53                   	push   %ebx$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	e8 08 eb ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	8b 00                	mov    (%eax),%eax$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	83 e0 04             	and    $0x4,%eax$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	74 19                	je     f01025b7 <mem_init+0x1245>$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	68 6c 6f 10 f0       	push   $0xf0106f6c$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	68 55 04 00 00       	push   $0x455$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	e8 dd da ff ff       	call   f0100094 <_panic>$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	6a 00                	push   $0x0$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	53                   	push   %ebx$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	e8 d1 ea ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	6a 00                	push   $0x0$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	e8 b8 ea ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	6a 00                	push   $0x0$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	56                   	push   %esi$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	e8 a1 ea ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	c7 04 24 77 74 10 f0 	movl   $0xf0107477,(%esp)$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	e8 44 11 00 00       	call   f010374e <cprintf>$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	a1 90 2e 21 f0       	mov    0xf0212e90,%eax$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	77 15                	ja     f010262e <mem_init+0x12bc>$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	50                   	push   %eax$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	68 c6 00 00 00       	push   $0xc6$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	e8 66 da ff ff       	call   f0100094 <_panic>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	6a 05                	push   $0x5$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	50                   	push   %eax$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	e8 e1 ea ff ff       	call   f010112e <boot_map_region>$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	a1 44 22 21 f0       	mov    0xf0212244,%eax$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	77 15                	ja     f0102671 <mem_init+0x12ff>$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	50                   	push   %eax$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	68 ce 00 00 00       	push   $0xce$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	e8 23 da ff ff       	call   f0100094 <_panic>$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	6a 05                	push   $0x5$/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	50                   	push   %eax$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	e8 9e ea ff ff       	call   f010112e <boot_map_region>$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	b8 00 60 11 f0       	mov    $0xf0116000,%eax$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	77 15                	ja     f01026b4 <mem_init+0x1342>$/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	50                   	push   %eax$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	68 da 00 00 00       	push   $0xda$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	e8 e0 d9 ff ff       	call   f0100094 <_panic>$/;"	l
f01026b4	obj/kern/kernel.asm	/^f01026b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	6a 03                	push   $0x3$/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	68 00 60 11 00       	push   $0x116000$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	e8 5c ea ff ff       	call   f010112e <boot_map_region>$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	c7 45 c4 00 40 21 f0 	movl   $0xf0214000,-0x3c(%ebp)$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	bb 00 40 21 f0       	mov    $0xf0214000,%ebx$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	77 15                	ja     f0102703 <mem_init+0x1391>$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	53                   	push   %ebx$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	68 1e 01 00 00       	push   $0x11e$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01026fe	obj/kern/kernel.asm	/^f01026fe:	e8 91 d9 ff ff       	call   f0100094 <_panic>$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	6a 02                	push   $0x2$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	50                   	push   %eax$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	89 f2                	mov    %esi,%edx$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	e8 0e ea ff ff       	call   f010112e <boot_map_region>$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	b8 00 40 25 f0       	mov    $0xf0254000,%eax$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	75 ae                	jne    f01026e6 <mem_init+0x1374>$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	6a 03                	push   $0x3$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	6a 00                	push   $0x0$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	e8 db e9 ff ff       	call   f010112e <boot_map_region>$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	8b 3d 8c 2e 21 f0    	mov    0xf0212e8c,%edi$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	a1 88 2e 21 f0       	mov    0xf0212e88,%eax$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	8b 35 90 2e 21 f0    	mov    0xf0212e90,%esi$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	83 c4 10             	add    $0x10,%esp$/;"	l
f010277c	obj/kern/kernel.asm	/^f010277c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	eb 55                	jmp    f01027d8 <mem_init+0x1466>$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	89 f8                	mov    %edi,%eax$/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	e8 d2 e3 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	77 15                	ja     f01027ae <mem_init+0x143c>$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	56                   	push   %esi$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	68 6d 03 00 00       	push   $0x36d$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	e8 e6 d8 ff ff       	call   f0100094 <_panic>$/;"	l
f01027ae	obj/kern/kernel.asm	/^f01027ae:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	39 c2                	cmp    %eax,%edx$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	74 19                	je     f01027d2 <mem_init+0x1460>$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	68 a0 6f 10 f0       	push   $0xf0106fa0$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	68 6d 03 00 00       	push   $0x36d$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	e8 c2 d8 ff ff       	call   f0100094 <_panic>$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	77 a6                	ja     f0102783 <mem_init+0x1411>$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	8b 35 44 22 21 f0    	mov    0xf0212244,%esi$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	89 da                	mov    %ebx,%edx$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	89 f8                	mov    %edi,%eax$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	e8 6e e3 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	77 15                	ja     f0102812 <mem_init+0x14a0>$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	56                   	push   %esi$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	68 72 03 00 00       	push   $0x372$/;"	l
f0102808	obj/kern/kernel.asm	/^f0102808:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	e8 82 d8 ff ff       	call   f0100094 <_panic>$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	39 d0                	cmp    %edx,%eax$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	74 19                	je     f0102836 <mem_init+0x14c4>$/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	68 d4 6f 10 f0       	push   $0xf0106fd4$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	68 72 03 00 00       	push   $0x372$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	e8 5e d8 ff ff       	call   f0100094 <_panic>$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	75 a7                	jne    f01027eb <mem_init+0x1479>$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	eb 30                	jmp    f0102881 <mem_init+0x150f>$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	89 f8                	mov    %edi,%eax$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	e8 04 e3 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	74 19                	je     f010287b <mem_init+0x1509>$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	68 08 70 10 f0       	push   $0xf0107008$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	68 76 03 00 00       	push   $0x376$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	e8 19 d8 ff ff       	call   f0100094 <_panic>$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	72 cc                	jb     f0102851 <mem_init+0x14df>$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f010288d	obj/kern/kernel.asm	/^f010288d:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	89 c3                	mov    %eax,%ebx$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	89 da                	mov    %ebx,%edx$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	89 f8                	mov    %edi,%eax$/;"	l
f01028ad	obj/kern/kernel.asm	/^f01028ad:	e8 b0 e2 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	77 15                	ja     f01028cf <mem_init+0x155d>$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	56                   	push   %esi$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	68 7e 03 00 00       	push   $0x37e$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	e8 c5 d7 ff ff       	call   f0100094 <_panic>$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	8d 94 0b 00 40 21 f0 	lea    -0xfdec000(%ebx,%ecx,1),%edx$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	39 d0                	cmp    %edx,%eax$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	74 19                	je     f01028f6 <mem_init+0x1584>$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	68 30 70 10 f0       	push   $0xf0107030$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01028e7	obj/kern/kernel.asm	/^f01028e7:	68 7e 03 00 00       	push   $0x37e$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	e8 9e d7 ff ff       	call   f0100094 <_panic>$/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f01028ff	obj/kern/kernel.asm	/^f01028ff:	75 a8                	jne    f01028a9 <mem_init+0x1537>$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	89 c6                	mov    %eax,%esi$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	89 da                	mov    %ebx,%edx$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	89 f8                	mov    %edi,%eax$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	e8 4a e2 ff ff       	call   f0100b62 <check_va2pa>$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	74 19                	je     f0102936 <mem_init+0x15c4>$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	68 78 70 10 f0       	push   $0xf0107078$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	68 80 03 00 00       	push   $0x380$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	e8 5e d7 ff ff       	call   f0100094 <_panic>$/;"	l
f0102936	obj/kern/kernel.asm	/^f0102936:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	39 f3                	cmp    %esi,%ebx$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	75 cf                	jne    f010290f <mem_init+0x159d>$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	b8 00 40 25 f0       	mov    $0xf0254000,%eax$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	39 f0                	cmp    %esi,%eax$/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	0f 85 2c ff ff ff    	jne    f0102890 <mem_init+0x151e>$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	eb 2a                	jmp    f0102995 <mem_init+0x1623>$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	77 1f                	ja     f0102995 <mem_init+0x1623>$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	75 7e                	jne    f01029fa <mem_init+0x1688>$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	68 90 74 10 f0       	push   $0xf0107490$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	68 8b 03 00 00       	push   $0x38b$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	e8 ff d6 ff ff       	call   f0100094 <_panic>$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	76 3f                	jbe    f01029db <mem_init+0x1669>$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	75 19                	jne    f01029bd <mem_init+0x164b>$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	68 90 74 10 f0       	push   $0xf0107490$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	68 8f 03 00 00       	push   $0x38f$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	e8 d7 d6 ff ff       	call   f0100094 <_panic>$/;"	l
f01029bd	obj/kern/kernel.asm	/^f01029bd:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	75 38                	jne    f01029fa <mem_init+0x1688>$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	68 a1 74 10 f0       	push   $0xf01074a1$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	68 90 03 00 00       	push   $0x390$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	e8 b9 d6 ff ff       	call   f0100094 <_panic>$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	74 19                	je     f01029fa <mem_init+0x1688>$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	68 b2 74 10 f0       	push   $0xf01074b2$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	68 92 03 00 00       	push   $0x392$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	e8 9a d6 ff ff       	call   f0100094 <_panic>$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	83 c0 01             	add    $0x1,%eax$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	0f 86 63 ff ff ff    	jbe    f010296b <mem_init+0x15f9>$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	68 9c 70 10 f0       	push   $0xf010709c$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	e8 39 0d 00 00       	call   f010374e <cprintf>$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	77 15                	ja     f0102a39 <mem_init+0x16c7>$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	50                   	push   %eax$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	68 f6 00 00 00       	push   $0xf6$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	e8 5b d6 ff ff       	call   f0100094 <_panic>$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102a41	obj/kern/kernel.asm	/^f0102a41:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	e8 7b e1 ff ff       	call   f0100bc6 <check_page_free_list>$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	6a 00                	push   $0x0$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	e8 62 e5 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	89 c3                	mov    %eax,%ebx$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	85 c0                	test   %eax,%eax$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	75 19                	jne    f0102a85 <mem_init+0x1713>$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	68 9c 72 10 f0       	push   $0xf010729c$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	68 6a 04 00 00       	push   $0x46a$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	e8 0f d6 ff ff       	call   f0100094 <_panic>$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	6a 00                	push   $0x0$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	e8 36 e5 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	89 c7                	mov    %eax,%edi$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	85 c0                	test   %eax,%eax$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	75 19                	jne    f0102ab1 <mem_init+0x173f>$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	68 b2 72 10 f0       	push   $0xf01072b2$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	68 6b 04 00 00       	push   $0x46b$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	e8 e3 d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	6a 00                	push   $0x0$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	e8 0a e5 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	89 c6                	mov    %eax,%esi$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	85 c0                	test   %eax,%eax$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	75 19                	jne    f0102add <mem_init+0x176b>$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	68 c8 72 10 f0       	push   $0xf01072c8$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	68 6c 04 00 00       	push   $0x46c$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	e8 b7 d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	53                   	push   %ebx$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	e8 4f e5 ff ff       	call   f0101035 <page_free>$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	89 f8                	mov    %edi,%eax$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	89 c2                	mov    %eax,%edx$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	72 12                	jb     f0102b16 <mem_init+0x17a4>$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	50                   	push   %eax$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	6a 58                	push   $0x58$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	e8 7e d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	6a 01                	push   $0x1$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	50                   	push   %eax$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	e8 73 2a 00 00       	call   f010559e <memset>$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	89 f0                	mov    %esi,%eax$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	89 c2                	mov    %eax,%edx$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	72 12                	jb     f0102b5b <mem_init+0x17e9>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	50                   	push   %eax$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	6a 58                	push   $0x58$/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	e8 39 d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	6a 02                	push   $0x2$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	50                   	push   %eax$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	e8 2e 2a 00 00       	call   f010559e <memset>$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	6a 02                	push   $0x2$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	57                   	push   %edi$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	e8 10 e7 ff ff       	call   f0101293 <page_insert>$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	74 19                	je     f0102ba6 <mem_init+0x1834>$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	68 99 73 10 f0       	push   $0xf0107399$/;"	l
f0102b92	obj/kern/kernel.asm	/^f0102b92:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	68 71 04 00 00       	push   $0x471$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	e8 ee d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	01 01 01 $/;"	l
f0102bb0	obj/kern/kernel.asm	/^f0102bb0:	74 19                	je     f0102bcb <mem_init+0x1859>$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	68 bc 70 10 f0       	push   $0xf01070bc$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	68 72 04 00 00       	push   $0x472$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	e8 c9 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	6a 02                	push   $0x2$/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	56                   	push   %esi$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	e8 b5 e6 ff ff       	call   f0101293 <page_insert>$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	02 02 02 $/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	74 19                	je     f0102c06 <mem_init+0x1894>$/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	68 74 04 00 00       	push   $0x474$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	e8 8e d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	74 19                	je     f0102c26 <mem_init+0x18b4>$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	68 bb 73 10 f0       	push   $0xf01073bb$/;"	l
f0102c12	obj/kern/kernel.asm	/^f0102c12:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	68 75 04 00 00       	push   $0x475$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	e8 6e d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	74 19                	je     f0102c46 <mem_init+0x18d4>$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	68 25 74 10 f0       	push   $0xf0107425$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	68 76 04 00 00       	push   $0x476$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	e8 4e d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	03 03 03 $/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	89 f0                	mov    %esi,%eax$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	89 c2                	mov    %eax,%edx$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	3b 15 88 2e 21 f0    	cmp    0xf0212e88,%edx$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	72 12                	jb     f0102c7d <mem_init+0x190b>$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	50                   	push   %eax$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	6a 58                	push   $0x58$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	e8 17 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	03 03 03 $/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	74 19                	je     f0102ca2 <mem_init+0x1930>$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	68 04 71 10 f0       	push   $0xf0107104$/;"	l
f0102c8e	obj/kern/kernel.asm	/^f0102c8e:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	68 78 04 00 00       	push   $0x478$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102c9d	obj/kern/kernel.asm	/^f0102c9d:	e8 f2 d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	ff 35 8c 2e 21 f0    	pushl  0xf0212e8c$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	e8 8d e5 ff ff       	call   f0101242 <page_remove>$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	74 19                	je     f0102cd8 <mem_init+0x1966>$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	68 f3 73 10 f0       	push   $0xf01073f3$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	68 7a 04 00 00       	push   $0x47a$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	e8 bc d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	8b 0d 8c 2e 21 f0    	mov    0xf0212e8c,%ecx$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	89 d8                	mov    %ebx,%eax$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	2b 05 90 2e 21 f0    	sub    0xf0212e90,%eax$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	39 c2                	cmp    %eax,%edx$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	74 19                	je     f0102d11 <mem_init+0x199f>$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	68 8c 6a 10 f0       	push   $0xf0106a8c$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	68 7d 04 00 00       	push   $0x47d$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	e8 83 d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	74 19                	je     f0102d37 <mem_init+0x19c5>$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	68 aa 73 10 f0       	push   $0xf01073aa$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	68 7f 04 00 00       	push   $0x47f$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	68 91 71 10 f0       	push   $0xf0107191$/;"	l
f0102d32	obj/kern/kernel.asm	/^f0102d32:	e8 5d d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	53                   	push   %ebx$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	e8 ef e2 ff ff       	call   f0101035 <page_free>$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	c7 04 24 30 71 10 f0 	movl   $0xf0107130,(%esp)$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	e8 fc 09 00 00       	call   f010374e <cprintf>$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	5b                   	pop    %ebx$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	5e                   	pop    %esi$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	5f                   	pop    %edi$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	5d                   	pop    %ebp$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	c3                   	ret    $/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d <user_mem_check>:$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	55                   	push   %ebp$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	57                   	push   %edi$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	56                   	push   %esi$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	53                   	push   %ebx$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	eb 43                	jmp    f0102dcd <user_mem_check+0x70>$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	6a 00                	push   $0x0$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	53                   	push   %ebx$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	e8 01 e3 ff ff       	call   f0101099 <pgdir_walk>$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	77 10                	ja     f0102db3 <user_mem_check+0x56>$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	85 c0                	test   %eax,%eax$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	74 0c                	je     f0102db3 <user_mem_check+0x56>$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	8b 00                	mov    (%eax),%eax$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	a8 01                	test   $0x1,%al$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	74 06                	je     f0102db3 <user_mem_check+0x56>$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	21 f0                	and    %esi,%eax$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	39 c6                	cmp    %eax,%esi$/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	74 14                	je     f0102dc7 <user_mem_check+0x6a>$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	0f 42 5d 0c          	cmovb  0xc(%ebp),%ebx$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	89 1d 3c 22 21 f0    	mov    %ebx,0xf021223c$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	eb 10                	jmp    f0102dd7 <user_mem_check+0x7a>$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102dd0	obj/kern/kernel.asm	/^f0102dd0:	72 b8                	jb     f0102d8a <user_mem_check+0x2d>$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	5b                   	pop    %ebx$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	5e                   	pop    %esi$/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	5f                   	pop    %edi$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	5d                   	pop    %ebp$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	c3                   	ret    $/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf <user_mem_assert>:$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	55                   	push   %ebp$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	53                   	push   %ebx$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	50                   	push   %eax$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	53                   	push   %ebx$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	e8 61 ff ff ff       	call   f0102d5d <user_mem_check>$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	85 c0                	test   %eax,%eax$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	79 21                	jns    f0102e24 <user_mem_assert+0x45>$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	ff 35 3c 22 21 f0    	pushl  0xf021223c$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	68 5c 71 10 f0       	push   $0xf010715c$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	e8 35 09 00 00       	call   f010374e <cprintf>$/;"	l
f0102e19	obj/kern/kernel.asm	/^f0102e19:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	e8 3d 06 00 00       	call   f010345e <env_destroy>$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	c9                   	leave  $/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	c3                   	ret    $/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29 <region_alloc>:$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	55                   	push   %ebp$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	57                   	push   %edi$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	56                   	push   %esi$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	53                   	push   %ebx$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	89 c7                	mov    %eax,%edi$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	89 d3                	mov    %edx,%ebx$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	eb 58                	jmp    f0102ea3 <region_alloc+0x7a>$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	6a 00                	push   $0x0$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	e8 70 e1 ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	85 c0                	test   %eax,%eax$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	75 17                	jne    f0102e73 <region_alloc+0x4a>$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	68 c0 74 10 f0       	push   $0xf01074c0$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	68 3e 01 00 00       	push   $0x13e$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	e8 21 d2 ff ff       	call   f0100094 <_panic>$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	6a 06                	push   $0x6$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	53                   	push   %ebx$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	50                   	push   %eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	e8 14 e4 ff ff       	call   f0101293 <page_insert>$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	85 c0                	test   %eax,%eax$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	74 17                	je     f0102e9d <region_alloc+0x74>$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	68 e0 74 10 f0       	push   $0xf01074e0$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	68 40 01 00 00       	push   $0x140$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	e8 f7 d1 ff ff       	call   f0100094 <_panic>$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	72 a4                	jb     f0102e4b <region_alloc+0x22>$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	5b                   	pop    %ebx$/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	5e                   	pop    %esi$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	5f                   	pop    %edi$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	5d                   	pop    %ebp$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	c3                   	ret    $/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf <envid2env>:$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	55                   	push   %ebp$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	56                   	push   %esi$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	53                   	push   %ebx$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	85 c0                	test   %eax,%eax$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	75 1a                	jne    f0102ed8 <envid2env+0x29>$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	e8 fb 2c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	eb 70                	jmp    f0102f48 <envid2env+0x99>$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	89 c3                	mov    %eax,%ebx$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	03 1d 44 22 21 f0    	add    0xf0212244,%ebx$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	74 05                	je     f0102ef4 <envid2env+0x45>$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	74 10                	je     f0102f04 <envid2env+0x55>$/;"	l
f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	eb 44                	jmp    f0102f48 <envid2env+0x99>$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	84 d2                	test   %dl,%dl$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	74 36                	je     f0102f3e <envid2env+0x8f>$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	e8 b1 2c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	3b 98 28 30 21 f0    	cmp    -0xfdecfd8(%eax),%ebx$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	74 26                	je     f0102f3e <envid2env+0x8f>$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	e8 9e 2c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	74 10                	je     f0102f3e <envid2env+0x8f>$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102f3c	obj/kern/kernel.asm	/^f0102f3c:	eb 0a                	jmp    f0102f48 <envid2env+0x99>$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	5b                   	pop    %ebx$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	5e                   	pop    %esi$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	5d                   	pop    %ebp$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	c3                   	ret    $/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c <env_init_percpu>:$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	55                   	push   %ebp$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	b8 20 03 12 f0       	mov    $0xf0120320,%eax$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	8e e8                	mov    %eax,%gs$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	8e e0                	mov    %eax,%fs$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	8e c0                	mov    %eax,%es$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	8e d8                	mov    %eax,%ds$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	8e d0                	mov    %eax,%ss$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	ea 72 2f 10 f0 08 00 	ljmp   $0x8,$0xf0102f72$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	0f 00 d0             	lldt   %ax$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	5d                   	pop    %ebp$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	c3                   	ret    $/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c <env_init>:$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	55                   	push   %ebp$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	56                   	push   %esi$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	53                   	push   %ebx$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	8b 35 48 22 21 f0    	mov    0xf0212248,%esi$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	a1 44 22 21 f0       	mov    0xf0212244,%eax$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	89 c1                	mov    %eax,%ecx$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	85 d2                	test   %edx,%edx$/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8:	74 22                	je     f0102fcc <env_init+0x50>$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	89 40 c8             	mov    %eax,-0x38(%eax)$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	75 db                	jne    f0102f96 <env_init+0x1a>$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	84 db                	test   %bl,%bl$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	74 06                	je     f0102fc5 <env_init+0x49>$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	89 35 48 22 21 f0    	mov    %esi,0xf0212248$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	e8 82 ff ff ff       	call   f0102f4c <env_init_percpu>$/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	eb 0f                	jmp    f0102fdb <env_init+0x5f>$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	89 ce                	mov    %ecx,%esi$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	eb bb                	jmp    f0102f96 <env_init+0x1a>$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	5b                   	pop    %ebx$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	5e                   	pop    %esi$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	5d                   	pop    %ebp$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	c3                   	ret    $/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf <env_alloc>:$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	55                   	push   %ebp$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	53                   	push   %ebx$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	8b 1d 48 22 21 f0    	mov    0xf0212248,%ebx$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	85 db                	test   %ebx,%ebx$/;"	l
f0102fee	obj/kern/kernel.asm	/^f0102fee:	0f 84 4b 01 00 00    	je     f010313f <env_alloc+0x160>$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	6a 01                	push   $0x1$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	e8 c7 df ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	85 c0                	test   %eax,%eax$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	0f 84 3d 01 00 00    	je     f0103146 <env_alloc+0x167>$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	89 c2                	mov    %eax,%edx$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	2b 15 90 2e 21 f0    	sub    0xf0212e90,%edx$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	89 d1                	mov    %edx,%ecx$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	3b 0d 88 2e 21 f0    	cmp    0xf0212e88,%ecx$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	72 12                	jb     f0103036 <env_alloc+0x57>$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	52                   	push   %edx$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	6a 58                	push   $0x58$/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	e8 5e d0 ff ff       	call   f0100094 <_panic>$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	c7 04 02 00 00 00 00 	movl   $0x0,(%edx,%eax,1)$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	75 ec                	jne    f0103049 <env_alloc+0x6a>$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	8b 15 8c 2e 21 f0    	mov    0xf0212e8c,%edx$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	83 c0 04             	add    $0x4,%eax$/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	75 e7                	jne    f010305d <env_alloc+0x7e>$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	77 15                	ja     f0103095 <env_alloc+0xb6>$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	50                   	push   %eax$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	68 d8 00 00 00       	push   $0xd8$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	e8 ff cf ff ff       	call   f0100094 <_panic>$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010309b	obj/kern/kernel.asm	/^f010309b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01030ac	obj/kern/kernel.asm	/^f01030ac:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	89 da                	mov    %ebx,%edx$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	2b 15 44 22 21 f0    	sub    0xf0212244,%edx$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	09 d0                	or     %edx,%eax$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01030d2	obj/kern/kernel.asm	/^f01030d2:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	6a 44                	push   $0x44$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	6a 00                	push   $0x0$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	53                   	push   %ebx$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	e8 a7 24 00 00       	call   f010559e <memset>$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	a3 48 22 21 f0       	mov    %eax,0xf0212248$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	eb 0c                	jmp    f010314b <env_alloc+0x16c>$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	eb 05                	jmp    f010314b <env_alloc+0x16c>$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	c9                   	leave  $/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	c3                   	ret    $/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150 <env_create>:$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	55                   	push   %ebp$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	89 e5                	mov    %esp,%ebp$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	57                   	push   %edi$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	56                   	push   %esi$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	53                   	push   %ebx$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	6a 00                	push   $0x0$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	50                   	push   %eax$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	e8 78 fe ff ff       	call   f0102fdf <env_alloc>$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	83 c4 10             	add    $0x10,%esp$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	85 c0                	test   %eax,%eax$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	74 15                	je     f0103183 <env_create+0x33>$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	50                   	push   %eax$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	68 f7 74 10 f0       	push   $0xf01074f7$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	68 c4 01 00 00       	push   $0x1c4$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	e8 11 cf ff ff       	call   f0100094 <_panic>$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	74 17                	je     f01031a8 <env_create+0x58>$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	68 38 75 10 f0       	push   $0xf0107538$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	68 87 01 00 00       	push   $0x187$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	e8 ec ce ff ff       	call   f0100094 <_panic>$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	85 c0                	test   %eax,%eax$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	75 17                	jne    f01031c6 <env_create+0x76>$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	68 58 75 10 f0       	push   $0xf0107558$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	68 8c 01 00 00       	push   $0x18c$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	e8 ce ce ff ff       	call   f0100094 <_panic>$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	77 15                	ja     f01031eb <env_create+0x9b>$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	50                   	push   %eax$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	68 94 01 00 00       	push   $0x194$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	e8 a9 ce ff ff       	call   f0100094 <_panic>$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	89 fb                	mov    %edi,%ebx$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	01 de                	add    %ebx,%esi$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	eb 59                	jmp    f010325c <env_create+0x10c>$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	75 51                	jne    f0103259 <env_create+0x109>$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	3b 4b 10             	cmp    0x10(%ebx),%ecx$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	73 17                	jae    f0103227 <env_create+0xd7>$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	68 12 75 10 f0       	push   $0xf0107512$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	68 a0 01 00 00       	push   $0x1a0$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	e8 6d ce ff ff       	call   f0100094 <_panic>$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	e8 f7 fb ff ff       	call   f0102e29 <region_alloc>$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	6a 00                	push   $0x0$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	e8 5c 23 00 00       	call   f010559e <memset>$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	89 f8                	mov    %edi,%eax$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	50                   	push   %eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	e8 fd 23 00 00       	call   f0105653 <memcpy>$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	39 de                	cmp    %ebx,%esi$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	77 a3                	ja     f0103203 <env_create+0xb3>$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	77 15                	ja     f0103281 <env_create+0x131>$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	50                   	push   %eax$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	68 a8 01 00 00       	push   $0x1a8$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	e8 13 ce ff ff       	call   f0100094 <_panic>$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103286	obj/kern/kernel.asm	/^f0103286:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	e8 8e fb ff ff       	call   f0102e29 <region_alloc>$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	89 78 50             	mov    %edi,0x50(%eax)$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	75 07                	jne    f01032b0 <env_create+0x160>$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	5b                   	pop    %ebx$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	5e                   	pop    %esi$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	5f                   	pop    %edi$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	5d                   	pop    %ebp$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	c3                   	ret    $/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8 <env_free>:$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	55                   	push   %ebp$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	57                   	push   %edi$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	56                   	push   %esi$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	53                   	push   %ebx$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	e8 f5 28 00 00       	call   f0105bbe <cpunum>$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	39 b8 28 30 21 f0    	cmp    %edi,-0xfdecfd8(%eax)$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	75 30                	jne    f010330b <env_free+0x53>$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	77 15                	ja     f01032fc <env_free+0x44>$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	50                   	push   %eax$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	68 dc 01 00 00       	push   $0x1dc$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	e8 98 cd ff ff       	call   f0100094 <_panic>$/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	89 d0                	mov    %edx,%eax$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	0f 84 a8 00 00 00    	je     f01033d0 <env_free+0x118>$/;"	l
f0103328	obj/kern/kernel.asm	/^f0103328:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	89 f0                	mov    %esi,%eax$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	39 05 88 2e 21 f0    	cmp    %eax,0xf0212e88$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	77 15                	ja     f0103353 <env_free+0x9b>$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	56                   	push   %esi$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	68 eb 01 00 00       	push   $0x1eb$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	e8 41 cd ff ff       	call   f0100094 <_panic>$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103359	obj/kern/kernel.asm	/^f0103359:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103368	obj/kern/kernel.asm	/^f0103368:	01 $/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	74 17                	je     f0103382 <env_free+0xca>$/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010336e	obj/kern/kernel.asm	/^f010336e:	89 d8                	mov    %ebx,%eax$/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	50                   	push   %eax$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	e8 c3 de ff ff       	call   f0101242 <page_remove>$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	75 d4                	jne    f0103361 <env_free+0xa9>$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103390	obj/kern/kernel.asm	/^f0103390:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	3b 05 88 2e 21 f0    	cmp    0xf0212e88,%eax$/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	72 14                	jb     f01033b9 <env_free+0x101>$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	68 2c 69 10 f0       	push   $0xf010692c$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	6a 51                	push   $0x51$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	e8 db cc ff ff       	call   f0100094 <_panic>$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	a1 90 2e 21 f0       	mov    0xf0212e90,%eax$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	50                   	push   %eax$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	e8 a5 dc ff ff       	call   f0101072 <page_decref>$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	0f 85 29 ff ff ff    	jne    f010330b <env_free+0x53>$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	77 15                	ja     f0103401 <env_free+0x149>$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	50                   	push   %eax$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	68 f9 01 00 00       	push   $0x1f9$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	e8 93 cc ff ff       	call   f0100094 <_panic>$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	3b 05 88 2e 21 f0    	cmp    0xf0212e88,%eax$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	72 14                	jb     f010342c <env_free+0x174>$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	68 2c 69 10 f0       	push   $0xf010692c$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	6a 51                	push   $0x51$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	68 9d 71 10 f0       	push   $0xf010719d$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	e8 68 cc ff ff       	call   f0100094 <_panic>$/;"	l
f010342c	obj/kern/kernel.asm	/^f010342c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	8b 15 90 2e 21 f0    	mov    0xf0212e90,%edx$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	50                   	push   %eax$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	e8 34 dc ff ff       	call   f0101072 <page_decref>$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	a1 48 22 21 f0       	mov    0xf0212248,%eax$/;"	l
f010344a	obj/kern/kernel.asm	/^f010344a:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	89 3d 48 22 21 f0    	mov    %edi,0xf0212248$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	5b                   	pop    %ebx$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	5e                   	pop    %esi$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	5f                   	pop    %edi$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	5d                   	pop    %ebp$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	c3                   	ret    $/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e <env_destroy>:$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	55                   	push   %ebp$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	53                   	push   %ebx$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	75 19                	jne    f0103487 <env_destroy+0x29>$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	e8 4b 27 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	3b 98 28 30 21 f0    	cmp    -0xfdecfd8(%eax),%ebx$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	74 09                	je     f0103487 <env_destroy+0x29>$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	eb 33                	jmp    f01034ba <env_destroy+0x5c>$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	53                   	push   %ebx$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	e8 28 fe ff ff       	call   f01032b8 <env_free>$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	e8 29 27 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	83 c4 10             	add    $0x10,%esp$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	3b 98 28 30 21 f0    	cmp    -0xfdecfd8(%eax),%ebx$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	75 17                	jne    f01034ba <env_destroy+0x5c>$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	e8 16 27 00 00       	call   f0105bbe <cpunum>$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	c7 80 28 30 21 f0 00 	movl   $0x0,-0xfdecfd8(%eax)$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	00 00 00 $/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	e8 8e 0e 00 00       	call   f0104348 <sched_yield>$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	c9                   	leave  $/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	c3                   	ret    $/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf <env_pop_tf>:$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	55                   	push   %ebp$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	53                   	push   %ebx$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	e8 f3 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	8b 98 28 30 21 f0    	mov    -0xfdecfd8(%eax),%ebx$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	e8 e5 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	61                   	popa   $/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	07                   	pop    %es$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	1f                   	pop    %ds$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	cf                   	iret   $/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	68 2a 75 10 f0       	push   $0xf010752a$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	68 31 02 00 00       	push   $0x231$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	e8 97 cb ff ff       	call   f0100094 <_panic>$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd <env_run>:$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	55                   	push   %ebp$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	e8 b6 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	83 b8 28 30 21 f0 00 	cmpl   $0x0,-0xfdecfd8(%eax)$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	74 29                	je     f010353d <env_run+0x40>$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	e8 a5 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	75 15                	jne    f010353d <env_run+0x40>$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	e8 91 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	e8 7c 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	89 90 28 30 21 f0    	mov    %edx,-0xfdecfd8(%eax)$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	e8 6b 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	e8 56 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	e8 44 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	77 15                	ja     f01035a2 <env_run+0xa5>$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	50                   	push   %eax$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	68 59 02 00 00       	push   $0x259$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	68 d5 74 10 f0       	push   $0xf01074d5$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	e8 f2 ca ff ff       	call   f0100094 <_panic>$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	e8 12 29 00 00       	call   f0105ec9 <spin_unlock>$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	f3 90                	pause  $/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	e8 00 26 00 00       	call   f0105bbe <cpunum>$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	83 c4 04             	add    $0x4,%esp$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	e8 f0 fe ff ff       	call   f01034bf <env_pop_tf>$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf <mc146818_read>:$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	55                   	push   %ebp$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	ee                   	out    %al,(%dx)$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	ec                   	in     (%dx),%al$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	5d                   	pop    %ebp$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	c3                   	ret    $/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6 <mc146818_write>:$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	55                   	push   %ebp$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	ee                   	out    %al,(%dx)$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	ee                   	out    %al,(%dx)$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	5d                   	pop    %ebp$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	c3                   	ret    $/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd <irq_setmask_8259A>:$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	55                   	push   %ebp$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	56                   	push   %esi$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	53                   	push   %ebx$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	66 a3 a8 03 12 f0    	mov    %ax,0xf01203a8$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	80 3d 4c 22 21 f0 00 	cmpb   $0x0,0xf021224c$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	74 5a                	je     f010366e <irq_setmask_8259A+0x71>$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	89 c6                	mov    %eax,%esi$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	ee                   	out    %al,(%dx)$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	ee                   	out    %al,(%dx)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	68 9b 75 10 f0       	push   $0xf010759b$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	e8 1b 01 00 00       	call   f010374e <cprintf>$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	f7 d6                	not    %esi$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	73 11                	jae    f0103656 <irq_setmask_8259A+0x59>$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	53                   	push   %ebx$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	68 4b 7a 10 f0       	push   $0xf0107a4b$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	e8 fb 00 00 00       	call   f010374e <cprintf>$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	75 e2                	jne    f0103640 <irq_setmask_8259A+0x43>$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	68 f5 74 10 f0       	push   $0xf01074f5$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	e8 e3 00 00 00       	call   f010374e <cprintf>$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	5b                   	pop    %ebx$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	5e                   	pop    %esi$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	5d                   	pop    %ebp$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	c3                   	ret    $/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675 <pic_init>:$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	c6 05 4c 22 21 f0 01 	movb   $0x1,0xf021224c$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	ee                   	out    %al,(%dx)$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	ee                   	out    %al,(%dx)$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	ee                   	out    %al,(%dx)$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	ee                   	out    %al,(%dx)$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	ee                   	out    %al,(%dx)$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	ee                   	out    %al,(%dx)$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	ee                   	out    %al,(%dx)$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	ee                   	out    %al,(%dx)$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01036ca	obj/kern/kernel.asm	/^f01036ca:	ee                   	out    %al,(%dx)$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	ee                   	out    %al,(%dx)$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	ee                   	out    %al,(%dx)$/;"	l
f01036dc	obj/kern/kernel.asm	/^f01036dc:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	ee                   	out    %al,(%dx)$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	ee                   	out    %al,(%dx)$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	ee                   	out    %al,(%dx)$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	0f b7 05 a8 03 12 f0 	movzwl 0xf01203a8,%eax$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	74 13                	je     f0103713 <pic_init+0x9e>$/;"	l
f0103700	obj/kern/kernel.asm	/^f0103700:	55                   	push   %ebp$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	89 e5                	mov    %esp,%ebp$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	50                   	push   %eax$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	e8 ee fe ff ff       	call   f01035fd <irq_setmask_8259A>$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	c9                   	leave  $/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	f3 c3                	repz ret $/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715 <putch>:$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	55                   	push   %ebp$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	89 e5                	mov    %esp,%ebp$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010371b	obj/kern/kernel.asm	/^f010371b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	e8 c7 d0 ff ff       	call   f01007ea <cputchar>$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	c9                   	leave  $/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	c3                   	ret    $/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728 <vcprintf>:$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	55                   	push   %ebp$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	89 e5                	mov    %esp,%ebp$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	50                   	push   %eax$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	68 15 37 10 f0       	push   $0xf0103715$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	e8 18 17 00 00       	call   f0104e61 <vprintfmt>$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	c9                   	leave  $/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	c3                   	ret    $/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e <cprintf>:$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	55                   	push   %ebp$/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	50                   	push   %eax$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	e8 c8 ff ff ff       	call   f0103728 <vcprintf>$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	c9                   	leave  $/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	c3                   	ret    $/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762 <trap_init_percpu>:$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	55                   	push   %ebp$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	89 e5                	mov    %esp,%ebp$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	57                   	push   %edi$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	56                   	push   %esi$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	53                   	push   %ebx$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	e8 4e 24 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	89 c6                	mov    %eax,%esi$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	e8 47 24 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	89 f1                	mov    %esi,%ecx$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	29 ca                	sub    %ecx,%edx$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	89 90 30 30 21 f0    	mov    %edx,-0xfdecfd0(%eax)$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	e8 2d 24 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	66 c7 80 34 30 21 f0 	movw   $0x10,-0xfdecfcc(%eax)$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	10 00 $/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	e8 1c 24 00 00       	call   f0105bbe <cpunum>$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	66 c7 80 92 30 21 f0 	movw   $0x68,-0xfdecf6e(%eax)$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	68 00 $/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	8d 5e 05             	lea    0x5(%esi),%ebx$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	e8 08 24 00 00       	call   f0105bbe <cpunum>$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	89 c7                	mov    %eax,%edi$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	e8 01 24 00 00       	call   f0105bbe <cpunum>$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	e8 f9 23 00 00       	call   f0105bbe <cpunum>$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	66 c7 04 dd 40 03 12 	movw   $0x67,-0xfedfcc0(,%ebx,8)$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	f0 67 00 $/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	81 c7 2c 30 21 f0    	add    $0xf021302c,%edi$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	66 89 3c dd 42 03 12 	mov    %di,-0xfedfcbe(,%ebx,8)$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	f0 $/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	81 c2 2c 30 21 f0    	add    $0xf021302c,%edx$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	88 14 dd 44 03 12 f0 	mov    %dl,-0xfedfcbc(,%ebx,8)$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	c6 04 dd 46 03 12 f0 	movb   $0x40,-0xfedfcba(,%ebx,8)$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	40 $/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	05 2c 30 21 f0       	add    $0xf021302c,%eax$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	88 04 dd 47 03 12 f0 	mov    %al,-0xfedfcb9(,%ebx,8)$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	c6 04 dd 45 03 12 f0 	movb   $0x89,-0xfedfcbb(,%ebx,8)$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	89 $/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	8d 34 f5 28 00 00 00 	lea    0x28(,%esi,8),%esi$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	0f 00 de             	ltr    %si$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	b8 ac 03 12 f0       	mov    $0xf01203ac,%eax$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	5b                   	pop    %ebx$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	5e                   	pop    %esi$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	5f                   	pop    %edi$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	5d                   	pop    %ebp$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	c3                   	ret    $/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830 <trap_init>:$/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830:	55                   	push   %ebp$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	89 e5                	mov    %esp,%ebp$/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	b8 d4 41 10 f0       	mov    $0xf01041d4,%eax$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	66 a3 60 22 21 f0    	mov    %ax,0xf0212260$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	66 c7 05 62 22 21 f0 	movw   $0x8,0xf0212262$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	08 00 $/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	c6 05 64 22 21 f0 00 	movb   $0x0,0xf0212264$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	c6 05 65 22 21 f0 8e 	movb   $0x8e,0xf0212265$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	66 a3 66 22 21 f0    	mov    %ax,0xf0212266$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	b8 de 41 10 f0       	mov    $0xf01041de,%eax$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	66 a3 68 22 21 f0    	mov    %ax,0xf0212268$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	66 c7 05 6a 22 21 f0 	movw   $0x8,0xf021226a$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	08 00 $/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	c6 05 6c 22 21 f0 00 	movb   $0x0,0xf021226c$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	c6 05 6d 22 21 f0 8e 	movb   $0x8e,0xf021226d$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	66 a3 6e 22 21 f0    	mov    %ax,0xf021226e$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	b8 e4 41 10 f0       	mov    $0xf01041e4,%eax$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	66 a3 70 22 21 f0    	mov    %ax,0xf0212270$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	66 c7 05 72 22 21 f0 	movw   $0x8,0xf0212272$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	08 00 $/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	c6 05 74 22 21 f0 00 	movb   $0x0,0xf0212274$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	c6 05 75 22 21 f0 8e 	movb   $0x8e,0xf0212275$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	66 a3 76 22 21 f0    	mov    %ax,0xf0212276$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	b8 ea 41 10 f0       	mov    $0xf01041ea,%eax$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	66 a3 78 22 21 f0    	mov    %ax,0xf0212278$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	66 c7 05 7a 22 21 f0 	movw   $0x8,0xf021227a$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	08 00 $/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	c6 05 7c 22 21 f0 00 	movb   $0x0,0xf021227c$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	c6 05 7d 22 21 f0 ee 	movb   $0xee,0xf021227d$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	66 a3 7e 22 21 f0    	mov    %ax,0xf021227e$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	b8 f0 41 10 f0       	mov    $0xf01041f0,%eax$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	66 a3 80 22 21 f0    	mov    %ax,0xf0212280$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	66 c7 05 82 22 21 f0 	movw   $0x8,0xf0212282$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	08 00 $/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	c6 05 84 22 21 f0 00 	movb   $0x0,0xf0212284$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	c6 05 85 22 21 f0 8e 	movb   $0x8e,0xf0212285$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	66 a3 86 22 21 f0    	mov    %ax,0xf0212286$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	b8 f6 41 10 f0       	mov    $0xf01041f6,%eax$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	66 a3 88 22 21 f0    	mov    %ax,0xf0212288$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	66 c7 05 8a 22 21 f0 	movw   $0x8,0xf021228a$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	08 00 $/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	c6 05 8c 22 21 f0 00 	movb   $0x0,0xf021228c$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	c6 05 8d 22 21 f0 8e 	movb   $0x8e,0xf021228d$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	66 a3 8e 22 21 f0    	mov    %ax,0xf021228e$/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	b8 fc 41 10 f0       	mov    $0xf01041fc,%eax$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	66 a3 90 22 21 f0    	mov    %ax,0xf0212290$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	66 c7 05 92 22 21 f0 	movw   $0x8,0xf0212292$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	08 00 $/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	c6 05 94 22 21 f0 00 	movb   $0x0,0xf0212294$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	c6 05 95 22 21 f0 8e 	movb   $0x8e,0xf0212295$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	66 a3 96 22 21 f0    	mov    %ax,0xf0212296$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	b8 02 42 10 f0       	mov    $0xf0104202,%eax$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	66 a3 98 22 21 f0    	mov    %ax,0xf0212298$/;"	l
f010396e	obj/kern/kernel.asm	/^f010396e:	66 c7 05 9a 22 21 f0 	movw   $0x8,0xf021229a$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	08 00 $/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	c6 05 9c 22 21 f0 00 	movb   $0x0,0xf021229c$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	c6 05 9d 22 21 f0 8e 	movb   $0x8e,0xf021229d$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	66 a3 9e 22 21 f0    	mov    %ax,0xf021229e$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	b8 08 42 10 f0       	mov    $0xf0104208,%eax$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	66 a3 a0 22 21 f0    	mov    %ax,0xf02122a0$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	66 c7 05 a2 22 21 f0 	movw   $0x8,0xf02122a2$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	08 00 $/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	c6 05 a4 22 21 f0 00 	movb   $0x0,0xf02122a4$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	c6 05 a5 22 21 f0 8e 	movb   $0x8e,0xf02122a5$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	66 a3 a6 22 21 f0    	mov    %ax,0xf02122a6$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	b8 0c 42 10 f0       	mov    $0xf010420c,%eax$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	66 a3 b0 22 21 f0    	mov    %ax,0xf02122b0$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	66 c7 05 b2 22 21 f0 	movw   $0x8,0xf02122b2$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	08 00 $/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	c6 05 b4 22 21 f0 00 	movb   $0x0,0xf02122b4$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	c6 05 b5 22 21 f0 8e 	movb   $0x8e,0xf02122b5$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	66 a3 b6 22 21 f0    	mov    %ax,0xf02122b6$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	b8 10 42 10 f0       	mov    $0xf0104210,%eax$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	66 a3 b8 22 21 f0    	mov    %ax,0xf02122b8$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	66 c7 05 ba 22 21 f0 	movw   $0x8,0xf02122ba$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	08 00 $/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	c6 05 bc 22 21 f0 00 	movb   $0x0,0xf02122bc$/;"	l
f01039ff	obj/kern/kernel.asm	/^f01039ff:	c6 05 bd 22 21 f0 8e 	movb   $0x8e,0xf02122bd$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	66 a3 be 22 21 f0    	mov    %ax,0xf02122be$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	b8 14 42 10 f0       	mov    $0xf0104214,%eax$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	66 a3 c0 22 21 f0    	mov    %ax,0xf02122c0$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	66 c7 05 c2 22 21 f0 	movw   $0x8,0xf02122c2$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	08 00 $/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	c6 05 c4 22 21 f0 00 	movb   $0x0,0xf02122c4$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	c6 05 c5 22 21 f0 8e 	movb   $0x8e,0xf02122c5$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	66 a3 c6 22 21 f0    	mov    %ax,0xf02122c6$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	b8 18 42 10 f0       	mov    $0xf0104218,%eax$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	66 a3 c8 22 21 f0    	mov    %ax,0xf02122c8$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	66 c7 05 ca 22 21 f0 	movw   $0x8,0xf02122ca$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	08 00 $/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	c6 05 cc 22 21 f0 00 	movb   $0x0,0xf02122cc$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	c6 05 cd 22 21 f0 8e 	movb   $0x8e,0xf02122cd$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	66 a3 ce 22 21 f0    	mov    %ax,0xf02122ce$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	b8 1c 42 10 f0       	mov    $0xf010421c,%eax$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	66 a3 d0 22 21 f0    	mov    %ax,0xf02122d0$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	66 c7 05 d2 22 21 f0 	movw   $0x8,0xf02122d2$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	08 00 $/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	c6 05 d4 22 21 f0 00 	movb   $0x0,0xf02122d4$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	c6 05 d5 22 21 f0 8e 	movb   $0x8e,0xf02122d5$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	66 a3 d6 22 21 f0    	mov    %ax,0xf02122d6$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	b8 20 42 10 f0       	mov    $0xf0104220,%eax$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	66 a3 e0 22 21 f0    	mov    %ax,0xf02122e0$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	66 c7 05 e2 22 21 f0 	movw   $0x8,0xf02122e2$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	08 00 $/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	c6 05 e4 22 21 f0 00 	movb   $0x0,0xf02122e4$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	c6 05 e5 22 21 f0 8e 	movb   $0x8e,0xf02122e5$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	66 a3 e6 22 21 f0    	mov    %ax,0xf02122e6$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	b8 26 42 10 f0       	mov    $0xf0104226,%eax$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	66 a3 e8 22 21 f0    	mov    %ax,0xf02122e8$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	66 c7 05 ea 22 21 f0 	movw   $0x8,0xf02122ea$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	08 00 $/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	c6 05 ec 22 21 f0 00 	movb   $0x0,0xf02122ec$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	c6 05 ed 22 21 f0 8e 	movb   $0x8e,0xf02122ed$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	66 a3 ee 22 21 f0    	mov    %ax,0xf02122ee$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	b8 2c 42 10 f0       	mov    $0xf010422c,%eax$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	66 a3 f0 22 21 f0    	mov    %ax,0xf02122f0$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	66 c7 05 f2 22 21 f0 	movw   $0x8,0xf02122f2$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	08 00 $/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa:	c6 05 f4 22 21 f0 00 	movb   $0x0,0xf02122f4$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	c6 05 f5 22 21 f0 8e 	movb   $0x8e,0xf02122f5$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	66 a3 f6 22 21 f0    	mov    %ax,0xf02122f6$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	b8 32 42 10 f0       	mov    $0xf0104232,%eax$/;"	l
f0103b16	obj/kern/kernel.asm	/^f0103b16:	66 a3 f8 22 21 f0    	mov    %ax,0xf02122f8$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	66 c7 05 fa 22 21 f0 	movw   $0x8,0xf02122fa$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	08 00 $/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	c6 05 fc 22 21 f0 00 	movb   $0x0,0xf02122fc$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	c6 05 fd 22 21 f0 8e 	movb   $0x8e,0xf02122fd$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	66 a3 fe 22 21 f0    	mov    %ax,0xf02122fe$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	b8 38 42 10 f0       	mov    $0xf0104238,%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	66 a3 e0 23 21 f0    	mov    %ax,0xf02123e0$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	66 c7 05 e2 23 21 f0 	movw   $0x8,0xf02123e2$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	08 00 $/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	c6 05 e4 23 21 f0 00 	movb   $0x0,0xf02123e4$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	c6 05 e5 23 21 f0 ee 	movb   $0xee,0xf02123e5$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	66 a3 e6 23 21 f0    	mov    %ax,0xf02123e6$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	b8 3e 42 10 f0       	mov    $0xf010423e,%eax$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	66 a3 f8 23 21 f0    	mov    %ax,0xf02123f8$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	66 c7 05 fa 23 21 f0 	movw   $0x8,0xf02123fa$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	08 00 $/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	c6 05 fc 23 21 f0 00 	movb   $0x0,0xf02123fc$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	c6 05 fd 23 21 f0 ee 	movb   $0xee,0xf02123fd$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	66 a3 fe 23 21 f0    	mov    %ax,0xf02123fe$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	b8 44 42 10 f0       	mov    $0xf0104244,%eax$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	66 a3 d0 23 21 f0    	mov    %ax,0xf02123d0$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	66 c7 05 d2 23 21 f0 	movw   $0x8,0xf02123d2$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	08 00 $/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	c6 05 d4 23 21 f0 00 	movb   $0x0,0xf02123d4$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	c6 05 d5 23 21 f0 ee 	movb   $0xee,0xf02123d5$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	66 a3 d6 23 21 f0    	mov    %ax,0xf02123d6$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	b8 4a 42 10 f0       	mov    $0xf010424a,%eax$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	66 a3 68 23 21 f0    	mov    %ax,0xf0212368$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	66 c7 05 6a 23 21 f0 	movw   $0x8,0xf021236a$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	08 00 $/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	c6 05 6c 23 21 f0 00 	movb   $0x0,0xf021236c$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	c6 05 6d 23 21 f0 ee 	movb   $0xee,0xf021236d$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	66 a3 6e 23 21 f0    	mov    %ax,0xf021236e$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	b8 50 42 10 f0       	mov    $0xf0104250,%eax$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	66 a3 80 23 21 f0    	mov    %ax,0xf0212380$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	66 c7 05 82 23 21 f0 	movw   $0x8,0xf0212382$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	08 00 $/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	c6 05 84 23 21 f0 00 	movb   $0x0,0xf0212384$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	c6 05 85 23 21 f0 ee 	movb   $0xee,0xf0212385$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	66 a3 86 23 21 f0    	mov    %ax,0xf0212386$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	b8 56 42 10 f0       	mov    $0xf0104256,%eax$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	66 a3 98 23 21 f0    	mov    %ax,0xf0212398$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	66 c7 05 9a 23 21 f0 	movw   $0x8,0xf021239a$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	08 00 $/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	c6 05 9c 23 21 f0 00 	movb   $0x0,0xf021239c$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	c6 05 9d 23 21 f0 ee 	movb   $0xee,0xf021239d$/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	66 a3 9e 23 21 f0    	mov    %ax,0xf021239e$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	b8 5c 42 10 f0       	mov    $0xf010425c,%eax$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	66 a3 60 23 21 f0    	mov    %ax,0xf0212360$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	66 c7 05 62 23 21 f0 	movw   $0x8,0xf0212362$/;"	l
f0103c50	obj/kern/kernel.asm	/^f0103c50:	08 00 $/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	c6 05 64 23 21 f0 00 	movb   $0x0,0xf0212364$/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	c6 05 65 23 21 f0 ee 	movb   $0xee,0xf0212365$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	66 a3 66 23 21 f0    	mov    %ax,0xf0212366$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	e8 f4 fa ff ff       	call   f0103762 <trap_init_percpu>$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	c9                   	leave  $/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	c3                   	ret    $/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70 <print_regs>:$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	55                   	push   %ebp$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	53                   	push   %ebx$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	ff 33                	pushl  (%ebx)$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	68 af 75 10 f0       	push   $0xf01075af$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	e8 c8 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	68 be 75 10 f0       	push   $0xf01075be$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	e8 b8 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	68 cd 75 10 f0       	push   $0xf01075cd$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	e8 a8 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	68 dc 75 10 f0       	push   $0xf01075dc$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	e8 98 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	68 eb 75 10 f0       	push   $0xf01075eb$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	e8 88 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	68 fa 75 10 f0       	push   $0xf01075fa$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	e8 78 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	68 09 76 10 f0       	push   $0xf0107609$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	e8 68 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	68 18 76 10 f0       	push   $0xf0107618$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	e8 58 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	c9                   	leave  $/;"	l
f0103cfd	obj/kern/kernel.asm	/^f0103cfd:	c3                   	ret    $/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe <print_trapframe>:$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	55                   	push   %ebp$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	56                   	push   %esi$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	53                   	push   %ebx$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	e8 b3 1e 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	50                   	push   %eax$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	53                   	push   %ebx$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	68 7c 76 10 f0       	push   $0xf010767c$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	e8 34 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	e8 4e ff ff ff       	call   f0103c70 <print_regs>$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	50                   	push   %eax$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	68 9a 76 10 f0       	push   $0xf010769a$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	e8 1a fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	50                   	push   %eax$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	68 ad 76 10 f0       	push   $0xf01076ad$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	e8 08 fa ff ff       	call   f010374e <cprintf>$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	77 09                	ja     f0103d5a <print_trapframe+0x5c>$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	8b 14 85 60 79 10 f0 	mov    -0xfef86a0(,%eax,4),%edx$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	eb 1f                	jmp    f0103d79 <print_trapframe+0x7b>$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	74 15                	je     f0103d74 <print_trapframe+0x76>$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	b9 46 76 10 f0       	mov    $0xf0107646,%ecx$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	ba 33 76 10 f0       	mov    $0xf0107633,%edx$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	eb 05                	jmp    f0103d79 <print_trapframe+0x7b>$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	ba 27 76 10 f0       	mov    $0xf0107627,%edx$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	52                   	push   %edx$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	50                   	push   %eax$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	68 c0 76 10 f0       	push   $0xf01076c0$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	e8 c6 f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	3b 1d 60 2a 21 f0    	cmp    0xf0212a60,%ebx$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	75 1a                	jne    f0103dad <print_trapframe+0xaf>$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	75 14                	jne    f0103dad <print_trapframe+0xaf>$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	50                   	push   %eax$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	68 d2 76 10 f0       	push   $0xf01076d2$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	e8 a4 f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	68 e1 76 10 f0       	push   $0xf01076e1$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	e8 91 f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	75 49                	jne    f0103e0f <print_trapframe+0x111>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	89 c2                	mov    %eax,%edx$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	ba 60 76 10 f0       	mov    $0xf0107660,%edx$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	b9 55 76 10 f0       	mov    $0xf0107655,%ecx$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	89 c2                	mov    %eax,%edx$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	ba 72 76 10 f0       	mov    $0xf0107672,%edx$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	be 6c 76 10 f0       	mov    $0xf010766c,%esi$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	be ac 77 10 f0       	mov    $0xf01077ac,%esi$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	b8 77 76 10 f0       	mov    $0xf0107677,%eax$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	51                   	push   %ecx$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	52                   	push   %edx$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	50                   	push   %eax$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	68 ef 76 10 f0       	push   $0xf01076ef$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	e8 44 f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	eb 10                	jmp    f0103e1f <print_trapframe+0x121>$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	68 f5 74 10 f0       	push   $0xf01074f5$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	e8 32 f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	68 fe 76 10 f0       	push   $0xf01076fe$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	e8 1f f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	50                   	push   %eax$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	68 0d 77 10 f0       	push   $0xf010770d$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	e8 0d f9 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	68 20 77 10 f0       	push   $0xf0107720$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	e8 fd f8 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	74 25                	je     f0103e7f <print_trapframe+0x181>$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	68 2f 77 10 f0       	push   $0xf010772f$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	e8 e4 f8 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	50                   	push   %eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	68 3e 77 10 f0       	push   $0xf010773e$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	e8 d2 f8 ff ff       	call   f010374e <cprintf>$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	5b                   	pop    %ebx$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	5e                   	pop    %esi$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	5d                   	pop    %ebp$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	c3                   	ret    $/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86 <page_fault_handler>:$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	55                   	push   %ebp$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	57                   	push   %edi$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	56                   	push   %esi$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	53                   	push   %ebx$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	75 17                	jne    f0103eb2 <page_fault_handler+0x2c>$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	68 f8 78 10 f0       	push   $0xf01078f8$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	68 58 01 00 00       	push   $0x158$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	68 51 77 10 f0       	push   $0xf0107751$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	e8 e2 c1 ff ff       	call   f0100094 <_panic>$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	e8 07 1d 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	0f 84 89 00 00 00    	je     f0103f53 <page_fault_handler+0xcd>$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	89 d7                	mov    %edx,%edi$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	e8 d3 1c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	6a 02                	push   $0x2$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	6a 34                	push   $0x34$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	57                   	push   %edi$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	e8 e1 ee ff ff       	call   f0102ddf <user_mem_assert>$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	89 fa                	mov    %edi,%edx$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	89 37                	mov    %esi,(%edi)$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	89 de                	mov    %ebx,%esi$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	89 53 3c             	mov    %edx,0x3c(%ebx)$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	e8 90 1c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	e8 7c 1c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	e8 aa f5 ff ff       	call   f01034fd <env_run>$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	e8 63 1c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	57                   	push   %edi$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	56                   	push   %esi$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	68 20 79 10 f0       	push   $0xf0107920$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	e8 db f7 ff ff       	call   f010374e <cprintf>$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	e8 83 fd ff ff       	call   f0103cfe <print_trapframe>$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	e8 3e 1c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	e8 cd f4 ff ff       	call   f010345e <env_destroy>$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	5b                   	pop    %ebx$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	5e                   	pop    %esi$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	5f                   	pop    %edi$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	5d                   	pop    %ebp$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	c3                   	ret    $/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c <trap>:$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	55                   	push   %ebp$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	57                   	push   %edi$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	56                   	push   %esi$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	fc                   	cld    $/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	83 3d 80 2e 21 f0 00 	cmpl   $0x0,0xf0212e80$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	74 01                	je     f0103faf <trap+0x13>$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	f4                   	hlt    $/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	e8 0a 1c 00 00       	call   f0105bbe <cpunum>$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	81 c2 20 30 21 f0    	add    $0xf0213020,%edx$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	75 10                	jne    f0103fdb <trap+0x3f>$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	e8 54 1e 00 00       	call   f0105e2c <spin_lock>$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	9c                   	pushf  $/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	58                   	pop    %eax$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	74 19                	je     f0103ffb <trap+0x5f>$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	68 5d 77 10 f0       	push   $0xf010775d$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	68 1e 01 00 00       	push   $0x11e$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	68 51 77 10 f0       	push   $0xf0107751$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	e8 99 c0 ff ff       	call   f0100094 <_panic>$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	0f 85 a0 00 00 00    	jne    f01040ac <trap+0x110>$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	e8 13 1e 00 00       	call   f0105e2c <spin_lock>$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	e8 a0 1b 00 00       	call   f0105bbe <cpunum>$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	83 b8 28 30 21 f0 00 	cmpl   $0x0,-0xfdecfd8(%eax)$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	75 19                	jne    f0104046 <trap+0xaa>$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	68 76 77 10 f0       	push   $0xf0107776$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	68 b7 71 10 f0       	push   $0xf01071b7$/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	68 26 01 00 00       	push   $0x126$/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	68 51 77 10 f0       	push   $0xf0107751$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	e8 4e c0 ff ff       	call   f0100094 <_panic>$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	e8 73 1b 00 00       	call   f0105bbe <cpunum>$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	75 2d                	jne    f0104087 <trap+0xeb>$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	e8 5f 1b 00 00       	call   f0105bbe <cpunum>$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	e8 48 f2 ff ff       	call   f01032b8 <env_free>$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	e8 49 1b 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	c7 80 28 30 21 f0 00 	movl   $0x0,-0xfdecfd8(%eax)$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	00 00 00 $/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	e8 c1 02 00 00       	call   f0104348 <sched_yield>$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	e8 32 1b 00 00       	call   f0105bbe <cpunum>$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	89 c7                	mov    %eax,%edi$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	e8 1b 1b 00 00       	call   f0105bbe <cpunum>$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	8b b0 28 30 21 f0    	mov    -0xfdecfd8(%eax),%esi$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	89 35 60 2a 21 f0    	mov    %esi,0xf0212a60$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	75 0a                	jne    f01040c4 <trap+0x128>$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	e8 89 c5 ff ff       	call   f0100648 <kbd_intr>$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	e9 cf 00 00 00       	jmp    f0104193 <trap+0x1f7>$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	75 0a                	jne    f01040d3 <trap+0x137>$/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	e8 5e c5 ff ff       	call   f010062c <serial_intr>$/;"	l
f01040ce	obj/kern/kernel.asm	/^f01040ce:	e9 c0 00 00 00       	jmp    f0104193 <trap+0x1f7>$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	75 1d                	jne    f01040f5 <trap+0x159>$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	68 7d 77 10 f0       	push   $0xf010777d$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	e8 69 f6 ff ff       	call   f010374e <cprintf>$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	e8 11 fc ff ff       	call   f0103cfe <print_trapframe>$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	e9 9e 00 00 00       	jmp    f0104193 <trap+0x1f7>$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	75 0a                	jne    f0104104 <trap+0x168>$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	e8 0a 1c 00 00       	call   f0105d09 <lapic_eoi>$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	e8 44 02 00 00       	call   f0104348 <sched_yield>$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	75 0e                	jne    f0104117 <trap+0x17b>$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	56                   	push   %esi$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	e8 74 fd ff ff       	call   f0103e86 <page_fault_handler>$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	eb 7c                	jmp    f0104193 <trap+0x1f7>$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	75 0e                	jne    f010412a <trap+0x18e>$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	56                   	push   %esi$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	e8 92 c8 ff ff       	call   f01009b7 <monitor>$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	eb 69                	jmp    f0104193 <trap+0x1f7>$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	75 21                	jne    f0104150 <trap+0x1b4>$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	ff 36                	pushl  (%esi)$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	e8 c9 02 00 00       	call   f0104411 <syscall>$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	eb 43                	jmp    f0104193 <trap+0x1f7>$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	56                   	push   %esi$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	e8 a5 fb ff ff       	call   f0103cfe <print_trapframe>$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	83 c4 10             	add    $0x10,%esp$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	75 17                	jne    f010417a <trap+0x1de>$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	68 9a 77 10 f0       	push   $0xf010779a$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	68 02 01 00 00       	push   $0x102$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	68 51 77 10 f0       	push   $0xf0107751$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	e8 1a bf ff ff       	call   f0100094 <_panic>$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	e8 3f 1a 00 00       	call   f0105bbe <cpunum>$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	e8 ce f2 ff ff       	call   f010345e <env_destroy>$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	e8 26 1a 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	83 b8 28 30 21 f0 00 	cmpl   $0x0,-0xfdecfd8(%eax)$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	74 2a                	je     f01041ce <trap+0x232>$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	e8 15 1a 00 00       	call   f0105bbe <cpunum>$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01041b2	obj/kern/kernel.asm	/^f01041b2:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	75 16                	jne    f01041ce <trap+0x232>$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	e8 01 1a 00 00       	call   f0105bbe <cpunum>$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	e8 2f f3 ff ff       	call   f01034fd <env_run>$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	e8 75 01 00 00       	call   f0104348 <sched_yield>$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	90                   	nop$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4 <divide_handler>:$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	6a 00                	push   $0x0$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	6a 00                	push   $0x0$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	e9 85 00 00 00       	jmp    f0104262 <_alltraps>$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	90                   	nop$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de <debug_handler>:$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	6a 00                	push   $0x0$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	6a 01                	push   $0x1$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	eb 7e                	jmp    f0104262 <_alltraps>$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4 <nmi_handler>:$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	6a 00                	push   $0x0$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	6a 02                	push   $0x2$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	eb 78                	jmp    f0104262 <_alltraps>$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea <brkpt_handler>:$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	6a 00                	push   $0x0$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	6a 03                	push   $0x3$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	eb 72                	jmp    f0104262 <_alltraps>$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0 <oflow_handler>:$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	6a 00                	push   $0x0$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	6a 04                	push   $0x4$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	eb 6c                	jmp    f0104262 <_alltraps>$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6 <bound_handler>:$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	6a 00                	push   $0x0$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	6a 05                	push   $0x5$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	eb 66                	jmp    f0104262 <_alltraps>$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc <illop_handler>:$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	6a 00                	push   $0x0$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	6a 06                	push   $0x6$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	eb 60                	jmp    f0104262 <_alltraps>$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202 <device_handler>:$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	6a 00                	push   $0x0$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	6a 07                	push   $0x7$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	eb 5a                	jmp    f0104262 <_alltraps>$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208 <dblflt_handler>:$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	6a 08                	push   $0x8$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	eb 56                	jmp    f0104262 <_alltraps>$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c <tss_handler>:$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	6a 0a                	push   $0xa$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	eb 52                	jmp    f0104262 <_alltraps>$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210 <segnp_handler>:$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	6a 0b                	push   $0xb$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	eb 4e                	jmp    f0104262 <_alltraps>$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214 <stack_handler>:$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	6a 0c                	push   $0xc$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	eb 4a                	jmp    f0104262 <_alltraps>$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218 <gpflt_handler>:$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	6a 0d                	push   $0xd$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	eb 46                	jmp    f0104262 <_alltraps>$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c <pgflt_handler>:$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	6a 0e                	push   $0xe$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	eb 42                	jmp    f0104262 <_alltraps>$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220 <fperr_handler>:$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	6a 00                	push   $0x0$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	6a 10                	push   $0x10$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	eb 3c                	jmp    f0104262 <_alltraps>$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226 <align_handler>:$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	6a 00                	push   $0x0$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	6a 11                	push   $0x11$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	eb 36                	jmp    f0104262 <_alltraps>$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c <mchk_handler>:$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	6a 00                	push   $0x0$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	6a 12                	push   $0x12$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	eb 30                	jmp    f0104262 <_alltraps>$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232 <simderr_handler>:$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	6a 00                	push   $0x0$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	6a 13                	push   $0x13$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	eb 2a                	jmp    f0104262 <_alltraps>$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238 <syscall_handler>:$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	6a 00                	push   $0x0$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	6a 30                	push   $0x30$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	eb 24                	jmp    f0104262 <_alltraps>$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e <irq_error_handler>:$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	6a 00                	push   $0x0$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	6a 33                	push   $0x33$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	eb 1e                	jmp    f0104262 <_alltraps>$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244 <irq_ide_handler>:$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	6a 00                	push   $0x0$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	6a 2e                	push   $0x2e$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	eb 18                	jmp    f0104262 <_alltraps>$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a <irq_kbd_handler>:$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	6a 00                	push   $0x0$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	6a 21                	push   $0x21$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	eb 12                	jmp    f0104262 <_alltraps>$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250 <irq_serial_handler>:$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	6a 00                	push   $0x0$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	6a 24                	push   $0x24$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	eb 0c                	jmp    f0104262 <_alltraps>$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256 <irq_spurious_handler>:$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	6a 00                	push   $0x0$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	6a 27                	push   $0x27$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	eb 06                	jmp    f0104262 <_alltraps>$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c <irq_timer_handler>:$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	6a 00                	push   $0x0$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	6a 20                	push   $0x20$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	eb 00                	jmp    f0104262 <_alltraps>$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262 <_alltraps>:$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	1e                   	push   %ds$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	06                   	push   %es$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	60                   	pusha  $/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	8e d8                	mov    %eax,%ds$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	8e c0                	mov    %eax,%es$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	54                   	push   %esp$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	e8 28 fd ff ff       	call   f0103f9c <trap>$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274 <sched_halt>:$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	55                   	push   %ebp$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	89 e5                	mov    %esp,%ebp$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	a1 44 22 21 f0       	mov    0xf0212244,%eax$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	8b 02                	mov    (%edx),%eax$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	76 10                	jbe    f01042a1 <sched_halt+0x2d>$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	75 e8                	jne    f0104287 <sched_halt+0x13>$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	eb 08                	jmp    f01042a9 <sched_halt+0x35>$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	75 1f                	jne    f01042c8 <sched_halt+0x54>$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	68 b0 79 10 f0       	push   $0xf01079b0$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	e8 98 f4 ff ff       	call   f010374e <cprintf>$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	6a 00                	push   $0x0$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	e8 f4 c6 ff ff       	call   f01009b7 <monitor>$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	eb f1                	jmp    f01042b9 <sched_halt+0x45>$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	e8 f1 18 00 00       	call   f0105bbe <cpunum>$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	c7 80 28 30 21 f0 00 	movl   $0x0,-0xfdecfd8(%eax)$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	00 00 00 $/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	a1 8c 2e 21 f0       	mov    0xf0212e8c,%eax$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	77 12                	ja     f01042f8 <sched_halt+0x84>$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	50                   	push   %eax$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	68 4c 63 10 f0       	push   $0xf010634c$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	6a 56                	push   $0x56$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	68 d9 79 10 f0       	push   $0xf01079d9$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	e8 9c bd ff ff       	call   f0100094 <_panic>$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	e8 b9 18 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	81 c2 20 30 21 f0    	add    $0xf0213020,%edx$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104313	obj/kern/kernel.asm	/^f0104313:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	e8 a5 1b 00 00       	call   f0105ec9 <spin_unlock>$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	f3 90                	pause  $/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	e8 93 18 00 00       	call   f0105bbe <cpunum>$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	8b 80 30 30 21 f0    	mov    -0xfdecfd0(%eax),%eax$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	89 c4                	mov    %eax,%esp$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	6a 00                	push   $0x0$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	6a 00                	push   $0x0$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	fb                   	sti    $/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	f4                   	hlt    $/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	eb fd                	jmp    f0104340 <sched_halt+0xcc>$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	c9                   	leave  $/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	c3                   	ret    $/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348 <sched_yield>:$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	55                   	push   %ebp$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	89 e5                	mov    %esp,%ebp$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	53                   	push   %ebx$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	e8 6a 18 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	83 b8 28 30 21 f0 00 	cmpl   $0x0,-0xfdecfd8(%eax)$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	74 17                	je     f010437c <sched_yield+0x34>$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	e8 54 18 00 00       	call   f0105bbe <cpunum>$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	8b 0d 44 22 21 f0    	mov    0xf0212244,%ecx$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	eb 28                	jmp    f01043b4 <sched_yield+0x6c>$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	6b d8 7c             	imul   $0x7c,%eax,%ebx$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	01 cb                	add    %ecx,%ebx$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	83 7b 54 02          	cmpl   $0x2,0x54(%ebx)$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	75 09                	jne    f01043a0 <sched_yield+0x58>$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	53                   	push   %ebx$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	e8 5d f1 ff ff       	call   f01034fd <env_run>$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	89 c3                	mov    %eax,%ebx$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	c1 fb 1f             	sar    $0x1f,%ebx$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	01 d8                	add    %ebx,%eax$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	29 d8                	sub    %ebx,%eax$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	39 c2                	cmp    %eax,%edx$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	75 d4                	jne    f010438c <sched_yield+0x44>$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	01 c8                	add    %ecx,%eax$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	75 09                	jne    f01043cc <sched_yield+0x84>$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	50                   	push   %eax$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	e8 31 f1 ff ff       	call   f01034fd <env_run>$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	e8 ed 17 00 00       	call   f0105bbe <cpunum>$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	83 b8 28 30 21 f0 00 	cmpl   $0x0,-0xfdecfd8(%eax)$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	74 2a                	je     f0104407 <sched_yield+0xbf>$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	e8 dc 17 00 00       	call   f0105bbe <cpunum>$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	75 16                	jne    f0104407 <sched_yield+0xbf>$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	e8 c8 17 00 00       	call   f0105bbe <cpunum>$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	e8 f6 f0 ff ff       	call   f01034fd <env_run>$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	e8 68 fe ff ff       	call   f0104274 <sched_halt>$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	c9                   	leave  $/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	c3                   	ret    $/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411 <syscall>:$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	55                   	push   %ebp$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	89 e5                	mov    %esp,%ebp$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	57                   	push   %edi$/;"	l
f0104415	obj/kern/kernel.asm	/^f0104415:	56                   	push   %esi$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	53                   	push   %ebx$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0104420	obj/kern/kernel.asm	/^f0104420:	0f 87 66 05 00 00    	ja     f010498c <syscall+0x57b>$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	ff 24 85 ec 79 10 f0 	jmp    *-0xfef8614(,%eax,4)$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	e8 8c 17 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	6a 04                	push   $0x4$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	e8 97 e9 ff ff       	call   f0102ddf <user_mem_assert>$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	68 e6 79 10 f0       	push   $0xf01079e6$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	e8 f3 f2 ff ff       	call   f010374e <cprintf>$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010445e	obj/kern/kernel.asm	/^f010445e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104463	obj/kern/kernel.asm	/^f0104463:	e9 30 05 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	e8 ed c1 ff ff       	call   f010065a <cons_getc>$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	89 c3                	mov    %eax,%ebx$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	e9 24 05 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	e8 45 17 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	e9 0e 05 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	6a 01                	push   $0x1$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	50                   	push   %eax$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	e8 14 ea ff ff       	call   f0102eaf <envid2env>$/;"	l
f010449b	obj/kern/kernel.asm	/^f010449b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	89 c3                	mov    %eax,%ebx$/;"	l
f01044a0	obj/kern/kernel.asm	/^f01044a0:	85 c0                	test   %eax,%eax$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	0f 88 f0 04 00 00    	js     f0104998 <syscall+0x587>$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	e8 ab ef ff ff       	call   f010345e <env_destroy>$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	e9 d8 04 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	e8 83 fe ff ff       	call   f0104348 <sched_yield>$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	e8 f4 16 00 00       	call   f0105bbe <cpunum>$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	50                   	push   %eax$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	e8 fd ea ff ff       	call   f0102fdf <env_alloc>$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	89 c3                	mov    %eax,%ebx$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	85 c0                	test   %eax,%eax$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	0f 85 a9 04 00 00    	jne    f0104998 <syscall+0x587>$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	e8 c0 16 00 00       	call   f0105bbe <cpunum>$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	6a 44                	push   $0x44$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	e8 3f 11 00 00       	call   f0105653 <memcpy>$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	e9 6f 04 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	6a 01                	push   $0x1$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	50                   	push   %eax$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	e8 75 e9 ff ff       	call   f0102eaf <envid2env>$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	89 c3                	mov    %eax,%ebx$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	85 c0                	test   %eax,%eax$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	0f 85 51 04 00 00    	jne    f0104998 <syscall+0x587>$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	8b 42 54             	mov    0x54(%edx),%eax$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	75 10                	jne    f0104567 <syscall+0x156>$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	89 42 54             	mov    %eax,0x54(%edx)$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	e9 31 04 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	e9 27 04 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	6a 01                	push   $0x1$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	50                   	push   %eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	e8 2d e9 ff ff       	call   f0102eaf <envid2env>$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	89 c3                	mov    %eax,%ebx$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	85 c0                	test   %eax,%eax$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	0f 85 09 04 00 00    	jne    f0104998 <syscall+0x587>$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	75 5b                	jne    f01045f3 <syscall+0x1e2>$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	77 52                	ja     f01045f3 <syscall+0x1e2>$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	f6 45 14 05          	testb  $0x5,0x14(%ebp)$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	74 56                	je     f01045fd <syscall+0x1ec>$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	75 57                	jne    f0104607 <syscall+0x1f6>$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	6a 01                	push   $0x1$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	e8 0b ca ff ff       	call   f0100fc5 <page_alloc>$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	89 c7                	mov    %eax,%edi$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	85 c0                	test   %eax,%eax$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	74 4e                	je     f0104611 <syscall+0x200>$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	50                   	push   %eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	e8 be cc ff ff       	call   f0101293 <page_insert>$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	89 c3                	mov    %eax,%ebx$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	85 c0                	test   %eax,%eax$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	0f 84 b6 03 00 00    	je     f0104998 <syscall+0x587>$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	57                   	push   %edi$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	e8 4a ca ff ff       	call   f0101035 <page_free>$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	e9 a5 03 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	e9 9b 03 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	e9 91 03 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	e9 87 03 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	e9 7d 03 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	6a 01                	push   $0x1$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	50                   	push   %eax$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	e8 83 e8 ff ff       	call   f0102eaf <envid2env>$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	85 c0                	test   %eax,%eax$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	0f 85 5f 03 00 00    	jne    f0104998 <syscall+0x587>$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	6a 01                	push   $0x1$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	50                   	push   %eax$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	e8 65 e8 ff ff       	call   f0102eaf <envid2env>$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	89 c3                	mov    %eax,%ebx$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	85 c0                	test   %eax,%eax$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	0f 85 41 03 00 00    	jne    f0104998 <syscall+0x587>$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	75 6c                	jne    f01046cc <syscall+0x2bb>$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	77 63                	ja     f01046cc <syscall+0x2bb>$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	75 64                	jne    f01046d6 <syscall+0x2c5>$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	77 5b                	ja     f01046d6 <syscall+0x2c5>$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	f6 45 1c 05          	testb  $0x5,0x1c(%ebp)$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	74 5f                	je     f01046e0 <syscall+0x2cf>$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	75 60                	jne    f01046ea <syscall+0x2d9>$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	50                   	push   %eax$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	e8 fd ca ff ff       	call   f010119c <page_lookup>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	75 06                	jne    f01046b0 <syscall+0x29f>$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	75 44                	jne    f01046f4 <syscall+0x2e3>$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	50                   	push   %eax$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	e8 d1 cb ff ff       	call   f0101293 <page_insert>$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	89 c3                	mov    %eax,%ebx$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	e9 cc 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	e9 c2 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	e9 b8 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	e9 ae 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	e9 a4 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	e9 9a 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	6a 01                	push   $0x1$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	50                   	push   %eax$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	e8 a0 e7 ff ff       	call   f0102eaf <envid2env>$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	89 c3                	mov    %eax,%ebx$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	85 c0                	test   %eax,%eax$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	0f 85 7c 02 00 00    	jne    f0104998 <syscall+0x587>$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	75 27                	jne    f010474c <syscall+0x33b>$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	77 1e                	ja     f010474c <syscall+0x33b>$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	e8 03 cb ff ff       	call   f0101242 <page_remove>$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	e9 4c 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	e9 42 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	6a 01                	push   $0x1$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	50                   	push   %eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	e8 48 e7 ff ff       	call   f0102eaf <envid2env>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	83 c4 10             	add    $0x10,%esp$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	85 c0                	test   %eax,%eax$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	75 09                	jne    f0104777 <syscall+0x366>$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	89 4a 64             	mov    %ecx,0x64(%edx)$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	89 c3                	mov    %eax,%ebx$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	e9 1a 02 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	77 0d                	ja     f0104794 <syscall+0x383>$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	0f 85 ff 01 00 00    	jne    f0104993 <syscall+0x582>$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	e8 25 14 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	89 78 6c             	mov    %edi,0x6c(%eax)$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	e8 11 14 00 00       	call   f0105bbe <cpunum>$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	e8 fc 13 00 00       	call   f0105bbe <cpunum>$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	e8 ea 13 00 00       	call   f0105bbe <cpunum>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	e8 5f fb ff ff       	call   f0104348 <sched_yield>$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	6a 00                	push   $0x0$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	50                   	push   %eax$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	e8 b5 e6 ff ff       	call   f0102eaf <envid2env>$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	85 c0                	test   %eax,%eax$/;"	l
f01047ff	obj/kern/kernel.asm	/^f01047ff:	0f 88 f4 00 00 00    	js     f01048f9 <syscall+0x4e8>$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	0f 84 e7 00 00 00    	je     f0104900 <syscall+0x4ef>$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	8b 58 74             	mov    0x74(%eax),%ebx$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	85 db                	test   %ebx,%ebx$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	0f 85 e6 00 00 00    	jne    f010490a <syscall+0x4f9>$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	0f 87 91 00 00 00    	ja     f01048c2 <syscall+0x4b1>$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	0f 85 d6 00 00 00    	jne    f0104914 <syscall+0x503>$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	f6 45 18 05          	testb  $0x5,0x18(%ebp)$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	0f 84 d3 00 00 00    	je     f010491b <syscall+0x50a>$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	0f 85 cd 00 00 00    	jne    f0104922 <syscall+0x511>$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	e8 64 13 00 00       	call   f0105bbe <cpunum>$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	52                   	push   %edx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	e8 27 c9 ff ff       	call   f010119c <page_lookup>$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	85 c0                	test   %eax,%eax$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	0f 84 a9 00 00 00    	je     f0104929 <syscall+0x518>$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	85 d2                	test   %edx,%edx$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	0f 84 a5 00 00 00    	je     f0104930 <syscall+0x51f>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	74 0b                	je     f010489c <syscall+0x48b>$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	8b 12                	mov    (%edx),%edx$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	f6 c6 08             	test   $0x8,%dh$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	0f 85 9b 00 00 00    	jne    f0104937 <syscall+0x526>$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	ff 72 6c             	pushl  0x6c(%edx)$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	50                   	push   %eax$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	ff 72 60             	pushl  0x60(%edx)$/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	e8 e5 c9 ff ff       	call   f0101293 <page_insert>$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	85 c0                	test   %eax,%eax$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	0f 88 85 00 00 00    	js     f010493e <syscall+0x52d>$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	89 78 78             	mov    %edi,0x78(%eax)$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	c6 46 68 00          	movb   $0x0,0x68(%esi)$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	e8 f0 12 00 00       	call   f0105bbe <cpunum>$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	8b 80 28 30 21 f0    	mov    -0xfdecfd8(%eax),%eax$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01048da	obj/kern/kernel.asm	/^f01048da:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01048e3	obj/kern/kernel.asm	/^f01048e3:	89 48 70             	mov    %ecx,0x70(%eax)$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	e9 9f 00 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	89 c3                	mov    %eax,%ebx$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	e9 98 00 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	e9 8e 00 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	e9 84 00 00 00       	jmp    f0104998 <syscall+0x587>$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	eb 7d                	jmp    f0104998 <syscall+0x587>$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	eb 76                	jmp    f0104998 <syscall+0x587>$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	eb 6f                	jmp    f0104998 <syscall+0x587>$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	eb 68                	jmp    f0104998 <syscall+0x587>$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	eb 61                	jmp    f0104998 <syscall+0x587>$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	eb 5a                	jmp    f0104998 <syscall+0x587>$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	eb 56                	jmp    f0104998 <syscall+0x587>$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	6a 01                	push   $0x1$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	50                   	push   %eax$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	e8 5c e5 ff ff       	call   f0102eaf <envid2env>$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	89 c3                	mov    %eax,%ebx$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	85 c0                	test   %eax,%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	75 3c                	jne    f0104998 <syscall+0x587>$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	6a 04                	push   $0x4$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	6a 44                	push   $0x44$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	e8 74 e4 ff ff       	call   f0102ddf <user_mem_assert>$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	66 83 48 34 03       	orw    $0x3,0x34(%eax)$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	83 c4 10             	add    $0x10,%esp$/;"	l
f010498a	obj/kern/kernel.asm	/^f010498a:	eb 0c                	jmp    f0104998 <syscall+0x587>$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	eb 05                	jmp    f0104998 <syscall+0x587>$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	89 d8                	mov    %ebx,%eax$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	5b                   	pop    %ebx$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	5e                   	pop    %esi$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	5f                   	pop    %edi$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	5d                   	pop    %ebp$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	c3                   	ret    $/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2 <stab_binsearch>:$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	55                   	push   %ebp$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	89 e5                	mov    %esp,%ebp$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	57                   	push   %edi$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	56                   	push   %esi$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	53                   	push   %ebx$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	8b 01                	mov    (%ecx),%eax$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	eb 7f                	jmp    f0104a46 <stab_binsearch+0xa4>$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	01 d8                	add    %ebx,%eax$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	89 c6                	mov    %eax,%esi$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	01 c6                	add    %eax,%esi$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	d1 fe                	sar    %esi$/;"	d
f01049d5	obj/kern/kernel.asm	/^f01049d5:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	89 f0                	mov    %esi,%eax$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	eb 03                	jmp    f01049e5 <stab_binsearch+0x43>$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	39 c3                	cmp    %eax,%ebx$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	7f 0d                	jg     f01049f6 <stab_binsearch+0x54>$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	39 f9                	cmp    %edi,%ecx$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	75 ee                	jne    f01049e2 <stab_binsearch+0x40>$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	eb 05                	jmp    f01049fb <stab_binsearch+0x59>$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	eb 4b                	jmp    f0104a46 <stab_binsearch+0xa4>$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	76 11                	jbe    f0104a1b <stab_binsearch+0x79>$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	eb 2b                	jmp    f0104a46 <stab_binsearch+0xa4>$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	73 14                	jae    f0104a34 <stab_binsearch+0x92>$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	89 06                	mov    %eax,(%esi)$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	eb 12                	jmp    f0104a46 <stab_binsearch+0xa4>$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	89 06                	mov    %eax,(%esi)$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	0f 8e 78 ff ff ff    	jle    f01049c7 <stab_binsearch+0x25>$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	75 0f                	jne    f0104a64 <stab_binsearch+0xc2>$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	8b 00                	mov    (%eax),%eax$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	89 06                	mov    %eax,(%esi)$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	eb 2c                	jmp    f0104a90 <stab_binsearch+0xee>$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	8b 00                	mov    (%eax),%eax$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	eb 03                	jmp    f0104a7c <stab_binsearch+0xda>$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	7e 0b                	jle    f0104a8b <stab_binsearch+0xe9>$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	39 df                	cmp    %ebx,%edi$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	75 ee                	jne    f0104a79 <stab_binsearch+0xd7>$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	89 06                	mov    %eax,(%esi)$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	5b                   	pop    %ebx$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	5e                   	pop    %esi$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	5f                   	pop    %edi$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	5d                   	pop    %ebp$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	c3                   	ret    $/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98 <debuginfo_eip>:$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	55                   	push   %ebp$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	57                   	push   %edi$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	56                   	push   %esi$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	53                   	push   %ebx$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	c7 03 24 7a 10 f0    	movl   $0xf0107a24,(%ebx)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	c7 43 08 24 7a 10 f0 	movl   $0xf0107a24,0x8(%ebx)$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	0f 87 9e 00 00 00    	ja     f0104b75 <debuginfo_eip+0xdd>$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	e8 e2 10 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	6a 04                	push   $0x4$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	6a 10                	push   $0x10$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	68 00 00 20 00       	push   $0x200000$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	e8 6a e2 ff ff       	call   f0102d5d <user_mem_check>$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	85 c0                	test   %eax,%eax$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	0f 88 3c 02 00 00    	js     f0104d3a <debuginfo_eip+0x2a2>$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	89 c6                	mov    %eax,%esi$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	8b 0d 0c 00 20 00    	mov    0x20000c,%ecx$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	e8 9a 10 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	6a 04                	push   $0x4$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	6a 0c                	push   $0xc$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	e8 24 e2 ff ff       	call   f0102d5d <user_mem_check>$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	85 c0                	test   %eax,%eax$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	0f 88 fd 01 00 00    	js     f0104d41 <debuginfo_eip+0x2a9>$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	56                   	push   %esi$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	e8 d3 08 00 00       	call   f0105420 <strlen>$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	e8 69 10 00 00       	call   f0105bbe <cpunum>$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	6a 04                	push   $0x4$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	56                   	push   %esi$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	ff b0 28 30 21 f0    	pushl  -0xfdecfd8(%eax)$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	e8 f4 e1 ff ff       	call   f0102d5d <user_mem_check>$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	85 c0                	test   %eax,%eax$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	79 1f                	jns    f0104b8f <debuginfo_eip+0xf7>$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	e9 d3 01 00 00       	jmp    f0104d48 <debuginfo_eip+0x2b0>$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	c7 45 bc 42 5a 11 f0 	movl   $0xf0115a42,-0x44(%ebp)$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	c7 45 b8 2d 23 11 f0 	movl   $0xf011232d,-0x48(%ebp)$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	bf 2c 23 11 f0       	mov    $0xf011232c,%edi$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	c7 45 c0 d0 7f 10 f0 	movl   $0xf0107fd0,-0x40(%ebp)$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	0f 83 b4 01 00 00    	jae    f0104d4f <debuginfo_eip+0x2b7>$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	0f 85 b1 01 00 00    	jne    f0104d56 <debuginfo_eip+0x2be>$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	29 f7                	sub    %esi,%edi$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	c1 ff 02             	sar    $0x2,%edi$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	69 c7 ab aa aa aa    	imul   $0xaaaaaaab,%edi,%eax$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	6a 64                	push   $0x64$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	89 d1                	mov    %edx,%ecx$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	89 f0                	mov    %esi,%eax$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	e8 cb fd ff ff       	call   f01049a2 <stab_binsearch>$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	85 c0                	test   %eax,%eax$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	0f 84 78 01 00 00    	je     f0104d5d <debuginfo_eip+0x2c5>$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6a 24                	push   $0x24$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	89 d1                	mov    %edx,%ecx$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	89 f0                	mov    %esi,%eax$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	e8 9d fd ff ff       	call   f01049a2 <stab_binsearch>$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	39 d0                	cmp    %edx,%eax$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	7f 29                	jg     f0104c3b <debuginfo_eip+0x1a3>$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	8d 3c 8e             	lea    (%esi,%ecx,4),%edi$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	8b 37                	mov    (%edi),%esi$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	2b 4d b8             	sub    -0x48(%ebp),%ecx$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	39 ce                	cmp    %ecx,%esi$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	73 06                	jae    f0104c2a <debuginfo_eip+0x192>$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	03 75 b8             	add    -0x48(%ebp),%esi$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	8b 4f 08             	mov    0x8(%edi),%ecx$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	29 4d 08             	sub    %ecx,0x8(%ebp)$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	eb 12                	jmp    f0104c4d <debuginfo_eip+0x1b5>$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	6a 3a                	push   $0x3a$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	e8 28 09 00 00       	call   f0105582 <strfind>$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	6a 44                	push   $0x44$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	89 f8                	mov    %edi,%eax$/;"	l
f0104c73	obj/kern/kernel.asm	/^f0104c73:	e8 2a fd ff ff       	call   f01049a2 <stab_binsearch>$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	0f 8f dd 00 00 00    	jg     f0104d64 <debuginfo_eip+0x2cc>$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	eb 0a                	jmp    f0104caa <debuginfo_eip+0x212>$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	39 c7                	cmp    %eax,%edi$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	7e 05                	jle    f0104cb3 <debuginfo_eip+0x21b>$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	eb 47                	jmp    f0104cfa <debuginfo_eip+0x262>$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	75 0e                	jne    f0104cca <debuginfo_eip+0x232>$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	74 1c                	je     f0104ce1 <debuginfo_eip+0x249>$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	eb 17                	jmp    f0104ce1 <debuginfo_eip+0x249>$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	75 d1                	jne    f0104ca0 <debuginfo_eip+0x208>$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	74 cb                	je     f0104ca0 <debuginfo_eip+0x208>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	74 03                	je     f0104ce1 <debuginfo_eip+0x249>$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	8b 75 b8             	mov    -0x48(%ebp),%esi$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	29 f0                	sub    %esi,%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	39 c2                	cmp    %eax,%edx$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	73 04                	jae    f0104cfa <debuginfo_eip+0x262>$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	01 f2                	add    %esi,%edx$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	89 13                	mov    %edx,(%ebx)$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	39 f2                	cmp    %esi,%edx$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	7d 67                	jge    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	89 d0                	mov    %edx,%eax$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	eb 04                	jmp    f0104d20 <debuginfo_eip+0x288>$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	39 c6                	cmp    %eax,%esi$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	7e 47                	jle    f0104d6b <debuginfo_eip+0x2d3>$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	74 e9                	je     f0104d1c <debuginfo_eip+0x284>$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	eb 36                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	eb 2f                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	eb 28                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	eb 21                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	eb 1a                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	eb 13                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	eb 0c                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	eb 05                	jmp    f0104d70 <debuginfo_eip+0x2d8>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	5b                   	pop    %ebx$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	5e                   	pop    %esi$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	5f                   	pop    %edi$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	5d                   	pop    %ebp$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	c3                   	ret    $/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78 <printnum>:$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	55                   	push   %ebp$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	57                   	push   %edi$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	56                   	push   %esi$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	53                   	push   %ebx$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	89 c7                	mov    %eax,%edi$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	89 d6                	mov    %edx,%esi$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	72 05                	jb     f0104da8 <printnum+0x30>$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	77 45                	ja     f0104ded <printnum+0x75>$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	53                   	push   %ebx$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	e8 f4 11 00 00       	call   f0105fc0 <__udivdi3>$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	83 c4 18             	add    $0x18,%esp$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	52                   	push   %edx$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	50                   	push   %eax$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	89 f2                	mov    %esi,%edx$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	89 f8                	mov    %edi,%eax$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	e8 9e ff ff ff       	call   f0104d78 <printnum>$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	eb 18                	jmp    f0104df7 <printnum+0x7f>$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	56                   	push   %esi$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	ff d7                	call   *%edi$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	eb 03                	jmp    f0104df0 <printnum+0x78>$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	85 db                	test   %ebx,%ebx$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	7f e8                	jg     f0104ddf <printnum+0x67>$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	56                   	push   %esi$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	e8 e1 12 00 00       	call   f01060f0 <__umoddi3>$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	0f be 80 2e 7a 10 f0 	movsbl -0xfef85d2(%eax),%eax$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	50                   	push   %eax$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	ff d7                	call   *%edi$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	5b                   	pop    %ebx$/;"	l
f0104e23	obj/kern/kernel.asm	/^f0104e23:	5e                   	pop    %esi$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	5f                   	pop    %edi$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	5d                   	pop    %ebp$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	c3                   	ret    $/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27 <sprintputch>:$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	55                   	push   %ebp$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	8b 10                	mov    (%eax),%edx$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	73 0a                	jae    f0104e42 <sprintputch+0x1b>$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	88 02                	mov    %al,(%edx)$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	5d                   	pop    %ebp$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	c3                   	ret    $/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44 <printfmt>:$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	55                   	push   %ebp$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	50                   	push   %eax$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	e8 05 00 00 00       	call   f0104e61 <vprintfmt>$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	c9                   	leave  $/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	c3                   	ret    $/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61 <vprintfmt>:$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	55                   	push   %ebp$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	57                   	push   %edi$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	56                   	push   %esi$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	53                   	push   %ebx$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	eb 12                	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	85 c0                	test   %eax,%eax$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	0f 84 42 04 00 00    	je     f01052bf <vprintfmt+0x45e>$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	53                   	push   %ebx$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	50                   	push   %eax$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	ff d6                	call   *%esi$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	75 e2                	jne    f0104e75 <vprintfmt+0x14>$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	eb 07                	jmp    f0104eba <vprintfmt+0x59>$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	3c 55                	cmp    $0x55,%al$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	0f 87 d3 03 00 00    	ja     f01052a4 <vprintfmt+0x443>$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	ff 24 85 80 7b 10 f0 	jmp    *-0xfef8480(,%eax,4)$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	eb d6                	jmp    f0104eba <vprintfmt+0x59>$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	77 3f                	ja     f0104f40 <vprintfmt+0xdf>$/;"	l
f0104f01	obj/kern/kernel.asm	/^f0104f01:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	eb e9                	jmp    f0104eef <vprintfmt+0x8e>$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	8b 00                	mov    (%eax),%eax$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	eb 2a                	jmp    f0104f46 <vprintfmt+0xe5>$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	85 c0                	test   %eax,%eax$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	eb 89                	jmp    f0104eba <vprintfmt+0x59>$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	e9 7a ff ff ff       	jmp    f0104eba <vprintfmt+0x59>$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	0f 89 6a ff ff ff    	jns    f0104eba <vprintfmt+0x59>$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	e9 58 ff ff ff       	jmp    f0104eba <vprintfmt+0x59>$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	e9 4d ff ff ff       	jmp    f0104eba <vprintfmt+0x59>$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	53                   	push   %ebx$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	ff 30                	pushl  (%eax)$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	ff d6                	call   *%esi$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	e9 fe fe ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	99                   	cltd   $/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	31 d0                	xor    %edx,%eax$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	29 d0                	sub    %edx,%eax$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	7f 0b                	jg     f0104fa6 <vprintfmt+0x145>$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	8b 14 85 e0 7c 10 f0 	mov    -0xfef8320(,%eax,4),%edx$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	85 d2                	test   %edx,%edx$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	75 1b                	jne    f0104fc1 <vprintfmt+0x160>$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	50                   	push   %eax$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	68 46 7a 10 f0       	push   $0xf0107a46$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	53                   	push   %ebx$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	56                   	push   %esi$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	e8 91 fe ff ff       	call   f0104e44 <printfmt>$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	e9 c6 fe ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	52                   	push   %edx$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	68 c9 71 10 f0       	push   $0xf01071c9$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	53                   	push   %ebx$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	56                   	push   %esi$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	e8 76 fe ff ff       	call   f0104e44 <printfmt>$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	e9 ab fe ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	83 c0 04             	add    $0x4,%eax$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	8b 38                	mov    (%eax),%edi$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	85 ff                	test   %edi,%edi$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	b8 3f 7a 10 f0       	mov    $0xf0107a3f,%eax$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	0f 8e 94 00 00 00    	jle    f0105092 <vprintfmt+0x231>$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	0f 84 98 00 00 00    	je     f01050a0 <vprintfmt+0x23f>$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	57                   	push   %edi$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	e8 24 04 00 00       	call   f0105438 <strnlen>$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	29 c1                	sub    %eax,%ecx$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	89 cf                	mov    %ecx,%edi$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	eb 0f                	jmp    f010503c <vprintfmt+0x1db>$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	53                   	push   %ebx$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	ff d6                	call   *%esi$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	83 c4 10             	add    $0x10,%esp$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	85 ff                	test   %edi,%edi$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	7f ed                	jg     f010502d <vprintfmt+0x1cc>$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	85 c9                	test   %ecx,%ecx$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	29 c1                	sub    %eax,%ecx$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	89 cb                	mov    %ecx,%ebx$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	eb 4d                	jmp    f01050ac <vprintfmt+0x24b>$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	74 1b                	je     f0105080 <vprintfmt+0x21f>$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	0f be c0             	movsbl %al,%eax$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	83 e8 20             	sub    $0x20,%eax$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	76 10                	jbe    f0105080 <vprintfmt+0x21f>$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	6a 3f                	push   $0x3f$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	eb 0d                	jmp    f010508d <vprintfmt+0x22c>$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	52                   	push   %edx$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010508d	obj/kern/kernel.asm	/^f010508d:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	eb 1a                	jmp    f01050ac <vprintfmt+0x24b>$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	eb 0c                	jmp    f01050ac <vprintfmt+0x24b>$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	83 c7 01             	add    $0x1,%edi$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	0f be d0             	movsbl %al,%edx$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	85 d2                	test   %edx,%edx$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	74 23                	je     f01050dd <vprintfmt+0x27c>$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	85 f6                	test   %esi,%esi$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	78 a1                	js     f010505f <vprintfmt+0x1fe>$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	79 9c                	jns    f010505f <vprintfmt+0x1fe>$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	89 df                	mov    %ebx,%edi$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	eb 18                	jmp    f01050e5 <vprintfmt+0x284>$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	53                   	push   %ebx$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	6a 20                	push   $0x20$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	ff d6                	call   *%esi$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	eb 08                	jmp    f01050e5 <vprintfmt+0x284>$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	89 df                	mov    %ebx,%edi$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	85 ff                	test   %edi,%edi$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	7f e4                	jg     f01050cd <vprintfmt+0x26c>$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	e9 90 fd ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	7e 19                	jle    f0105115 <vprintfmt+0x2b4>$/;"	l
f01050fc	obj/kern/kernel.asm	/^f01050fc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	8b 00                	mov    (%eax),%eax$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113:	eb 38                	jmp    f010514d <vprintfmt+0x2ec>$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	85 c9                	test   %ecx,%ecx$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	74 1b                	je     f0105134 <vprintfmt+0x2d3>$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	8b 00                	mov    (%eax),%eax$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	89 c1                	mov    %eax,%ecx$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	eb 19                	jmp    f010514d <vprintfmt+0x2ec>$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	8b 00                	mov    (%eax),%eax$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	89 c1                	mov    %eax,%ecx$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	0f 89 0e 01 00 00    	jns    f0105270 <vprintfmt+0x40f>$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	53                   	push   %ebx$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	6a 2d                	push   $0x2d$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	ff d6                	call   *%esi$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	f7 da                	neg    %edx$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	f7 d9                	neg    %ecx$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	83 c4 10             	add    $0x10,%esp$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	e9 ec 00 00 00       	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	7e 18                	jle    f01051a1 <vprintfmt+0x340>$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	8b 10                	mov    (%eax),%edx$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	e9 cf 00 00 00       	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	85 c9                	test   %ecx,%ecx$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	74 1a                	je     f01051bf <vprintfmt+0x35e>$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	8b 10                	mov    (%eax),%edx$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	e9 b1 00 00 00       	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	8b 10                	mov    (%eax),%edx$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	e9 97 00 00 00       	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	53                   	push   %ebx$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	6a 58                	push   $0x58$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	ff d6                	call   *%esi$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	53                   	push   %ebx$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	6a 58                	push   $0x58$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	ff d6                	call   *%esi$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	53                   	push   %ebx$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	6a 58                	push   $0x58$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	ff d6                	call   *%esi$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	e9 8b fc ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01051ff	obj/kern/kernel.asm	/^f01051ff:	53                   	push   %ebx$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	6a 30                	push   $0x30$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	ff d6                	call   *%esi$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	53                   	push   %ebx$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	6a 78                	push   $0x78$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	ff d6                	call   *%esi$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	8b 10                	mov    (%eax),%edx$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	eb 4a                	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	7e 15                	jle    f0105240 <vprintfmt+0x3df>$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	8b 10                	mov    (%eax),%edx$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	eb 30                	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	85 c9                	test   %ecx,%ecx$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	74 17                	je     f010525b <vprintfmt+0x3fa>$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	8b 10                	mov    (%eax),%edx$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	eb 15                	jmp    f0105270 <vprintfmt+0x40f>$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	8b 10                	mov    (%eax),%edx$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	57                   	push   %edi$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	50                   	push   %eax$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	51                   	push   %ecx$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	52                   	push   %edx$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	89 da                	mov    %ebx,%edx$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	89 f0                	mov    %esi,%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	e8 f1 fa ff ff       	call   f0104d78 <printnum>$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	83 c4 20             	add    $0x20,%esp$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	e9 f5 fb ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	53                   	push   %ebx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	52                   	push   %edx$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	ff d6                	call   *%esi$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	83 c4 10             	add    $0x10,%esp$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	e9 e3 fb ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	53                   	push   %ebx$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	6a 25                	push   $0x25$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	ff d6                	call   *%esi$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	eb 03                	jmp    f01052b4 <vprintfmt+0x453>$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	75 f7                	jne    f01052b1 <vprintfmt+0x450>$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	e9 c8 fb ff ff       	jmp    f0104e87 <vprintfmt+0x26>$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	5b                   	pop    %ebx$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	5e                   	pop    %esi$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	5f                   	pop    %edi$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	5d                   	pop    %ebp$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	c3                   	ret    $/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7 <vsnprintf>:$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	55                   	push   %ebp$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	85 c0                	test   %eax,%eax$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	74 26                	je     f010530e <vsnprintf+0x47>$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	85 d2                	test   %edx,%edx$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	7e 22                	jle    f010530e <vsnprintf+0x47>$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	50                   	push   %eax$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	68 27 4e 10 f0       	push   $0xf0104e27$/;"	l
f01052fb	obj/kern/kernel.asm	/^f01052fb:	e8 61 fb ff ff       	call   f0104e61 <vprintfmt>$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	83 c4 10             	add    $0x10,%esp$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	eb 05                	jmp    f0105313 <vsnprintf+0x4c>$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	c9                   	leave  $/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	c3                   	ret    $/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315 <snprintf>:$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	55                   	push   %ebp$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	89 e5                	mov    %esp,%ebp$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	50                   	push   %eax$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	e8 9a ff ff ff       	call   f01052c7 <vsnprintf>$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	c9                   	leave  $/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	c3                   	ret    $/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f <readline>:$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	55                   	push   %ebp$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	89 e5                	mov    %esp,%ebp$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	57                   	push   %edi$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	56                   	push   %esi$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	53                   	push   %ebx$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	85 c0                	test   %eax,%eax$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	74 11                	je     f0105350 <readline+0x21>$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	50                   	push   %eax$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	68 c9 71 10 f0       	push   $0xf01071c9$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	e8 01 e4 ff ff       	call   f010374e <cprintf>$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	6a 00                	push   $0x0$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	e8 b1 b4 ff ff       	call   f010080b <iscons>$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	89 c7                	mov    %eax,%edi$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	e8 91 b4 ff ff       	call   f01007fa <getchar>$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	89 c3                	mov    %eax,%ebx$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	85 c0                	test   %eax,%eax$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	79 29                	jns    f0105398 <readline+0x69>$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	0f 84 9b 00 00 00    	je     f0105418 <readline+0xe9>$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	53                   	push   %ebx$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	68 3f 7d 10 f0       	push   $0xf0107d3f$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	e8 c3 e3 ff ff       	call   f010374e <cprintf>$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	e9 80 00 00 00       	jmp    f0105418 <readline+0xe9>$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	0f 94 c2             	sete   %dl$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	0f 94 c0             	sete   %al$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	08 c2                	or     %al,%dl$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	74 1a                	je     f01053c2 <readline+0x93>$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	85 f6                	test   %esi,%esi$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	7e 16                	jle    f01053c2 <readline+0x93>$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	85 ff                	test   %edi,%edi$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	74 0d                	je     f01053bd <readline+0x8e>$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	6a 08                	push   $0x8$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	e8 30 b4 ff ff       	call   f01007ea <cputchar>$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	eb a2                	jmp    f0105364 <readline+0x35>$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	7e 26                	jle    f01053ed <readline+0xbe>$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	7f 1e                	jg     f01053ed <readline+0xbe>$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	85 ff                	test   %edi,%edi$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	74 0c                	je     f01053df <readline+0xb0>$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	53                   	push   %ebx$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	e8 0e b4 ff ff       	call   f01007ea <cputchar>$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	88 9e 80 2a 21 f0    	mov    %bl,-0xfded580(%esi)$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	e9 77 ff ff ff       	jmp    f0105364 <readline+0x35>$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	74 09                	je     f01053fb <readline+0xcc>$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	0f 85 69 ff ff ff    	jne    f0105364 <readline+0x35>$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	85 ff                	test   %edi,%edi$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	74 0d                	je     f010540c <readline+0xdd>$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	6a 0a                	push   $0xa$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	e8 e1 b3 ff ff       	call   f01007ea <cputchar>$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	83 c4 10             	add    $0x10,%esp$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	c6 86 80 2a 21 f0 00 	movb   $0x0,-0xfded580(%esi)$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	b8 80 2a 21 f0       	mov    $0xf0212a80,%eax$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	5b                   	pop    %ebx$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	5e                   	pop    %esi$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	5f                   	pop    %edi$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	5d                   	pop    %ebp$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	c3                   	ret    $/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420 <strlen>:$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	55                   	push   %ebp$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	89 e5                	mov    %esp,%ebp$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	eb 03                	jmp    f0105430 <strlen+0x10>$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	75 f7                	jne    f010542d <strlen+0xd>$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	5d                   	pop    %ebp$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	c3                   	ret    $/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438 <strnlen>:$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	55                   	push   %ebp$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	89 e5                	mov    %esp,%ebp$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	eb 03                	jmp    f010544b <strnlen+0x13>$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	83 c2 01             	add    $0x1,%edx$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	39 c2                	cmp    %eax,%edx$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	74 08                	je     f0105457 <strnlen+0x1f>$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	75 f3                	jne    f0105448 <strnlen+0x10>$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	89 d0                	mov    %edx,%eax$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	5d                   	pop    %ebp$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	c3                   	ret    $/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459 <strcpy>:$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	55                   	push   %ebp$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	89 e5                	mov    %esp,%ebp$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	53                   	push   %ebx$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	89 c2                	mov    %eax,%edx$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	84 db                	test   %bl,%bl$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	75 ef                	jne    f0105465 <strcpy+0xc>$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	5b                   	pop    %ebx$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	5d                   	pop    %ebp$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	c3                   	ret    $/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479 <strcat>:$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	55                   	push   %ebp$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	89 e5                	mov    %esp,%ebp$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	53                   	push   %ebx$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	53                   	push   %ebx$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	e8 9a ff ff ff       	call   f0105420 <strlen>$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	01 d8                	add    %ebx,%eax$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	50                   	push   %eax$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	e8 c5 ff ff ff       	call   f0105459 <strcpy>$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	89 d8                	mov    %ebx,%eax$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	c9                   	leave  $/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	c3                   	ret    $/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b <strncpy>:$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	55                   	push   %ebp$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	89 e5                	mov    %esp,%ebp$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	56                   	push   %esi$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	53                   	push   %ebx$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	89 f3                	mov    %esi,%ebx$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	89 f2                	mov    %esi,%edx$/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	eb 0f                	jmp    f01054be <strncpy+0x23>$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	39 da                	cmp    %ebx,%edx$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	75 ed                	jne    f01054af <strncpy+0x14>$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	89 f0                	mov    %esi,%eax$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	5b                   	pop    %ebx$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	5e                   	pop    %esi$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	5d                   	pop    %ebp$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	c3                   	ret    $/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8 <strlcpy>:$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	55                   	push   %ebp$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	56                   	push   %esi$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	53                   	push   %ebx$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	89 f0                	mov    %esi,%eax$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	85 d2                	test   %edx,%edx$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	74 21                	je     f01054fd <strlcpy+0x35>$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	89 f2                	mov    %esi,%edx$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	eb 09                	jmp    f01054ed <strlcpy+0x25>$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	39 c2                	cmp    %eax,%edx$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	74 09                	je     f01054fa <strlcpy+0x32>$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	84 db                	test   %bl,%bl$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	75 ec                	jne    f01054e4 <strlcpy+0x1c>$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	89 d0                	mov    %edx,%eax$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	29 f0                	sub    %esi,%eax$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	5b                   	pop    %ebx$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	5e                   	pop    %esi$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	5d                   	pop    %ebp$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	c3                   	ret    $/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503 <strcmp>:$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	55                   	push   %ebp$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	89 e5                	mov    %esp,%ebp$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	eb 06                	jmp    f0105514 <strcmp+0x11>$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	84 c0                	test   %al,%al$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	74 04                	je     f010551f <strcmp+0x1c>$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	3a 02                	cmp    (%edx),%al$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	74 ef                	je     f010550e <strcmp+0xb>$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	29 d0                	sub    %edx,%eax$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	5d                   	pop    %ebp$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	c3                   	ret    $/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529 <strncmp>:$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	55                   	push   %ebp$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	89 e5                	mov    %esp,%ebp$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	53                   	push   %ebx$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	89 c3                	mov    %eax,%ebx$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	eb 06                	jmp    f0105540 <strncmp+0x17>$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	74 15                	je     f0105559 <strncmp+0x30>$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	84 c9                	test   %cl,%cl$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	74 04                	je     f010554f <strncmp+0x26>$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	3a 0a                	cmp    (%edx),%cl$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	74 eb                	je     f010553a <strncmp+0x11>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	29 d0                	sub    %edx,%eax$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	eb 05                	jmp    f010555e <strncmp+0x35>$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	5b                   	pop    %ebx$/;"	l
f010555f	obj/kern/kernel.asm	/^f010555f:	5d                   	pop    %ebp$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	c3                   	ret    $/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561 <strchr>:$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	55                   	push   %ebp$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	89 e5                	mov    %esp,%ebp$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	eb 07                	jmp    f0105574 <strchr+0x13>$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	38 ca                	cmp    %cl,%dl$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	74 0f                	je     f0105580 <strchr+0x1f>$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	84 d2                	test   %dl,%dl$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	75 f2                	jne    f010556d <strchr+0xc>$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	5d                   	pop    %ebp$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	c3                   	ret    $/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582 <strfind>:$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	55                   	push   %ebp$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	89 e5                	mov    %esp,%ebp$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	eb 03                	jmp    f0105591 <strfind+0xf>$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	38 ca                	cmp    %cl,%dl$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	74 04                	je     f010559c <strfind+0x1a>$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	84 d2                	test   %dl,%dl$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	75 f2                	jne    f010558e <strfind+0xc>$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	5d                   	pop    %ebp$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	c3                   	ret    $/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e <memset>:$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	55                   	push   %ebp$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	89 e5                	mov    %esp,%ebp$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	57                   	push   %edi$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	56                   	push   %esi$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	53                   	push   %ebx$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	85 c9                	test   %ecx,%ecx$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	74 36                	je     f01055e4 <memset+0x46>$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	75 28                	jne    f01055de <memset+0x40>$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	75 23                	jne    f01055de <memset+0x40>$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	89 d3                	mov    %edx,%ebx$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	89 d6                	mov    %edx,%esi$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	89 d0                	mov    %edx,%eax$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	09 f0                	or     %esi,%eax$/;"	l
f01055d0	obj/kern/kernel.asm	/^f01055d0:	09 c2                	or     %eax,%edx$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	89 d8                	mov    %ebx,%eax$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	09 d0                	or     %edx,%eax$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	fc                   	cld    $/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	eb 06                	jmp    f01055e4 <memset+0x46>$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	fc                   	cld    $/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	89 f8                	mov    %edi,%eax$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	5b                   	pop    %ebx$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	5e                   	pop    %esi$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	5f                   	pop    %edi$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	5d                   	pop    %ebp$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	c3                   	ret    $/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb <memmove>:$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	55                   	push   %ebp$/;"	l
f01055ec	obj/kern/kernel.asm	/^f01055ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	57                   	push   %edi$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	56                   	push   %esi$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	39 c6                	cmp    %eax,%esi$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	73 35                	jae    f0105632 <memmove+0x47>$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	39 d0                	cmp    %edx,%eax$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	73 2e                	jae    f0105632 <memmove+0x47>$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	89 d6                	mov    %edx,%esi$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	09 fe                	or     %edi,%esi$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	75 13                	jne    f0105626 <memmove+0x3b>$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	75 0e                	jne    f0105626 <memmove+0x3b>$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	fd                   	std    $/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	eb 09                	jmp    f010562f <memmove+0x44>$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	fd                   	std    $/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	fc                   	cld    $/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	eb 1d                	jmp    f010564f <memmove+0x64>$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	89 f2                	mov    %esi,%edx$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	09 c2                	or     %eax,%edx$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	75 0f                	jne    f010564a <memmove+0x5f>$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	75 0a                	jne    f010564a <memmove+0x5f>$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	89 c7                	mov    %eax,%edi$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	fc                   	cld    $/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	eb 05                	jmp    f010564f <memmove+0x64>$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	89 c7                	mov    %eax,%edi$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	fc                   	cld    $/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	5e                   	pop    %esi$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	5f                   	pop    %edi$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	5d                   	pop    %ebp$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	c3                   	ret    $/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653 <memcpy>:$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	55                   	push   %ebp$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	89 e5                	mov    %esp,%ebp$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	e8 87 ff ff ff       	call   f01055eb <memmove>$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	c9                   	leave  $/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	c3                   	ret    $/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666 <memcmp>:$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	55                   	push   %ebp$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	89 e5                	mov    %esp,%ebp$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	56                   	push   %esi$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	53                   	push   %ebx$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	89 c6                	mov    %eax,%esi$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105676	obj/kern/kernel.asm	/^f0105676:	eb 1a                	jmp    f0105692 <memcmp+0x2c>$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	38 d9                	cmp    %bl,%cl$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	74 0a                	je     f010568c <memcmp+0x26>$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	29 d8                	sub    %ebx,%eax$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	eb 0f                	jmp    f010569b <memcmp+0x35>$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	39 f0                	cmp    %esi,%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	75 e2                	jne    f0105678 <memcmp+0x12>$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	5b                   	pop    %ebx$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	5e                   	pop    %esi$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	5d                   	pop    %ebp$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	c3                   	ret    $/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f <memfind>:$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	55                   	push   %ebp$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	53                   	push   %ebx$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	89 c1                	mov    %eax,%ecx$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	eb 0a                	jmp    f01056bb <memfind+0x1c>$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	39 da                	cmp    %ebx,%edx$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	74 07                	je     f01056bf <memfind+0x20>$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	39 c8                	cmp    %ecx,%eax$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	72 f2                	jb     f01056b1 <memfind+0x12>$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	5b                   	pop    %ebx$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	5d                   	pop    %ebp$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	c3                   	ret    $/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2 <strtol>:$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	55                   	push   %ebp$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	57                   	push   %edi$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	56                   	push   %esi$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	53                   	push   %ebx$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	eb 03                	jmp    f01056d3 <strtol+0x11>$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	3c 20                	cmp    $0x20,%al$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	74 f6                	je     f01056d0 <strtol+0xe>$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	3c 09                	cmp    $0x9,%al$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	74 f2                	je     f01056d0 <strtol+0xe>$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	75 0a                	jne    f01056ec <strtol+0x2a>$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	eb 11                	jmp    f01056fd <strtol+0x3b>$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	75 08                	jne    f01056fd <strtol+0x3b>$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	75 15                	jne    f010571a <strtol+0x58>$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	75 10                	jne    f010571a <strtol+0x58>$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	75 7c                	jne    f010578c <strtol+0xca>$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	eb 16                	jmp    f0105730 <strtol+0x6e>$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	85 db                	test   %ebx,%ebx$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	75 12                	jne    f0105730 <strtol+0x6e>$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	75 08                	jne    f0105730 <strtol+0x6e>$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	89 f3                	mov    %esi,%ebx$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	77 08                	ja     f010574d <strtol+0x8b>$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105748	obj/kern/kernel.asm	/^f0105748:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	eb 22                	jmp    f010576f <strtol+0xad>$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	89 f3                	mov    %esi,%ebx$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	77 08                	ja     f010575f <strtol+0x9d>$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	0f be d2             	movsbl %dl,%edx$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	83 ea 57             	sub    $0x57,%edx$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	eb 10                	jmp    f010576f <strtol+0xad>$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	89 f3                	mov    %esi,%ebx$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	77 16                	ja     f010577f <strtol+0xbd>$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	0f be d2             	movsbl %dl,%edx$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	7d 0b                	jge    f010577f <strtol+0xbd>$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	01 d0                	add    %edx,%eax$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	eb b9                	jmp    f0105738 <strtol+0x76>$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	74 0d                	je     f0105792 <strtol+0xd0>$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	eb 06                	jmp    f0105792 <strtol+0xd0>$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	85 db                	test   %ebx,%ebx$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	74 98                	je     f0105728 <strtol+0x66>$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	eb 9e                	jmp    f0105730 <strtol+0x6e>$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	89 c2                	mov    %eax,%edx$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	f7 da                	neg    %edx$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	85 ff                	test   %edi,%edi$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	5b                   	pop    %ebx$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	5e                   	pop    %esi$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	5f                   	pop    %edi$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	5d                   	pop    %ebp$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	c3                   	ret    $/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0 <mpentry_start>:$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	fa                   	cli    $/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	31 c0                	xor    %eax,%eax$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	8e d8                	mov    %eax,%ds$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	8e c0                	mov    %eax,%es$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	8e d0                	mov    %eax,%ss$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	74 70                	je     f010581e <mpsearch1+0x3>$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	08 00                	or     %al,(%eax)$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0 <start32>:$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	8e d8                	mov    %eax,%ds$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	8e c0                	mov    %eax,%es$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	8e d0                	mov    %eax,%ss$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	8e e0                	mov    %eax,%fs$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	8e e8                	mov    %eax,%gs$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	b8 00 e0 11 00       	mov    $0x11e000,%eax$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	8b 25 84 2e 21 f0    	mov    0xf0212e84,%esp$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	b8 15 02 10 f0       	mov    $0xf0100215,%eax$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	ff d0                	call   *%eax$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7 <spin>:$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	eb fe                	jmp    f01057f7 <spin>$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc <gdt>:$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	ff                   	(bad)  $/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	ff 00                	incl   (%eax)$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	00 00                	add    %al,(%eax)$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	00                   	.byte 0x0$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	92                   	xchg   %eax,%edx$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	cf                   	iret   $/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814 <gdtdesc>:$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	17                   	pop    %ss$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a <mpentry_end>:$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	90                   	nop$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b <mpsearch1>:$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	55                   	push   %ebp$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	89 e5                	mov    %esp,%ebp$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	57                   	push   %edi$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	56                   	push   %esi$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	53                   	push   %ebx$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	8b 0d 88 2e 21 f0    	mov    0xf0212e88,%ecx$/;"	l
f010582a	obj/kern/kernel.asm	/^f010582a:	89 c3                	mov    %eax,%ebx$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	72 12                	jb     f0105845 <mpsearch1+0x2a>$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	50                   	push   %eax$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	6a 59                	push   $0x59$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	68 dd 7e 10 f0       	push   $0xf0107edd$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	e8 4f a8 ff ff       	call   f0100094 <_panic>$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	01 d0                	add    %edx,%eax$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	89 c2                	mov    %eax,%edx$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	72 12                	jb     f0105868 <mpsearch1+0x4d>$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	50                   	push   %eax$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	6a 59                	push   $0x59$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	68 dd 7e 10 f0       	push   $0xf0107edd$/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	e8 2c a8 ff ff       	call   f0100094 <_panic>$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	eb 2f                	jmp    f010589f <mpsearch1+0x84>$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	6a 04                	push   $0x4$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	68 ed 7e 10 f0       	push   $0xf0107eed$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	53                   	push   %ebx$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	e8 e6 fd ff ff       	call   f0105666 <memcmp>$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	85 c0                	test   %eax,%eax$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	75 15                	jne    f010589c <mpsearch1+0x81>$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	89 da                	mov    %ebx,%edx$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	01 c8                	add    %ecx,%eax$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	39 d7                	cmp    %edx,%edi$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	75 f4                	jne    f010588c <mpsearch1+0x71>$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	84 c0                	test   %al,%al$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	74 0e                	je     f01058aa <mpsearch1+0x8f>$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	83 c3 10             	add    $0x10,%ebx$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	39 f3                	cmp    %esi,%ebx$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	72 cd                	jb     f0105870 <mpsearch1+0x55>$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	eb 02                	jmp    f01058ac <mpsearch1+0x91>$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	89 d8                	mov    %ebx,%eax$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	5b                   	pop    %ebx$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	5e                   	pop    %esi$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	5f                   	pop    %edi$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	5d                   	pop    %ebp$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	c3                   	ret    $/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4 <mp_init>:$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	55                   	push   %ebp$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	57                   	push   %edi$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	56                   	push   %esi$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	53                   	push   %ebx$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	c7 05 c0 33 21 f0 20 	movl   $0xf0213020,0xf02133c0$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	30 21 f0 $/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	83 3d 88 2e 21 f0 00 	cmpl   $0x0,0xf0212e88$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	75 16                	jne    f01058e6 <mp_init+0x32>$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	68 00 04 00 00       	push   $0x400$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	6a 71                	push   $0x71$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	68 dd 7e 10 f0       	push   $0xf0107edd$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	e8 ae a7 ff ff       	call   f0100094 <_panic>$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	85 c0                	test   %eax,%eax$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	74 16                	je     f0105907 <mp_init+0x53>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	e8 1d ff ff ff       	call   f010581b <mpsearch1>$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	85 c0                	test   %eax,%eax$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	75 3c                	jne    f0105941 <mp_init+0x8d>$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	eb 20                	jmp    f0105927 <mp_init+0x73>$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	e8 fb fe ff ff       	call   f010581b <mpsearch1>$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	85 c0                	test   %eax,%eax$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	75 1a                	jne    f0105941 <mp_init+0x8d>$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	e8 e5 fe ff ff       	call   f010581b <mpsearch1>$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	85 c0                	test   %eax,%eax$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	0f 84 5d 02 00 00    	je     f0105b9e <mp_init+0x2ea>$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	85 f6                	test   %esi,%esi$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	74 06                	je     f0105951 <mp_init+0x9d>$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	74 15                	je     f0105966 <mp_init+0xb2>$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	68 50 7d 10 f0       	push   $0xf0107d50$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	e8 f0 dd ff ff       	call   f010374e <cprintf>$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	e9 38 02 00 00       	jmp    f0105b9e <mp_init+0x2ea>$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	89 f0                	mov    %esi,%eax$/;"	l
f0105968	obj/kern/kernel.asm	/^f0105968:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	3b 05 88 2e 21 f0    	cmp    0xf0212e88,%eax$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	72 15                	jb     f0105988 <mp_init+0xd4>$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	56                   	push   %esi$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	68 97 00 00 00       	push   $0x97$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	68 dd 7e 10 f0       	push   $0xf0107edd$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	e8 0c a7 ff ff       	call   f0100094 <_panic>$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	6a 04                	push   $0x4$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	68 f2 7e 10 f0       	push   $0xf0107ef2$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	53                   	push   %ebx$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	e8 c8 fc ff ff       	call   f0105666 <memcmp>$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	85 c0                	test   %eax,%eax$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	74 15                	je     f01059ba <mp_init+0x106>$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	68 80 7d 10 f0       	push   $0xf0107d80$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	e8 9c dd ff ff       	call   f010374e <cprintf>$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	e9 e4 01 00 00       	jmp    f0105b9e <mp_init+0x2ea>$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	eb 0d                	jmp    f01059de <mp_init+0x12a>$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	f0 $/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	01 ca                	add    %ecx,%edx$/;"	l
f01059db	obj/kern/kernel.asm	/^f01059db:	83 c0 01             	add    $0x1,%eax$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	39 c7                	cmp    %eax,%edi$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	75 ef                	jne    f01059d1 <mp_init+0x11d>$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	84 d2                	test   %dl,%dl$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	74 15                	je     f01059fb <mp_init+0x147>$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	68 b4 7d 10 f0       	push   $0xf0107db4$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	e8 5b dd ff ff       	call   f010374e <cprintf>$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	e9 a3 01 00 00       	jmp    f0105b9e <mp_init+0x2ea>$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f01059ff	obj/kern/kernel.asm	/^f01059ff:	3c 01                	cmp    $0x1,%al$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	74 1d                	je     f0105a20 <mp_init+0x16c>$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	3c 04                	cmp    $0x4,%al$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	74 19                	je     f0105a20 <mp_init+0x16c>$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d:	50                   	push   %eax$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	68 d8 7d 10 f0       	push   $0xf0107dd8$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	e8 36 dd ff ff       	call   f010374e <cprintf>$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	e9 7e 01 00 00       	jmp    f0105b9e <mp_init+0x2ea>$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a32	obj/kern/kernel.asm	/^f0105a32:	01 ce                	add    %ecx,%esi$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	eb 0d                	jmp    f0105a43 <mp_init+0x18f>$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	f0 $/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	01 ca                	add    %ecx,%edx$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	39 c7                	cmp    %eax,%edi$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	75 ef                	jne    f0105a36 <mp_init+0x182>$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	89 d0                	mov    %edx,%eax$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	74 15                	je     f0105a63 <mp_init+0x1af>$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	68 f8 7d 10 f0       	push   $0xf0107df8$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	e8 f3 dc ff ff       	call   f010374e <cprintf>$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	e9 3b 01 00 00       	jmp    f0105b9e <mp_init+0x2ea>$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	85 db                	test   %ebx,%ebx$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	0f 84 33 01 00 00    	je     f0105b9e <mp_init+0x2ea>$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	c7 05 00 30 21 f0 01 	movl   $0x1,0xf0213000$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	00 00 00 $/;"	l
f0105a75	obj/kern/kernel.asm	/^f0105a75:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	a3 00 40 25 f0       	mov    %eax,0xf0254000$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	e9 85 00 00 00       	jmp    f0105b0f <mp_init+0x25b>$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	84 c0                	test   %al,%al$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	74 06                	je     f0105a97 <mp_init+0x1e3>$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	3c 04                	cmp    $0x4,%al$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	77 55                	ja     f0105aea <mp_init+0x236>$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	eb 4e                	jmp    f0105ae5 <mp_init+0x231>$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	74 11                	je     f0105aae <mp_init+0x1fa>$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	6b 05 c4 33 21 f0 74 	imul   $0x74,0xf02133c4,%eax$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	a3 c0 33 21 f0       	mov    %eax,0xf02133c0$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	a1 c4 33 21 f0       	mov    0xf02133c4,%eax$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	7f 13                	jg     f0105acb <mp_init+0x217>$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	88 82 20 30 21 f0    	mov    %al,-0xfdecfe0(%edx)$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	a3 c4 33 21 f0       	mov    %eax,0xf02133c4$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	eb 15                	jmp    f0105ae0 <mp_init+0x22c>$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	50                   	push   %eax$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	68 28 7e 10 f0       	push   $0xf0107e28$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	e8 71 dc ff ff       	call   f010374e <cprintf>$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	eb 27                	jmp    f0105b0c <mp_init+0x258>$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	83 c7 08             	add    $0x8,%edi$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	eb 22                	jmp    f0105b0c <mp_init+0x258>$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	50                   	push   %eax$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	68 50 7e 10 f0       	push   $0xf0107e50$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	e8 53 dc ff ff       	call   f010374e <cprintf>$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	c7 05 00 30 21 f0 00 	movl   $0x0,0xf0213000$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	00 00 00 $/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	39 c6                	cmp    %eax,%esi$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	0f 82 6f ff ff ff    	jb     f0105a8a <mp_init+0x1d6>$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	a1 c0 33 21 f0       	mov    0xf02133c0,%eax$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	83 3d 00 30 21 f0 00 	cmpl   $0x0,0xf0213000$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	75 26                	jne    f0105b56 <mp_init+0x2a2>$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	c7 05 c4 33 21 f0 01 	movl   $0x1,0xf02133c4$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	00 00 00 $/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	c7 05 00 40 25 f0 00 	movl   $0x0,0xf0254000$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	00 00 00 $/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	68 70 7e 10 f0       	push   $0xf0107e70$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	e8 fd db ff ff       	call   f010374e <cprintf>$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	eb 48                	jmp    f0105b9e <mp_init+0x2ea>$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	ff 35 c4 33 21 f0    	pushl  0xf02133c4$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	50                   	push   %eax$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	68 f7 7e 10 f0       	push   $0xf0107ef7$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	e8 e1 db ff ff       	call   f010374e <cprintf>$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	74 25                	je     f0105b9e <mp_init+0x2ea>$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	68 9c 7e 10 f0       	push   $0xf0107e9c$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	e8 c8 db ff ff       	call   f010374e <cprintf>$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	ee                   	out    %al,(%dx)$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	ec                   	in     (%dx),%al$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	ee                   	out    %al,(%dx)$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	5b                   	pop    %ebx$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	5e                   	pop    %esi$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	5f                   	pop    %edi$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	5d                   	pop    %ebp$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	c3                   	ret    $/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6 <lapicw>:$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	55                   	push   %ebp$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	8b 0d 04 40 25 f0    	mov    0xf0254004,%ecx$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	89 10                	mov    %edx,(%eax)$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	a1 04 40 25 f0       	mov    0xf0254004,%eax$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	5d                   	pop    %ebp$/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	c3                   	ret    $/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe <cpunum>:$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	55                   	push   %ebp$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	a1 04 40 25 f0       	mov    0xf0254004,%eax$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	85 c0                	test   %eax,%eax$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	74 08                	je     f0105bd2 <cpunum+0x14>$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	eb 05                	jmp    f0105bd7 <cpunum+0x19>$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	5d                   	pop    %ebp$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	c3                   	ret    $/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9 <lapic_init>:$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	a1 00 40 25 f0       	mov    0xf0254000,%eax$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	85 c0                	test   %eax,%eax$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	0f 84 21 01 00 00    	je     f0105d07 <lapic_init+0x12e>$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	55                   	push   %ebp$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	68 00 10 00 00       	push   $0x1000$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	50                   	push   %eax$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	e8 02 b7 ff ff       	call   f01012f9 <mmio_map_region>$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	a3 04 40 25 f0       	mov    %eax,0xf0254004$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105c01	obj/kern/kernel.asm	/^f0105c01:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	e8 9b ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	e8 8c ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	e8 7d ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105c2e	obj/kern/kernel.asm	/^f0105c2e:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	e8 6e ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	e8 81 ff ff ff       	call   f0105bbe <cpunum>$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	39 05 c0 33 21 f0    	cmp    %eax,0xf02133c0$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	74 0f                	je     f0105c5f <lapic_init+0x86>$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	e8 47 ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	e8 38 ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	a1 04 40 25 f0       	mov    0xf0254004,%eax$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	3c 03                	cmp    $0x3,%al$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	76 0f                	jbe    f0105c8c <lapic_init+0xb3>$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	e8 1a ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c8c	obj/kern/kernel.asm	/^f0105c8c:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	e8 0b ff ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	e8 fc fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	e8 ed fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	e8 de fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	e8 cf fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	e8 c0 fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	8b 15 04 40 25 f0    	mov    0xf0254004,%edx$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	75 f5                	jne    f0105cec <lapic_init+0x113>$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	e8 a0 fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	c9                   	leave  $/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	f3 c3                	repz ret $/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09 <lapic_eoi>:$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	83 3d 04 40 25 f0 00 	cmpl   $0x0,0xf0254004$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	74 13                	je     f0105d25 <lapic_eoi+0x1c>$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	55                   	push   %ebp$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	e8 82 fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	5d                   	pop    %ebp$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	f3 c3                	repz ret $/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27 <lapic_startap>:$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	55                   	push   %ebp$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	56                   	push   %esi$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	53                   	push   %ebx$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	ee                   	out    %al,(%dx)$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	ee                   	out    %al,(%dx)$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	83 3d 88 2e 21 f0 00 	cmpl   $0x0,0xf0212e88$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	75 19                	jne    f0105d6a <lapic_startap+0x43>$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	68 67 04 00 00       	push   $0x467$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	68 28 63 10 f0       	push   $0xf0106328$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	68 a6 00 00 00       	push   $0xa6$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	68 14 7f 10 f0       	push   $0xf0107f14$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	e8 2a a3 ff ff       	call   f0100094 <_panic>$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	00 00 $/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	89 d8                	mov    %ebx,%eax$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	89 f2                	mov    %esi,%edx$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	e8 19 fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	e8 0a fe ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	e8 fb fd ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	80 cf 06             	or     $0x6,%bh$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	89 f2                	mov    %esi,%edx$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	e8 e9 fd ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	89 da                	mov    %ebx,%edx$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	e8 dd fd ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	89 f2                	mov    %esi,%edx$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	e8 d1 fd ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	89 da                	mov    %ebx,%edx$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	e8 c5 fd ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	5b                   	pop    %ebx$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	5e                   	pop    %esi$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	5d                   	pop    %ebp$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	c3                   	ret    $/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8 <lapic_ipi>:$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	55                   	push   %ebp$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	e8 a8 fd ff ff       	call   f0105ba6 <lapicw>$/;"	l
f0105dfe	obj/kern/kernel.asm	/^f0105dfe:	8b 15 04 40 25 f0    	mov    0xf0254004,%edx$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	75 f5                	jne    f0105e04 <lapic_ipi+0x1c>$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	5d                   	pop    %ebp$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	c3                   	ret    $/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11 <__spin_initlock>:$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	55                   	push   %ebp$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	5d                   	pop    %ebp$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	c3                   	ret    $/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c <spin_lock>:$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	55                   	push   %ebp$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	56                   	push   %esi$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	53                   	push   %ebx$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	74 14                	je     f0105e4d <spin_lock+0x21>$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	e8 7d fd ff ff       	call   f0105bbe <cpunum>$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	39 c6                	cmp    %eax,%esi$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	74 07                	je     f0105e54 <spin_lock+0x28>$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	eb 20                	jmp    f0105e74 <spin_lock+0x48>$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	e8 62 fd ff ff       	call   f0105bbe <cpunum>$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	53                   	push   %ebx$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	50                   	push   %eax$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	68 24 7f 10 f0       	push   $0xf0107f24$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	6a 41                	push   $0x41$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	68 88 7f 10 f0       	push   $0xf0107f88$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	e8 22 a2 ff ff       	call   f0100094 <_panic>$/;"	l
f0105e72	obj/kern/kernel.asm	/^f0105e72:	f3 90                	pause  $/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	89 d0                	mov    %edx,%eax$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	85 c0                	test   %eax,%eax$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	75 f5                	jne    f0105e72 <spin_lock+0x46>$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	e8 3c fd ff ff       	call   f0105bbe <cpunum>$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	89 ea                	mov    %ebp,%edx$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	eb 0b                	jmp    f0105ea4 <spin_lock+0x78>$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	8b 12                	mov    (%edx),%edx$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	76 11                	jbe    f0105ebd <spin_lock+0x91>$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	7e e8                	jle    f0105e99 <spin_lock+0x6d>$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	eb 0a                	jmp    f0105ebd <spin_lock+0x91>$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	7e f1                	jle    f0105eb3 <spin_lock+0x87>$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	5b                   	pop    %ebx$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	5e                   	pop    %esi$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	5d                   	pop    %ebp$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	c3                   	ret    $/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9 <spin_unlock>:$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	55                   	push   %ebp$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	57                   	push   %edi$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	56                   	push   %esi$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	53                   	push   %ebx$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	74 18                	je     f0105ef2 <spin_unlock+0x29>$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	e8 dc fc ff ff       	call   f0105bbe <cpunum>$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	05 20 30 21 f0       	add    $0xf0213020,%eax$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	0f 84 a5 00 00 00    	je     f0105f97 <spin_unlock+0xce>$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	6a 28                	push   $0x28$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	50                   	push   %eax$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	53                   	push   %ebx$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	e8 e7 f6 ff ff       	call   f01055eb <memmove>$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	e8 ac fc ff ff       	call   f0105bbe <cpunum>$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	57                   	push   %edi$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	56                   	push   %esi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	50                   	push   %eax$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	68 50 7f 10 f0       	push   $0xf0107f50$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	e8 2f d8 ff ff       	call   f010374e <cprintf>$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	eb 54                	jmp    f0105f7b <spin_unlock+0xb2>$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	57                   	push   %edi$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	50                   	push   %eax$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	e8 67 eb ff ff       	call   f0104a98 <debuginfo_eip>$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	85 c0                	test   %eax,%eax$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	78 27                	js     f0105f5f <spin_unlock+0x96>$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	8b 06                	mov    (%esi),%eax$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105f3d	obj/kern/kernel.asm	/^f0105f3d:	89 c2                	mov    %eax,%edx$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	52                   	push   %edx$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	50                   	push   %eax$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	68 98 7f 10 f0       	push   $0xf0107f98$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	e8 f4 d7 ff ff       	call   f010374e <cprintf>$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	eb 12                	jmp    f0105f71 <spin_unlock+0xa8>$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	ff 36                	pushl  (%esi)$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	68 af 7f 10 f0       	push   $0xf0107faf$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	e8 e0 d7 ff ff       	call   f010374e <cprintf>$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	74 08                	je     f0105f83 <spin_unlock+0xba>$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	89 de                	mov    %ebx,%esi$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	85 c0                	test   %eax,%eax$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	75 a4                	jne    f0105f27 <spin_unlock+0x5e>$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	68 b7 7f 10 f0       	push   $0xf0107fb7$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	6a 67                	push   $0x67$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	68 88 7f 10 f0       	push   $0xf0107f88$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	e8 fd a0 ff ff       	call   f0100094 <_panic>$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	5b                   	pop    %ebx$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	5e                   	pop    %esi$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	5f                   	pop    %edi$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	5d                   	pop    %ebp$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	c3                   	ret    $/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	66 90                	xchg   %ax,%ax$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	66 90                	xchg   %ax,%ax$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	66 90                	xchg   %ax,%ax$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	66 90                	xchg   %ax,%ax$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	66 90                	xchg   %ax,%ax$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	90                   	nop$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0 <__udivdi3>:$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	55                   	push   %ebp$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	57                   	push   %edi$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	56                   	push   %esi$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	53                   	push   %ebx$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	85 f6                	test   %esi,%esi$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	89 ca                	mov    %ecx,%edx$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	89 f8                	mov    %edi,%eax$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	75 3d                	jne    f0106020 <__udivdi3+0x60>$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	39 cf                	cmp    %ecx,%edi$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	0f 87 c5 00 00 00    	ja     f01060b0 <__udivdi3+0xf0>$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	85 ff                	test   %edi,%edi$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	89 fd                	mov    %edi,%ebp$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	75 0b                	jne    f0105ffc <__udivdi3+0x3c>$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	31 d2                	xor    %edx,%edx$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	f7 f7                	div    %edi$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	89 c5                	mov    %eax,%ebp$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	89 c8                	mov    %ecx,%eax$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	31 d2                	xor    %edx,%edx$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	f7 f5                	div    %ebp$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	89 c1                	mov    %eax,%ecx$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	89 d8                	mov    %ebx,%eax$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	89 cf                	mov    %ecx,%edi$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	f7 f5                	div    %ebp$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	89 c3                	mov    %eax,%ebx$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	89 d8                	mov    %ebx,%eax$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	89 fa                	mov    %edi,%edx$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	5b                   	pop    %ebx$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	5e                   	pop    %esi$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	5f                   	pop    %edi$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	5d                   	pop    %ebp$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	c3                   	ret    $/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	90                   	nop$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	77 74                	ja     f0106098 <__udivdi3+0xd8>$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	0f 84 98 00 00 00    	je     f01060c8 <__udivdi3+0x108>$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	89 f9                	mov    %edi,%ecx$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	89 c5                	mov    %eax,%ebp$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	29 fb                	sub    %edi,%ebx$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	d3 e6                	shl    %cl,%esi$/;"	d
f010603d	obj/kern/kernel.asm	/^f010603d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106041	obj/kern/kernel.asm	/^f0106041:	89 f9                	mov    %edi,%ecx$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	d3 e0                	shl    %cl,%eax$/;"	d
f0106045	obj/kern/kernel.asm	/^f0106045:	09 ee                	or     %ebp,%esi$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	89 d5                	mov    %edx,%ebp$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106055	obj/kern/kernel.asm	/^f0106055:	89 f9                	mov    %edi,%ecx$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	d3 e2                	shl    %cl,%edx$/;"	d
f0106059	obj/kern/kernel.asm	/^f0106059:	89 d9                	mov    %ebx,%ecx$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	d3 e8                	shr    %cl,%eax$/;"	d
f010605d	obj/kern/kernel.asm	/^f010605d:	09 c2                	or     %eax,%edx$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	89 d0                	mov    %edx,%eax$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	89 ea                	mov    %ebp,%edx$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	f7 f6                	div    %esi$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	89 d5                	mov    %edx,%ebp$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	89 c3                	mov    %eax,%ebx$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	72 10                	jb     f0106081 <__udivdi3+0xc1>$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	89 f9                	mov    %edi,%ecx$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	d3 e6                	shl    %cl,%esi$/;"	d
f0106079	obj/kern/kernel.asm	/^f0106079:	39 c6                	cmp    %eax,%esi$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	73 07                	jae    f0106084 <__udivdi3+0xc4>$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	75 03                	jne    f0106084 <__udivdi3+0xc4>$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	31 ff                	xor    %edi,%edi$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	89 d8                	mov    %ebx,%eax$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	89 fa                	mov    %edi,%edx$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	5b                   	pop    %ebx$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	5e                   	pop    %esi$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	5f                   	pop    %edi$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	5d                   	pop    %ebp$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	c3                   	ret    $/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	31 ff                	xor    %edi,%edi$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	31 db                	xor    %ebx,%ebx$/;"	l
f010609c	obj/kern/kernel.asm	/^f010609c:	89 d8                	mov    %ebx,%eax$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	89 fa                	mov    %edi,%edx$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	5b                   	pop    %ebx$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	5e                   	pop    %esi$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	5f                   	pop    %edi$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	5d                   	pop    %ebp$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	c3                   	ret    $/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	90                   	nop$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	89 d8                	mov    %ebx,%eax$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	f7 f7                	div    %edi$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	31 ff                	xor    %edi,%edi$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	89 d8                	mov    %ebx,%eax$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	89 fa                	mov    %edi,%edx$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	5b                   	pop    %ebx$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	5e                   	pop    %esi$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	5f                   	pop    %edi$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	5d                   	pop    %ebp$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	c3                   	ret    $/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	39 ce                	cmp    %ecx,%esi$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	72 0c                	jb     f01060d8 <__udivdi3+0x118>$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	31 db                	xor    %ebx,%ebx$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	0f 87 34 ff ff ff    	ja     f010600c <__udivdi3+0x4c>$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	e9 2a ff ff ff       	jmp    f010600c <__udivdi3+0x4c>$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	66 90                	xchg   %ax,%ax$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	66 90                	xchg   %ax,%ax$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	66 90                	xchg   %ax,%ax$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	66 90                	xchg   %ax,%ax$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	66 90                	xchg   %ax,%ax$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	66 90                	xchg   %ax,%ax$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	66 90                	xchg   %ax,%ax$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0 <__umoddi3>:$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	55                   	push   %ebp$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	57                   	push   %edi$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	56                   	push   %esi$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	53                   	push   %ebx$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	85 d2                	test   %edx,%edx$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	89 f3                	mov    %esi,%ebx$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	75 1c                	jne    f0106138 <__umoddi3+0x48>$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	39 f7                	cmp    %esi,%edi$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	76 50                	jbe    f0106170 <__umoddi3+0x80>$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	89 c8                	mov    %ecx,%eax$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	89 f2                	mov    %esi,%edx$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	f7 f7                	div    %edi$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	89 d0                	mov    %edx,%eax$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	31 d2                	xor    %edx,%edx$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	5b                   	pop    %ebx$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	5e                   	pop    %esi$/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f:	5f                   	pop    %edi$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	5d                   	pop    %ebp$/;"	l
f0106131	obj/kern/kernel.asm	/^f0106131:	c3                   	ret    $/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	39 f2                	cmp    %esi,%edx$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	89 d0                	mov    %edx,%eax$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	77 52                	ja     f0106190 <__umoddi3+0xa0>$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	75 5a                	jne    f01061a0 <__umoddi3+0xb0>$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	0f 82 e0 00 00 00    	jb     f0106230 <__umoddi3+0x140>$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	0f 86 d7 00 00 00    	jbe    f0106230 <__umoddi3+0x140>$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	5b                   	pop    %ebx$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	5e                   	pop    %esi$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	5f                   	pop    %edi$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	5d                   	pop    %ebp$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	c3                   	ret    $/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106170	obj/kern/kernel.asm	/^f0106170:	85 ff                	test   %edi,%edi$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	89 fd                	mov    %edi,%ebp$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	75 0b                	jne    f0106181 <__umoddi3+0x91>$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	31 d2                	xor    %edx,%edx$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	f7 f7                	div    %edi$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	89 c5                	mov    %eax,%ebp$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	89 f0                	mov    %esi,%eax$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	31 d2                	xor    %edx,%edx$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	f7 f5                	div    %ebp$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	89 c8                	mov    %ecx,%eax$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	f7 f5                	div    %ebp$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	89 d0                	mov    %edx,%eax$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	eb 99                	jmp    f0106128 <__umoddi3+0x38>$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	90                   	nop$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	89 c8                	mov    %ecx,%eax$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	89 f2                	mov    %esi,%edx$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	5b                   	pop    %ebx$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	5e                   	pop    %esi$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	5f                   	pop    %edi$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	5d                   	pop    %ebp$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	c3                   	ret    $/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	29 ef                	sub    %ebp,%edi$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	d3 e0                	shl    %cl,%eax$/;"	d
f01061ae	obj/kern/kernel.asm	/^f01061ae:	89 f9                	mov    %edi,%ecx$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	89 f2                	mov    %esi,%edx$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	d3 ea                	shr    %cl,%edx$/;"	d
f01061b4	obj/kern/kernel.asm	/^f01061b4:	89 e9                	mov    %ebp,%ecx$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	09 c2                	or     %eax,%edx$/;"	l
f01061b8	obj/kern/kernel.asm	/^f01061b8:	89 d8                	mov    %ebx,%eax$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	89 f2                	mov    %esi,%edx$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	d3 e2                	shl    %cl,%edx$/;"	d
f01061c1	obj/kern/kernel.asm	/^f01061c1:	89 f9                	mov    %edi,%ecx$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	d3 e8                	shr    %cl,%eax$/;"	d
f01061cd	obj/kern/kernel.asm	/^f01061cd:	89 e9                	mov    %ebp,%ecx$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	89 c6                	mov    %eax,%esi$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	d3 e3                	shl    %cl,%ebx$/;"	d
f01061d3	obj/kern/kernel.asm	/^f01061d3:	89 f9                	mov    %edi,%ecx$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	89 d0                	mov    %edx,%eax$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	d3 e8                	shr    %cl,%eax$/;"	d
f01061d9	obj/kern/kernel.asm	/^f01061d9:	89 e9                	mov    %ebp,%ecx$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	09 d8                	or     %ebx,%eax$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	89 d3                	mov    %edx,%ebx$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	89 f2                	mov    %esi,%edx$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	f7 34 24             	divl   (%esp)$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	89 d6                	mov    %edx,%esi$/;"	l
f01061e6	obj/kern/kernel.asm	/^f01061e6:	d3 e3                	shl    %cl,%ebx$/;"	d
f01061e8	obj/kern/kernel.asm	/^f01061e8:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	39 d6                	cmp    %edx,%esi$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	89 d1                	mov    %edx,%ecx$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	89 c3                	mov    %eax,%ebx$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	72 08                	jb     f0106200 <__umoddi3+0x110>$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	75 11                	jne    f010620b <__umoddi3+0x11b>$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	73 0b                	jae    f010620b <__umoddi3+0x11b>$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	89 d1                	mov    %edx,%ecx$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	89 c3                	mov    %eax,%ebx$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	29 da                	sub    %ebx,%edx$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	89 f9                	mov    %edi,%ecx$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	89 f0                	mov    %esi,%eax$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	d3 e0                	shl    %cl,%eax$/;"	d
f0106219	obj/kern/kernel.asm	/^f0106219:	89 e9                	mov    %ebp,%ecx$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	d3 ea                	shr    %cl,%edx$/;"	d
f010621d	obj/kern/kernel.asm	/^f010621d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106221	obj/kern/kernel.asm	/^f0106221:	09 d0                	or     %edx,%eax$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	89 f2                	mov    %esi,%edx$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	5b                   	pop    %ebx$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	5e                   	pop    %esi$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	5f                   	pop    %edi$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	5d                   	pop    %ebp$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	c3                   	ret    $/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	29 f9                	sub    %edi,%ecx$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	19 d6                	sbb    %edx,%esi$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	e9 18 ff ff ff       	jmp    f0106159 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon6
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file; $/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;\/\/这里有什么用？？？$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnfaultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultio.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnfaultio.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultio.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnfaultio.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE); \/\/传回一个虚拟地址$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
len	obj/kern/kernel.asm	/^		len = size \/ PGSIZE +1;$/;"	d
len	obj/kern/kernel.asm	/^		len = size \/ PGSIZE;$/;"	d
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnfaultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultio.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnfaultio.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnfaultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE; \/\/因为栈向下增长？$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon10	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon10	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/fs/fs.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultio.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/spawnfaultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnfaultio.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here ，我傻了把，这么大一个冒号看不见?这里不就是函数内容嘛！！！*\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnfaultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP(nextfree+n, PGSIZE);\/\/enough and multiple of PGSIZE$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnfaultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultio.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnfaultio.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnfaultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page是一个专门记录着这个open file的基本信息的页面$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file应该是打开的那个文件的file pointer$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id。 The client uses file IDs to communicate with the server.$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnfaultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnfaultio.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELF_Header + ELF_Header->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnfaultio.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^	pp = page_alloc(1); \/\/参数为1就是初始化页面内容为0。$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_free_list;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnfaultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnfaultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnfaultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnfaultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(env->env_pgdir, (void *)i, 0);$/;"	d
pte	obj/kern/kernel.asm	/^	pte = (pte_t *)KADDR(PTE_ADDR(*pde));\/\/ The first address of the page table$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnfaultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(e->env_pgdir, pp, va, perm);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultio.asm	/^			r = 0;$/;"	d
r	obj/user/faultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = 0;$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnfaultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid; \/\/想读取的那个目标文件id$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;  \/\/Read at most ipc->read.req_n bytes $/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_n	obj/fs/fs.asm	/^        req_n = req->req_n > PGSIZE ? PGSIZE : req->req_n;$/;"	d
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnfaultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnfaultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnfaultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon7	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultio.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnfaultio.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"  (signature:署名，签名，信号)$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultio.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnfaultio.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
srcpp	obj/kern/kernel.asm	/^	srcpp = page_lookup(srce->env_pgdir, srcva, &srcpte);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnfaultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultio.asm	/^static inline uint32_t$/;"	l
static	obj/user/faultio.asm	/^static inline void$/;"	l
static	obj/user/faultio.asm	/^static int$/;"	l
static	obj/user/faultio.asm	/^static long long$/;"	l
static	obj/user/faultio.asm	/^static ssize_t$/;"	l
static	obj/user/faultio.asm	/^static unsigned long long$/;"	l
static	obj/user/faultio.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnfaultio.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnfaultio.asm	/^static int$/;"	l
static	obj/user/spawnfaultio.asm	/^static long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static ssize_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnfaultio.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnfaultio.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultio	grade-lab5	/^def test_faultio():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnfaultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon6
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnfaultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (i < (uintptr_t)va? (uintptr_t)va : i);$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(tf->tf_esp - sizeof(struct UTrapframe) -4);$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnfaultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultio.asm	/^void *$/;"	l
void	obj/user/faultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultio.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnfaultio.asm	/^void *$/;"	l
void	obj/user/spawnfaultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnfaultio.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
who	obj/user/forktree.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/pingpong.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/pingpongs.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/primes.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/primespipe.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/sendpage.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/sh.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/spin.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/stresssched.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testfdsharing.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpipe.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpiperace.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpiperace2.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpteshare.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testshell.asm	/^	who = sys_exofork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultio.asm	/^				width = 0;$/;"	d
width	obj/user/faultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultio.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = 0;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon7	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
